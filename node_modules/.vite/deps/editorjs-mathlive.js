import {
  __commonJS
} from "./chunk-BUSYA2B4.js";

// node_modules/editorjs-mathlive/dist/bundle.js
var require_bundle = __commonJS({
  "node_modules/editorjs-mathlive/dist/bundle.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.MathEditor = t() : e.MathEditor = t();
    }(self, () => (() => {
      var e = { 264: (e2) => {
        !function(e3, t2, a2, r2, i) {
          if ("customElements" in a2) i();
          else {
            if (a2.AWAITING_WEB_COMPONENTS_POLYFILL) return void a2.AWAITING_WEB_COMPONENTS_POLYFILL.then(i);
            var o = a2.AWAITING_WEB_COMPONENTS_POLYFILL = l();
            o.then(i);
            var n = a2.WEB_COMPONENTS_POLYFILL || "//cdnjs.cloudflare.com/ajax/libs/webcomponentsjs/2.0.2/webcomponents-bundle.js", s = a2.ES6_CORE_POLYFILL || "//cdnjs.cloudflare.com/ajax/libs/core-js/2.5.3/core.min.js";
            "Promise" in a2 ? d(n).then(function() {
              o.isDone = true, o.exec();
            }) : d(s).then(function() {
              d(n).then(function() {
                o.isDone = true, o.exec();
              });
            });
          }
          function l() {
            var e4 = [];
            return e4.isDone = false, e4.exec = function() {
              e4.splice(0).forEach(function(e5) {
                e5();
              });
            }, e4.then = function(t3) {
              return e4.isDone ? t3() : e4.push(t3), e4;
            }, e4;
          }
          function d(e4) {
            var t3 = l(), a3 = r2.createElement("script");
            return a3.type = "text/javascript", a3.readyState ? a3.onreadystatechange = function() {
              "loaded" != a3.readyState && "complete" != a3.readyState || (a3.onreadystatechange = null, t3.isDone = true, t3.exec());
            } : a3.onload = function() {
              t3.isDone = true, t3.exec();
            }, a3.src = e4, r2.getElementsByTagName("head")[0].appendChild(a3), a3.then = t3.then, a3;
          }
        }(0, 0, window, document, function() {
          var t2;
          window, t2 = function() {
            return function(e3) {
              var t3 = {};
              function a2(r2) {
                if (t3[r2]) return t3[r2].exports;
                var i = t3[r2] = { i: r2, l: false, exports: {} };
                return e3[r2].call(i.exports, i, i.exports, a2), i.l = true, i.exports;
              }
              return a2.m = e3, a2.c = t3, a2.d = function(e4, t4, r2) {
                a2.o(e4, t4) || Object.defineProperty(e4, t4, { enumerable: true, get: r2 });
              }, a2.r = function(e4) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
              }, a2.t = function(e4, t4) {
                if (1 & t4 && (e4 = a2(e4)), 8 & t4) return e4;
                if (4 & t4 && "object" == typeof e4 && e4 && e4.__esModule) return e4;
                var r2 = /* @__PURE__ */ Object.create(null);
                if (a2.r(r2), Object.defineProperty(r2, "default", { enumerable: true, value: e4 }), 2 & t4 && "string" != typeof e4) for (var i in e4) a2.d(r2, i, (function(t5) {
                  return e4[t5];
                }).bind(null, i));
                return r2;
              }, a2.n = function(e4) {
                var t4 = e4 && e4.__esModule ? function() {
                  return e4.default;
                } : function() {
                  return e4;
                };
                return a2.d(t4, "a", t4), t4;
              }, a2.o = function(e4, t4) {
                return Object.prototype.hasOwnProperty.call(e4, t4);
              }, a2.p = "", a2(a2.s = 5);
            }([function(e3, t3) {
              e3.exports = function(e4) {
                var t4 = [];
                return t4.toString = function() {
                  return this.map(function(t5) {
                    var a2 = function(e5, t6) {
                      var a3, r2 = e5[1] || "", i = e5[3];
                      if (!i) return r2;
                      if (t6 && "function" == typeof btoa) {
                        var o = (a3 = i, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(a3)))) + " */"), n = i.sources.map(function(e6) {
                          return "/*# sourceURL=" + i.sourceRoot + e6 + " */";
                        });
                        return [r2].concat(n).concat([o]).join("\n");
                      }
                      return [r2].join("\n");
                    }(t5, e4);
                    return t5[2] ? "@media " + t5[2] + "{" + a2 + "}" : a2;
                  }).join("");
                }, t4.i = function(e5, a2) {
                  "string" == typeof e5 && (e5 = [[null, e5, ""]]);
                  for (var r2 = {}, i = 0; i < this.length; i++) {
                    var o = this[i][0];
                    "number" == typeof o && (r2[o] = true);
                  }
                  for (i = 0; i < e5.length; i++) {
                    var n = e5[i];
                    "number" == typeof n[0] && r2[n[0]] || (a2 && !n[2] ? n[2] = a2 : a2 && (n[2] = "(" + n[2] + ") and (" + a2 + ")"), t4.push(n));
                  }
                }, t4;
              };
            }, function(e3, t3, a2) {
              var r2 = a2(3);
              e3.exports = "string" == typeof r2 ? r2 : r2.toString();
            }, function(e3, t3, a2) {
              var r2 = a2(4);
              e3.exports = "string" == typeof r2 ? r2 : r2.toString();
            }, function(e3, t3, a2) {
              (e3.exports = a2(0)(false)).push([e3.i, "@-webkit-keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@-webkit-keyframes burst{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}90%{-webkit-transform:scale(1.5);transform:scale(1.5);opacity:0}}@keyframes burst{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}90%{-webkit-transform:scale(1.5);transform:scale(1.5);opacity:0}}@-webkit-keyframes flashing{0%{opacity:1}45%{opacity:0}90%{opacity:1}}@keyframes flashing{0%{opacity:1}45%{opacity:0}90%{opacity:1}}@-webkit-keyframes fade-left{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(-20px);transform:translateX(-20px);opacity:0}}@keyframes fade-left{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(-20px);transform:translateX(-20px);opacity:0}}@-webkit-keyframes fade-right{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(20px);transform:translateX(20px);opacity:0}}@keyframes fade-right{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(20px);transform:translateX(20px);opacity:0}}@-webkit-keyframes fade-up{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(-20px);transform:translateY(-20px);opacity:0}}@keyframes fade-up{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(-20px);transform:translateY(-20px);opacity:0}}@-webkit-keyframes fade-down{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(20px);transform:translateY(20px);opacity:0}}@keyframes fade-down{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(20px);transform:translateY(20px);opacity:0}}@-webkit-keyframes tada{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}10%,20%{-webkit-transform:scale3d(.95,.95,.95) rotate(-10deg);transform:scale3d(.95,.95,.95) rotate(-10deg)}30%,50%,70%,90%{-webkit-transform:scaleX(1) rotate(10deg);transform:scaleX(1) rotate(10deg)}40%,60%,80%{-webkit-transform:scaleX(1) rotate(-10deg);transform:scaleX(1) rotate(-10deg)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes tada{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}10%,20%{-webkit-transform:scale3d(.95,.95,.95) rotate(-10deg);transform:scale3d(.95,.95,.95) rotate(-10deg)}30%,50%,70%,90%{-webkit-transform:scaleX(1) rotate(10deg);transform:scaleX(1) rotate(10deg)}40%,60%,80%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}.bx-spin,.bx-spin-hover:hover{-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite}.bx-tada,.bx-tada-hover:hover{-webkit-animation:tada 1.5s ease infinite;animation:tada 1.5s ease infinite}.bx-flashing,.bx-flashing-hover:hover{-webkit-animation:flashing 1.5s infinite linear;animation:flashing 1.5s infinite linear}.bx-burst,.bx-burst-hover:hover{-webkit-animation:burst 1.5s infinite linear;animation:burst 1.5s infinite linear}.bx-fade-up,.bx-fade-up-hover:hover{-webkit-animation:fade-up 1.5s infinite linear;animation:fade-up 1.5s infinite linear}.bx-fade-down,.bx-fade-down-hover:hover{-webkit-animation:fade-down 1.5s infinite linear;animation:fade-down 1.5s infinite linear}.bx-fade-left,.bx-fade-left-hover:hover{-webkit-animation:fade-left 1.5s infinite linear;animation:fade-left 1.5s infinite linear}.bx-fade-right,.bx-fade-right-hover:hover{-webkit-animation:fade-right 1.5s infinite linear;animation:fade-right 1.5s infinite linear}", ""]);
            }, function(e3, t3, a2) {
              (e3.exports = a2(0)(false)).push([e3.i, '.bx-rotate-90{transform:rotate(90deg);-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)"}.bx-rotate-180{transform:rotate(180deg);-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)"}.bx-rotate-270{transform:rotate(270deg);-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)"}.bx-flip-horizontal{transform:scaleX(-1);-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)"}.bx-flip-vertical{transform:scaleY(-1);-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)"}', ""]);
            }, function(e3, t3, a2) {
              "use strict";
              a2.r(t3), a2.d(t3, "BoxIconElement", function() {
                return g;
              });
              var r2, i, o, n, s = a2(1), l = a2.n(s), d = a2(2), c = a2.n(d), u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
                return typeof e4;
              } : function(e4) {
                return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
              }, p = /* @__PURE__ */ function() {
                function e4(e5, t4) {
                  for (var a3 = 0; a3 < t4.length; a3++) {
                    var r3 = t4[a3];
                    r3.enumerable = r3.enumerable || false, r3.configurable = true, "value" in r3 && (r3.writable = true), Object.defineProperty(e5, r3.key, r3);
                  }
                }
                return function(t4, a3, r3) {
                  return a3 && e4(t4.prototype, a3), r3 && e4(t4, r3), t4;
                };
              }(), h = (i = (r2 = Object).getPrototypeOf || function(e4) {
                return e4.__proto__;
              }, o = r2.setPrototypeOf || function(e4, t4) {
                return e4.__proto__ = t4, e4;
              }, n = "object" === ("undefined" == typeof Reflect ? "undefined" : u(Reflect)) ? Reflect.construct : function(e4, t4, a3) {
                var r3, i2 = [null];
                return i2.push.apply(i2, t4), r3 = e4.bind.apply(e4, i2), o(new r3(), a3.prototype);
              }, function(e4) {
                var t4 = i(e4);
                return o(e4, o(function() {
                  return n(t4, arguments, i(this).constructor);
                }, t4));
              }), m = window, f = {}, y = document.createElement("template"), b = function() {
                return !!m.ShadyCSS;
              };
              y.innerHTML = '\n<style>\n:host {\n  display: inline-block;\n  font-size: initial;\n  box-sizing: border-box;\n  width: 24px;\n  height: 24px;\n}\n:host([size=xs]) {\n    width: 0.8rem;\n    height: 0.8rem;\n}\n:host([size=sm]) {\n    width: 1.55rem;\n    height: 1.55rem;\n}\n:host([size=md]) {\n    width: 2.25rem;\n    height: 2.25rem;\n}\n:host([size=lg]) {\n    width: 3.0rem;\n    height: 3.0rem;\n}\n\n:host([size]:not([size=""]):not([size=xs]):not([size=sm]):not([size=md]):not([size=lg])) {\n    width: auto;\n    height: auto;\n}\n:host([pull=left]) #icon {\n    float: left;\n    margin-right: .3em!important;\n}\n:host([pull=right]) #icon {\n    float: right;\n    margin-left: .3em!important;\n}\n:host([border=square]) #icon {\n    padding: .25em;\n    border: .07em solid rgba(0,0,0,.1);\n    border-radius: .25em;\n}\n:host([border=circle]) #icon {\n    padding: .25em;\n    border: .07em solid rgba(0,0,0,.1);\n    border-radius: 50%;\n}\n#icon,\nsvg {\n  width: 100%;\n  height: 100%;\n}\n#icon {\n    box-sizing: border-box;\n} \n' + l.a + "\n" + c.a + '\n</style>\n<div id="icon"></div>';
              var g = h(function(e4) {
                function t4() {
                  !function(e6, t5) {
                    if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
                  }(this, t4);
                  var e5 = function(e6, t5) {
                    if (!e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t5 || "object" != typeof t5 && "function" != typeof t5 ? e6 : t5;
                  }(this, (t4.__proto__ || Object.getPrototypeOf(t4)).call(this));
                  return e5.$ui = e5.attachShadow({ mode: "open" }), e5.$ui.appendChild(e5.ownerDocument.importNode(y.content, true)), b() && m.ShadyCSS.styleElement(e5), e5._state = { $iconHolder: e5.$ui.getElementById("icon"), type: e5.getAttribute("type") }, e5;
                }
                return function(e5, t5) {
                  if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function, not " + typeof t5);
                  e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, enumerable: false, writable: true, configurable: true } }), t5 && (Object.setPrototypeOf ? Object.setPrototypeOf(e5, t5) : e5.__proto__ = t5);
                }(t4, HTMLElement), p(t4, null, [{ key: "getIconSvg", value: function(e5, t5) {
                  var a3 = this.cdnUrl + "/regular/bx-" + e5 + ".svg";
                  return "solid" === t5 ? a3 = this.cdnUrl + "/solid/bxs-" + e5 + ".svg" : "logo" === t5 && (a3 = this.cdnUrl + "/logos/bxl-" + e5 + ".svg"), a3 && f[a3] || (f[a3] = new Promise(function(e6, t6) {
                    var r3 = new XMLHttpRequest();
                    r3.addEventListener("load", function() {
                      this.status < 200 || this.status >= 300 ? t6(new Error(this.status + " " + this.responseText)) : e6(this.responseText);
                    }), r3.onerror = t6, r3.onabort = t6, r3.open("GET", a3), r3.send();
                  })), f[a3];
                } }, { key: "define", value: function(e5) {
                  e5 = e5 || this.tagName, b() && m.ShadyCSS.prepareTemplate(y, e5), customElements.define(e5, this);
                } }, { key: "cdnUrl", get: function() {
                  return "//unpkg.com/boxicons@2.1.4/svg";
                } }, { key: "tagName", get: function() {
                  return "box-icon";
                } }, { key: "observedAttributes", get: function() {
                  return ["type", "name", "color", "size", "rotate", "flip", "animation", "border", "pull"];
                } }]), p(t4, [{ key: "attributeChangedCallback", value: function(e5, t5, a3) {
                  var r3 = this._state.$iconHolder;
                  switch (e5) {
                    case "type":
                      !function(e6, t6, a4) {
                        var r4 = e6._state;
                        r4.$iconHolder.textContent = "", r4.type && (r4.type = null), r4.type = !a4 || "solid" !== a4 && "logo" !== a4 ? "regular" : a4, void 0 !== r4.currentName && e6.constructor.getIconSvg(r4.currentName, r4.type).then(function(e7) {
                          r4.type === a4 && (r4.$iconHolder.innerHTML = e7);
                        }).catch(function(e7) {
                          console.error("Failed to load icon: " + r4.currentName + "\n" + e7);
                        });
                      }(this, 0, a3);
                      break;
                    case "name":
                      !function(e6, t6, a4) {
                        var r4 = e6._state;
                        r4.currentName = a4, r4.$iconHolder.textContent = "", a4 && void 0 !== r4.type && e6.constructor.getIconSvg(a4, r4.type).then(function(e7) {
                          r4.currentName === a4 && (r4.$iconHolder.innerHTML = e7);
                        }).catch(function(e7) {
                          console.error("Failed to load icon: " + a4 + "\n" + e7);
                        });
                      }(this, 0, a3);
                      break;
                    case "color":
                      r3.style.fill = a3 || "";
                      break;
                    case "size":
                      !function(e6, t6, a4) {
                        var r4 = e6._state;
                        r4.size && (r4.$iconHolder.style.width = r4.$iconHolder.style.height = "", r4.size = r4.sizeType = null), a4 && !/^(xs|sm|md|lg)$/.test(r4.size) && (r4.size = a4.trim(), r4.$iconHolder.style.width = r4.$iconHolder.style.height = r4.size);
                      }(this, 0, a3);
                      break;
                    case "rotate":
                      t5 && r3.classList.remove("bx-rotate-" + t5), a3 && r3.classList.add("bx-rotate-" + a3);
                      break;
                    case "flip":
                      t5 && r3.classList.remove("bx-flip-" + t5), a3 && r3.classList.add("bx-flip-" + a3);
                      break;
                    case "animation":
                      t5 && r3.classList.remove("bx-" + t5), a3 && r3.classList.add("bx-" + a3);
                  }
                } }, { key: "connectedCallback", value: function() {
                  b() && m.ShadyCSS.styleElement(this);
                } }]), t4;
              }());
              t3.default = g, g.define();
            }]);
          }, e2.exports = t2();
        });
      }, 424: (e2, t2, a2) => {
        "use strict";
        a2.d(t2, { Z: () => s });
        var r2 = a2(81), i = a2.n(r2), o = a2(645), n = a2.n(o)()(i());
        n.push([e2.id, "\r\n.cdx-math-primary {\r\n    color: #2b6cb0;\r\n}\r\n\r\n.cdx-math-info {\r\n    color: #ecb939;\r\n}\r\n\r\n.cdx-math-secondary {\r\n    color: #010057;\r\n}\r\n.cdx-math-warning {\r\n  color: #800000\r\n}\r\n\r\n.cdx-math-success {\r\n    color:#008080\r\n}\r\n\r\n.cdx-math-choco {\r\n    color: #5c3c3a\r\n}\r\n\r\n.cdx-math-pink {\r\n    color:#db0961\r\n}\r\n.cdx-math-danger {\r\n    color: #c53030;\r\n}\r\n\r\n.cdx-math-light {\r\n    color: #372e29;\r\n  }\r\n  \r\n  .cdx-math-dark {\r\n    color: #d3d3d3;\r\n  }", ""]);
        const s = n;
      }, 645: (e2) => {
        "use strict";
        e2.exports = function(e3) {
          var t2 = [];
          return t2.toString = function() {
            return this.map(function(t3) {
              var a2 = "", r2 = void 0 !== t3[5];
              return t3[4] && (a2 += "@supports (".concat(t3[4], ") {")), t3[2] && (a2 += "@media ".concat(t3[2], " {")), r2 && (a2 += "@layer".concat(t3[5].length > 0 ? " ".concat(t3[5]) : "", " {")), a2 += e3(t3), r2 && (a2 += "}"), t3[2] && (a2 += "}"), t3[4] && (a2 += "}"), a2;
            }).join("");
          }, t2.i = function(e4, a2, r2, i, o) {
            "string" == typeof e4 && (e4 = [[null, e4, void 0]]);
            var n = {};
            if (r2) for (var s = 0; s < this.length; s++) {
              var l = this[s][0];
              null != l && (n[l] = true);
            }
            for (var d = 0; d < e4.length; d++) {
              var c = [].concat(e4[d]);
              r2 && n[c[0]] || (void 0 !== o && (void 0 === c[5] || (c[1] = "@layer".concat(c[5].length > 0 ? " ".concat(c[5]) : "", " {").concat(c[1], "}")), c[5] = o), a2 && (c[2] ? (c[1] = "@media ".concat(c[2], " {").concat(c[1], "}"), c[2] = a2) : c[2] = a2), i && (c[4] ? (c[1] = "@supports (".concat(c[4], ") {").concat(c[1], "}"), c[4] = i) : c[4] = "".concat(i)), t2.push(c));
            }
          }, t2;
        };
      }, 81: (e2) => {
        "use strict";
        e2.exports = function(e3) {
          return e3[1];
        };
      }, 379: (e2) => {
        "use strict";
        var t2 = [];
        function a2(e3) {
          for (var a3 = -1, r3 = 0; r3 < t2.length; r3++) if (t2[r3].identifier === e3) {
            a3 = r3;
            break;
          }
          return a3;
        }
        function r2(e3, r3) {
          for (var o = {}, n = [], s = 0; s < e3.length; s++) {
            var l = e3[s], d = r3.base ? l[0] + r3.base : l[0], c = o[d] || 0, u = "".concat(d, " ").concat(c);
            o[d] = c + 1;
            var p = a2(u), h = { css: l[1], media: l[2], sourceMap: l[3], supports: l[4], layer: l[5] };
            if (-1 !== p) t2[p].references++, t2[p].updater(h);
            else {
              var m = i(h, r3);
              r3.byIndex = s, t2.splice(s, 0, { identifier: u, updater: m, references: 1 });
            }
            n.push(u);
          }
          return n;
        }
        function i(e3, t3) {
          var a3 = t3.domAPI(t3);
          return a3.update(e3), function(t4) {
            if (t4) {
              if (t4.css === e3.css && t4.media === e3.media && t4.sourceMap === e3.sourceMap && t4.supports === e3.supports && t4.layer === e3.layer) return;
              a3.update(e3 = t4);
            } else a3.remove();
          };
        }
        e2.exports = function(e3, i2) {
          var o = r2(e3 = e3 || [], i2 = i2 || {});
          return function(e4) {
            e4 = e4 || [];
            for (var n = 0; n < o.length; n++) {
              var s = a2(o[n]);
              t2[s].references--;
            }
            for (var l = r2(e4, i2), d = 0; d < o.length; d++) {
              var c = a2(o[d]);
              0 === t2[c].references && (t2[c].updater(), t2.splice(c, 1));
            }
            o = l;
          };
        };
      }, 569: (e2) => {
        "use strict";
        var t2 = {};
        e2.exports = function(e3, a2) {
          var r2 = function(e4) {
            if (void 0 === t2[e4]) {
              var a3 = document.querySelector(e4);
              if (window.HTMLIFrameElement && a3 instanceof window.HTMLIFrameElement) try {
                a3 = a3.contentDocument.head;
              } catch (e5) {
                a3 = null;
              }
              t2[e4] = a3;
            }
            return t2[e4];
          }(e3);
          if (!r2) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
          r2.appendChild(a2);
        };
      }, 216: (e2) => {
        "use strict";
        e2.exports = function(e3) {
          var t2 = document.createElement("style");
          return e3.setAttributes(t2, e3.attributes), e3.insert(t2, e3.options), t2;
        };
      }, 565: (e2, t2, a2) => {
        "use strict";
        e2.exports = function(e3) {
          var t3 = a2.nc;
          t3 && e3.setAttribute("nonce", t3);
        };
      }, 795: (e2) => {
        "use strict";
        e2.exports = function(e3) {
          var t2 = e3.insertStyleElement(e3);
          return { update: function(a2) {
            !function(e4, t3, a3) {
              var r2 = "";
              a3.supports && (r2 += "@supports (".concat(a3.supports, ") {")), a3.media && (r2 += "@media ".concat(a3.media, " {"));
              var i = void 0 !== a3.layer;
              i && (r2 += "@layer".concat(a3.layer.length > 0 ? " ".concat(a3.layer) : "", " {")), r2 += a3.css, i && (r2 += "}"), a3.media && (r2 += "}"), a3.supports && (r2 += "}");
              var o = a3.sourceMap;
              o && "undefined" != typeof btoa && (r2 += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o)))), " */")), t3.styleTagTransform(r2, e4, t3.options);
            }(t2, e3, a2);
          }, remove: function() {
            !function(e4) {
              if (null === e4.parentNode) return false;
              e4.parentNode.removeChild(e4);
            }(t2);
          } };
        };
      }, 589: (e2) => {
        "use strict";
        e2.exports = function(e3, t2) {
          if (t2.styleSheet) t2.styleSheet.cssText = e3;
          else {
            for (; t2.firstChild; ) t2.removeChild(t2.firstChild);
            t2.appendChild(document.createTextNode(e3));
          }
        };
      } }, t = {};
      function a(r2) {
        var i = t[r2];
        if (void 0 !== i) return i.exports;
        var o = t[r2] = { id: r2, exports: {} };
        return e[r2](o, o.exports, a), o.exports;
      }
      a.n = (e2) => {
        var t2 = e2 && e2.__esModule ? () => e2.default : () => e2;
        return a.d(t2, { a: t2 }), t2;
      }, a.d = (e2, t2) => {
        for (var r2 in t2) a.o(t2, r2) && !a.o(e2, r2) && Object.defineProperty(e2, r2, { enumerable: true, get: t2[r2] });
      }, a.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2), a.nc = void 0;
      var r = {};
      return (() => {
        "use strict";
        a.d(r, { default: () => as });
        var e2 = a(379), t2 = a.n(e2), i = a(795), o = a.n(i), n = a(569), s = a.n(n), l = a(565), d = a.n(l), c = a(216), u = a.n(c), p = a(589), h = a.n(p), m = a(424), f = {};
        f.styleTagTransform = h(), f.setAttributes = d(), f.insert = s().bind(null, "head"), f.domAPI = o(), f.insertStyleElement = u(), t2()(m.Z, f), m.Z && m.Z.locals && m.Z.locals, a(264);
        var y = Object.defineProperty, b = Object.defineProperties, g = Object.getOwnPropertyDescriptors, v = Object.getOwnPropertySymbols, k = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable, w = (e3, t3, a2) => t3 in e3 ? y(e3, t3, { enumerable: true, configurable: true, writable: true, value: a2 }) : e3[t3] = a2, _ = (e3, t3) => {
          for (var a2 in t3 || (t3 = {})) k.call(t3, a2) && w(e3, a2, t3[a2]);
          if (v) for (var a2 of v(t3)) x.call(t3, a2) && w(e3, a2, t3[a2]);
          return e3;
        }, S = (e3, t3) => b(e3, g(t3));
        function M(e3) {
          return Array.isArray(e3);
        }
        function L() {
          return "window" in globalThis && "document" in globalThis;
        }
        function C() {
          if (!L()) throw new Error("<math-field> is an interactive component that needs to run in a browser environment\nIf you are using nextjs, see https://nextjs.org/docs/advanced-features/dynamic-import#with-no-ssr");
        }
        function A() {
          return !!L() && ("matchMedia" in globalThis ? globalThis.matchMedia("(any-pointer: coarse)").matches : "ontouchstart" in globalThis || navigator.maxTouchPoints > 0);
        }
        function D() {
          return L() && "function" == typeof navigator.vibrate;
        }
        function T() {
          var e3, t3;
          if (!L()) return "other";
          let a2 = null != (t3 = null == (e3 = navigator.userAgentData) ? void 0 : e3.platform) ? t3 : navigator.platform;
          return /^mac/i.test(a2) ? 5 === navigator.maxTouchPoints ? "ios" : "macos" : /^win/i.test(a2) ? "windows" : /android/i.test(navigator.userAgent) ? "android" : /iphone|ipod|ipad/i.test(navigator.userAgent) ? "ios" : /\bcros\b/i.test(navigator.userAgent) ? "chromeos" : "other";
        }
        function z() {
          if (!L()) return true;
          if (/firefox/i.test(navigator.userAgent)) {
            let e3 = navigator.userAgent.match(/firefox\/(\d+)/i);
            return !!e3 && parseInt(e3[1]) >= 78;
          }
          if (/trident/i.test(navigator.userAgent)) return false;
          if (/edge/i.test(navigator.userAgent)) {
            let e3 = navigator.userAgent.match(/edg\/(\d+)/i);
            return !!e3 && parseInt(e3[1]) >= 79;
          }
          return true;
        }
        var B = { strings: { en: { "keyboard.tooltip.functions": "Functions", "keyboard.tooltip.symbols": "Symbols", "keyboard.tooltip.greek": "Greek Letters", "keyboard.tooltip.command": "LaTeX Command Mode", "keyboard.tooltip.numeric": "Numeric", "keyboard.tooltip.roman": "Roman Letters", "tooltip.copy to clipboard": "Copy to Clipboard", "tooltip.redo": "Redo", "tooltip.toggle virtual keyboard": "Toggle Virtual Keyboard", "tooltip.undo": "Undo", "menu.insert matrix": "Insert Matrix", "menu.insert vector": "Insert Vector", "submenu.array.matrix delimiters": "Matrix Delimiters", "menu.array.add row above": "Add Row After", "menu.array.add row below": "Add Row Before", "menu.array.add column after": "Add Column After", "menu.array.add column before": "Add Column Before", "menu.array.delete row": "Delete Row", "menu.array.delete rows": "Delete Selected Rows", "menu.array.delete column": "Delete Column", "menu.array.delete columns": "Delete Selected Columns", "submenu.array.insert separator": "Insert Separator", "menu.insert table": "Insert Table", "submenu.table style": "Table Style" }, ar: { "keyboard.tooltip.functions": "مهام", "keyboard.tooltip.symbols": "حرف او رمز", "keyboard.tooltip.greek": "حروف يونانية", "keyboard.tooltip.command": "حالة تلقي الأوامر اللاتك", "keyboard.tooltip.numeric": "الرقمية", "keyboard.tooltip.roman": "رموز الاحرف الرومانية", "tooltip.copy to clipboard": "نسخ إلى الحافظة", "tooltip.redo": "الإعادة", "tooltip.toggle virtual keyboard": "تبديل لوحة المفاتيح الإفتراضية", "tooltip.undo": "إلغاء", "menu.insert matrix": "أدخل المصفوفة", "menu.insert vector": "أدخل متجه", "submenu.array.matrix delimiters": "محددات المصفوفة", "menu.array.add row above": "أضف صفًا بعد ذلك", "menu.array.add row below": "أضف الصف قبل", "menu.array.add column after": "أضف العمود بعد ذلك", "menu.array.add column before": "أضف العمود قبل", "menu.array.delete row": "احذف صف", "menu.array.delete rows": "حذف الصفوف المحددة", "menu.array.delete column": "حذف العمود", "menu.array.delete columns": "حذف الأعمدة المحددة", "submenu.array.insert separator": "أدخل فاصل", "menu.insert table": "إدراج جدول", "submenu.table style": "نمط الجدول" }, bg: { "keyboard.tooltip.functions": "Функции", "keyboard.tooltip.symbols": "Символи", "keyboard.tooltip.greek": "Гръцки букви", "keyboard.tooltip.command": "Команден режим на латекс", "keyboard.tooltip.numeric": "Числови", "keyboard.tooltip.roman": "Римски букви", "tooltip.copy to clipboard": "Копиране в клипборда", "tooltip.redo": "Повторно", "tooltip.toggle virtual keyboard": "Превключване на виртуална клавиатура", "tooltip.undo": "Отмяна", "menu.insert matrix": "Вмъкване на матрица", "menu.insert vector": "Вмъкване на вектор", "submenu.array.matrix delimiters": "Матрични разделители", "menu.array.add row above": "Добавяне на ред след", "menu.array.add row below": "Добавяне на ред преди", "menu.array.add column after": "Добавяне на колона след", "menu.array.add column before": "Добавяне на колона преди", "menu.array.delete row": "Изтриване на реда", "menu.array.delete rows": "Изтриване на избраните редове", "menu.array.delete column": "Изтриване на колона", "menu.array.delete columns": "Изтриване на избраните колони", "submenu.array.insert separator": "Поставете разделител", "menu.insert table": "Вмъкване на таблица", "submenu.table style": "Табличен стил" }, bs: { "keyboard.tooltip.functions": "Funkcije", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Grčka slova", "keyboard.tooltip.command": "LaTeX naredbeni način", "keyboard.tooltip.numeric": "Numerički", "keyboard.tooltip.roman": "Rimska slova", "tooltip.copy to clipboard": "Kopirati u clipboard", "tooltip.redo": "Ponovi", "tooltip.toggle virtual keyboard": "Uključi / isključi virtualnu tipkovnicu", "tooltip.undo": "Poništi", "menu.insert matrix": "Umetni matricu", "menu.insert vector": "Umetni vektor", "submenu.array.matrix delimiters": "Matrični razdjelnici", "menu.array.add row above": "Dodaj redak nakon", "menu.array.add row below": "Dodaj red prije", "menu.array.add column after": "Dodaj stupac nakon", "menu.array.add column before": "Dodaj stupac prije", "menu.array.delete row": "Izbriši red", "menu.array.delete rows": "Izbriši odabrane redove", "menu.array.delete column": "Izbriši stupac", "menu.array.delete columns": "Izbriši odabrane stupce", "submenu.array.insert separator": "Umetni separator", "menu.insert table": "Ubaci tabelu", "submenu.table style": "Stil tabele" }, cs: { "keyboard.tooltip.functions": "Funkce", "keyboard.tooltip.symbols": "Symboly", "keyboard.tooltip.greek": "Řecké dopisy", "keyboard.tooltip.command": "Příkazový režim LaTeX", "keyboard.tooltip.numeric": "Číselné", "keyboard.tooltip.roman": "Římské dopisy", "tooltip.copy to clipboard": "Zkopírovat do schránky", "tooltip.redo": "Předělat", "tooltip.toggle virtual keyboard": "Přepnout virtuální klávesnici", "tooltip.undo": "Vrátit", "menu.insert matrix": "Vložte matici", "menu.insert vector": "Vložit vektor", "submenu.array.matrix delimiters": "Oddělovače matic", "menu.array.add row above": "Přidat řádek za", "menu.array.add row below": "Přidat řádek před", "menu.array.add column after": "Přidat sloupec za", "menu.array.add column before": "Přidat sloupec dříve", "menu.array.delete row": "Odstranit řádek", "menu.array.delete rows": "Odstranit vybrané řádky", "menu.array.delete column": "Odstranit sloupec", "menu.array.delete columns": "Odstranit vybrané sloupce", "submenu.array.insert separator": "Vložte oddělovač", "menu.insert table": "Vložit tabulku", "submenu.table style": "Styl tabulky" }, da: { "keyboard.tooltip.functions": "Funktioner", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Græske bogstaver", "keyboard.tooltip.command": "LaTeX kommandotilstand", "keyboard.tooltip.numeric": "Numerisk", "keyboard.tooltip.roman": "Romerske breve", "tooltip.copy to clipboard": "Kopier til udklipsholder", "tooltip.redo": "Gentag igen", "tooltip.toggle virtual keyboard": "Skift virtuelt tastatur", "tooltip.undo": "Fortryd", "menu.insert matrix": "Indsæt matrix", "menu.insert vector": "Indsæt vektor", "submenu.array.matrix delimiters": "Matrixafgrænsere", "menu.array.add row above": "Tilføj række efter", "menu.array.add row below": "Tilføj række før", "menu.array.add column after": "Tilføj kolonne efter", "menu.array.add column before": "Tilføj kolonne før", "menu.array.delete row": "Slet række", "menu.array.delete rows": "Slet valgte rækker", "menu.array.delete column": "Slet kolonne", "menu.array.delete columns": "Slet valgte kolonner", "submenu.array.insert separator": "Indsæt separator", "menu.insert table": "Indsæt tabel", "submenu.table style": "Tabelstil" }, de: { "keyboard.tooltip.functions": "Funktionen", "keyboard.tooltip.symbols": "Symbole", "keyboard.tooltip.greek": "Griechische Buchstaben", "keyboard.tooltip.command": "LaTeX-Befehlsmodus", "keyboard.tooltip.numeric": "Numerisch", "keyboard.tooltip.roman": "Römische Buchstaben", "tooltip.copy to clipboard": "In die Zwischenablage kopieren", "tooltip.redo": "Wiederholen", "tooltip.toggle virtual keyboard": "Virtuelle Tastatur umschalten", "tooltip.undo": "Widerrufen", "menu.insert matrix": "Matrix einfügen", "menu.insert vector": "Vektor einfügen", "submenu.array.matrix delimiters": "Matrixtrennzeichen", "menu.array.add row above": "Zeile hinzufügen nach", "menu.array.add row below": "Zeile hinzufügen vor", "menu.array.add column after": "Spalte hinzufügen nach", "menu.array.add column before": "Spalte hinzufügen vor", "menu.array.delete row": "Zeile löschen", "menu.array.delete rows": "Ausgewählte Zeilen löschen", "menu.array.delete column": "Spalte löschen", "menu.array.delete columns": "Ausgewählte Spalten löschen", "submenu.array.insert separator": "Trennzeichen einfügen", "menu.insert table": "Tabelle einfügen", "submenu.table style": "Tabellenstil" }, el: { "keyboard.tooltip.functions": "συναρτήσεις", "keyboard.tooltip.symbols": "σύμβολα", "keyboard.tooltip.greek": "ελληνικά γράμματα", "keyboard.tooltip.command": "Λειτουργία εντολών LaTeX", "keyboard.tooltip.numeric": "Αριθμητικός", "keyboard.tooltip.roman": "Ρωμαϊκά γράμματα", "tooltip.copy to clipboard": "Αντιγραφή στο πρόχειρο", "tooltip.redo": "Ξανακάνω", "tooltip.toggle virtual keyboard": "Εναλλαγή εικονικού πληκτρολογίου", "tooltip.undo": "Ξεκάνω", "menu.insert matrix": "Εισαγωγή Matrix", "menu.insert vector": "Εισαγωγή διανύσματος", "submenu.array.matrix delimiters": "Οριοθέτες Matrix", "menu.array.add row above": "Προσθήκη σειράς μετά", "menu.array.add row below": "Προσθήκη σειράς πριν", "menu.array.add column after": "Προσθήκη στήλης μετά", "menu.array.add column before": "Προσθήκη στήλης πριν", "menu.array.delete row": "Διαγραφή σειράς", "menu.array.delete rows": "Διαγραφή επιλεγμένων σειρών", "menu.array.delete column": "Διαγραφή στήλης", "menu.array.delete columns": "Διαγραφή επιλεγμένων στηλών", "submenu.array.insert separator": "Εισαγωγή διαχωριστικού", "menu.insert table": "Εισαγωγή πίνακα", "submenu.table style": "Στυλ πίνακα" }, es: { "keyboard.tooltip.functions": "Funciones", "keyboard.tooltip.symbols": "Símbolos", "keyboard.tooltip.greek": "Letras griegas", "keyboard.tooltip.command": "Modo Comando LaTeX", "keyboard.tooltip.numeric": "Numérico", "keyboard.tooltip.roman": "Letras romanas", "tooltip.copy to clipboard": "Copiar al portapapeles", "tooltip.redo": "Rehacer", "tooltip.toggle virtual keyboard": "Alternar teclado virtual", "tooltip.undo": "Deshacer", "menu.insert matrix": "Añadir Matriz", "menu.insert vector": "Añadir vector", "submenu.array.matrix delimiters": "Delimitadores de Matriz", "menu.array.add row above": "Añadir Línea Antes", "menu.array.add row below": "Añadir Línea Despues", "menu.array.add column after": "Añadir Columna Despues", "menu.array.add column before": "Añadir Columna Antes", "menu.array.delete row": "Borrar Línea", "menu.array.delete rows": "Borrar Líneas Seleccionadas", "menu.array.delete column": "Borrar Columna", "menu.array.delete columns": "Borrar Columnas Seleccionadas", "submenu.array.insert separator": "Insertar un Separador", "menu.insert table": "Insertar Tabla", "submenu.table style": "Estilo de Tabla" }, et: { "keyboard.tooltip.functions": "Funktsioonid", "keyboard.tooltip.symbols": "Sümbolid", "keyboard.tooltip.greek": "Kreeka kirjad", "keyboard.tooltip.command": "LaTeXi käsurežiim", "keyboard.tooltip.numeric": "Numbriline", "keyboard.tooltip.roman": "Rooma kirjad", "tooltip.copy to clipboard": "Kopeerida lõikelauale", "tooltip.redo": "Tee uuesti", "tooltip.toggle virtual keyboard": "Lülitage sisse virtuaalne klaviatuur", "tooltip.undo": "Võta tagasi", "menu.insert matrix": "Sisesta maatriks", "menu.insert vector": "Sisesta vektor", "submenu.array.matrix delimiters": "Maatriksi eraldajad", "menu.array.add row above": "Lisa rida pärast", "menu.array.add row below": "Lisa rida enne", "menu.array.add column after": "Lisa veerg pärast", "menu.array.add column before": "Lisa veerg enne", "menu.array.delete row": "Kustuta rida", "menu.array.delete rows": "Kustuta valitud read", "menu.array.delete column": "Kustuta veerg", "menu.array.delete columns": "Kustuta valitud veerud", "submenu.array.insert separator": "Sisestage eraldaja", "menu.insert table": "Sisesta tabeli", "submenu.table style": "Tabeli stiilis" }, fa: { "keyboard.tooltip.functions": "توابع", "keyboard.tooltip.symbols": "نمادها", "keyboard.tooltip.greek": "حروف یونانی", "keyboard.tooltip.command": "حالت دستور لاتک", "keyboard.tooltip.numeric": "عددی", "keyboard.tooltip.roman": "حروف رومی", "tooltip.copy to clipboard": "کپی به کلیپبورد", "tooltip.redo": "بازگشت به بعد", "tooltip.toggle virtual keyboard": "نمایش/نهفتن کیبورد مجازی", "tooltip.undo": "بازگشت به قبل", "menu.insert matrix": "ماتریس را وارد کنید", "menu.insert vector": "درج بردار", "submenu.array.matrix delimiters": "مرزهای ماتریس", "menu.array.add row above": "بعد از آن ردیف اضافه کنید", "menu.array.add row below": "ردیف را قبل اضافه کنید", "menu.array.add column after": "اضافه کردن ستون بعد", "menu.array.add column before": "ستون قبل را اضافه کنید", "menu.array.delete row": "ردیف را حذف کنید", "menu.array.delete rows": "ردیف های انتخاب شده را حذف کنید", "menu.array.delete column": "حذف ستون", "menu.array.delete columns": "ستون های انتخاب شده را حذف کنید", "submenu.array.insert separator": "درج جدا کننده", "menu.insert table": "قرار دادن جدول", "submenu.table style": "سبک میز" }, fi: { "keyboard.tooltip.functions": "Toiminnot", "keyboard.tooltip.symbols": "Symbolit", "keyboard.tooltip.greek": "Kreikkalaiset kirjeet", "keyboard.tooltip.command": "LaTeX-komentotila", "keyboard.tooltip.numeric": "Numeerinen", "keyboard.tooltip.roman": "Roomalaiset kirjeet", "tooltip.copy to clipboard": "Kopioi leikepöydälle", "tooltip.redo": "Tee uudelleen", "tooltip.toggle virtual keyboard": "Vaihda virtuaalinäppäimistö", "tooltip.undo": "Kumoa", "menu.insert matrix": "Lisää matriisi", "menu.insert vector": "Lisää vektori", "submenu.array.matrix delimiters": "Matriisin erottimet", "menu.array.add row above": "Lisää rivi jälkeen", "menu.array.add row below": "Lisää rivi ennen", "menu.array.add column after": "Lisää sarake jälkeen", "menu.array.add column before": "Lisää sarake ennen", "menu.array.delete row": "Poista rivi", "menu.array.delete rows": "Poista valitut rivit", "menu.array.delete column": "Poista sarake", "menu.array.delete columns": "Poista valitut sarakkeet", "submenu.array.insert separator": "Aseta erotin", "menu.insert table": "Lisää taulukko", "submenu.table style": "Taulukon tyyli" }, fr: { "keyboard.tooltip.functions": "Fonctions", "keyboard.tooltip.symbols": "Symboles", "keyboard.tooltip.greek": "Lettres grecques", "keyboard.tooltip.command": "Mode de commandes LaTeX", "keyboard.tooltip.numeric": "Numérique", "keyboard.tooltip.roman": "Lettres romaines", "tooltip.copy to clipboard": "Copier dans le presse-papiers", "tooltip.redo": "Rétablir", "tooltip.toggle virtual keyboard": "Afficher/Masquer le clavier virtuel", "tooltip.undo": "Annuler", "menu.insert matrix": "Insérer une Matrice", "menu.insert vector": "Insérer un Vecteur", "submenu.array.matrix delimiters": "Délimiteurs de la Matrice", "menu.array.add row above": "Ajouter une Ligne Avant", "menu.array.add row below": "Ajouter une Ligne Après", "menu.array.add column before": "Ajouter une Colonne Avant", "menu.array.add column after": "Ajouter une Colonne Après", "menu.array.delete row": "Enlever une Ligne", "menu.array.delete rows": "Enlever les Lignes Sélectionées", "menu.array.delete column": "Enlever une Colone", "menu.array.delete columns": "Enlever les Colonnes Sélectionées", "submenu.array.insert separator": "Insérer un Séparateur", "menu.insert table": "Insérer une Table", "submenu.table style": "Style de la  Table" }, ga: { "keyboard.tooltip.functions": "Feidhmeanna", "keyboard.tooltip.symbols": "Siombailí", "keyboard.tooltip.greek": "Litreacha na Gréige", "keyboard.tooltip.command": "Mód Ordú LaTeX", "keyboard.tooltip.numeric": "Uimhriúil", "keyboard.tooltip.roman": "Litreacha Rómhánacha", "tooltip.copy to clipboard": "Cóipeáil chuig an Ghearrthaisce", "tooltip.redo": "Athdhéan", "tooltip.toggle virtual keyboard": "Méarchláir Fíorúil a Fháil", "tooltip.undo": "Cealaigh", "menu.insert matrix": "Cuir isteach Maitrís", "menu.insert vector": "Cuir isteach Veicteoir", "submenu.array.matrix delimiters": "Delimiters Maitrís", "menu.array.add row above": "Cuir Rae Tar éis", "menu.array.add row below": "Cuir Rae Roimh", "menu.array.add column after": "Cuir Colún Tar éis", "menu.array.add column before": "Cuir Colún Roimh", "menu.array.delete row": "Scrios Rae", "menu.array.delete rows": "Scrios Sraitheanna Roghnaithe", "menu.array.delete column": "Scrios Colún", "menu.array.delete columns": "Scrios Colúin Roghnaithe", "submenu.array.insert separator": "Cuir Deighilteoir isteach", "menu.insert table": "Ionsáigh Tábla", "submenu.table style": "Stíl Tábla" }, he: { "keyboard.tooltip.functions": "פונקציות", "keyboard.tooltip.symbols": "סמלים", "keyboard.tooltip.greek": "אותיות יווניות", "keyboard.tooltip.command": "מצב פקודה לטקס", "keyboard.tooltip.numeric": "מספרי", "keyboard.tooltip.roman": "מכתבים רומיים", "tooltip.copy to clipboard": "העתק ללוח", "tooltip.redo": "לַעֲשׂוֹת שׁוּב", "tooltip.toggle virtual keyboard": "החלף את המקלדת הווירטואלית", "tooltip.undo": "לבטל", "menu.insert matrix": "הכנס מטריקס", "menu.insert vector": "הכנס וקטור", "submenu.array.matrix delimiters": "מפרידי מטריקס", "menu.array.add row above": "הוסף שורה אחרי", "menu.array.add row below": "הוסף שורה לפני", "menu.array.add column after": "הוסף עמודה אחרי", "menu.array.add column before": "הוסף עמודה לפני", "menu.array.delete row": "מחק שורה", "menu.array.delete rows": "מחק שורות שנבחרו", "menu.array.delete column": "מחק עמודה", "menu.array.delete columns": "מחק עמודות שנבחרו", "submenu.array.insert separator": "הכנס מפריד", "menu.insert table": "הכנס טבלה", "submenu.table style": "טבלה סִגְנוֹן" }, hr: { "keyboard.tooltip.functions": "Funkcije", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Grčka slova", "keyboard.tooltip.command": "LaTeX naredbeni način", "keyboard.tooltip.numeric": "Numerički", "keyboard.tooltip.roman": "Rimska slova", "tooltip.copy to clipboard": "Kopirati u međuspremnik", "tooltip.redo": "Ponovi", "tooltip.toggle virtual keyboard": "Uključi / isključi virtualnu tipkovnicu", "tooltip.undo": "Poništi", "menu.insert matrix": "Umetni matricu", "menu.insert vector": "Umetni vektor", "submenu.array.matrix delimiters": "Matrični razdjelnici", "menu.array.add row above": "Dodaj redak nakon", "menu.array.add row below": "Dodaj redak prije", "menu.array.add column after": "Dodaj stupac nakon", "menu.array.add column before": "Dodaj stupac prije", "menu.array.delete row": "Izbriši redak", "menu.array.delete rows": "Izbriši odabrane retke", "menu.array.delete column": "Izbriši stupac", "menu.array.delete columns": "Izbriši odabrane stupce", "submenu.array.insert separator": "Umetni separator", "menu.insert table": "Umetni tablicu", "submenu.table style": "Stil tabele" }, id: { "keyboard.tooltip.functions": "Fungsi", "keyboard.tooltip.symbols": "Simbol", "keyboard.tooltip.greek": "Huruf Yunani", "keyboard.tooltip.command": "Mode Perintah LaTeX", "keyboard.tooltip.numeric": "Numerik", "keyboard.tooltip.roman": "Surat Romawi", "tooltip.copy to clipboard": "Menyalin ke clipboard", "tooltip.redo": "Mengulangi", "tooltip.toggle virtual keyboard": "Alihkan Keyboard Virtual", "tooltip.undo": "Membuka", "menu.insert matrix": "Sisipkan Matriks", "menu.insert vector": "Sisipkan Vektor", "submenu.array.matrix delimiters": "Pembatas Matriks", "menu.array.add row above": "Tambahkan Baris Setelah", "menu.array.add row below": "Tambahkan Baris Sebelumnya", "menu.array.add column after": "Tambahkan Kolom Setelah", "menu.array.add column before": "Tambahkan Kolom Sebelumnya", "menu.array.delete row": "Hapus Baris", "menu.array.delete rows": "Hapus Baris yang Dipilih", "menu.array.delete column": "Hapus Kolom", "menu.array.delete columns": "Hapus Kolom yang Dipilih", "submenu.array.insert separator": "Sisipkan Pemisah", "menu.insert table": "Sisipkan Tabel", "submenu.table style": "Gaya Tabel" }, hi: { "keyboard.tooltip.functions": "कार्यों", "keyboard.tooltip.symbols": "प्रतीक", "keyboard.tooltip.greek": "ग्रीक अक्षर", "keyboard.tooltip.command": "लाटेक्स कमांड मोड", "keyboard.tooltip.numeric": "संख्यात्मक", "keyboard.tooltip.roman": "रोमन पत्र", "tooltip.copy to clipboard": "क्लिपबोर्ड पर कॉपी करें", "tooltip.redo": "फिर से करें", "tooltip.toggle virtual keyboard": "वर्चुअल कीबोर्ड टॉगल करें", "tooltip.undo": "पूर्ववत", "menu.insert matrix": "मैट्रिक्स डालें", "menu.insert vector": "वेक्टर डालें", "submenu.array.matrix delimiters": "मैट्रिक्स सीमांकक", "menu.array.add row above": "बाद में पंक्ति जोड़ें", "menu.array.add row below": "पहले पंक्ति जोड़ें", "menu.array.add column after": "बाद में कॉलम जोड़ें", "menu.array.add column before": "पहले कॉलम जोड़ें", "menu.array.delete row": "पंक्ति को हटाएं", "menu.array.delete rows": "चयनित पंक्तियों को हटाएं", "menu.array.delete column": "कॉलम हटाएं", "menu.array.delete columns": "चयनित कॉलम हटाएं", "submenu.array.insert separator": "विभाजक डालें", "menu.insert table": "टेबल इंसर्ट करें", "submenu.table style": "टेबल स्टाइल" }, hu: { "keyboard.tooltip.functions": "Funkciók", "keyboard.tooltip.symbols": "Szimbólumok", "keyboard.tooltip.greek": "Görög levelek", "keyboard.tooltip.command": "LaTeX Parancs mód", "keyboard.tooltip.numeric": "Numerikus", "keyboard.tooltip.roman": "Római levelek", "tooltip.copy to clipboard": "Másolja a vágólapra", "tooltip.redo": "Újra", "tooltip.toggle virtual keyboard": "Váltás a virtuális billentyűzetre", "tooltip.undo": "Visszavonás", "menu.insert matrix": "Helyezze be a Mátrixot", "menu.insert vector": "Vektor beszúrása", "submenu.array.matrix delimiters": "Mátrixhatárolók", "menu.array.add row above": "Sor hozzáadása után", "menu.array.add row below": "Add Add Sor előtt", "menu.array.add column after": "Oszlop hozzáadása után", "menu.array.add column before": "Add oszlop előtt", "menu.array.delete row": "Sor törlése", "menu.array.delete rows": "Kijelölt sorok törlése", "menu.array.delete column": "Oszlop törlése", "menu.array.delete columns": "A kijelölt oszlopok törlése", "submenu.array.insert separator": "Helyezze be az elválasztót", "menu.insert table": "Helyezze be a táblázatot", "submenu.table style": "Táblázatos stílus" }, it: { "keyboard.tooltip.functions": "Funzioni", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Lettere greche", "keyboard.tooltip.command": "Modalità di comando LaTeX", "keyboard.tooltip.numeric": "Numerico", "keyboard.tooltip.roman": "Lettere romane", "tooltip.copy to clipboard": "Copia negli appunti", "tooltip.redo": "Rifare", "tooltip.toggle virtual keyboard": "Attiva / disattiva la tastiera virtuale", "tooltip.undo": "Disfare", "menu.insert matrix": "Inserisci una Matrice", "menu.insert vector": "Inserisci Vettore", "submenu.array.matrix delimiters": "Delimitatori di Matrice", "menu.array.add row above": "Aggiungi una Riga Prima", "menu.array.add row below": "Aggiungi una Riga Dopo", "menu.array.add column before": "Aggiungi una Colonna Prima", "menu.array.add column after": "Aggiungi una Colonna Dopo", "menu.array.delete row": "Rimuovi una Riga", "menu.array.delete rows": "Rimuovi le Righe Selezionate", "menu.array.delete column": "Rimuovi una Colonna", "menu.array.delete columns": "Rimuovi le Colonne Selezionate", "submenu.array.insert separator": "Inserisci un Separatore", "menu.insert table": "Inserisci Tabella", "submenu.table style": "Stile tabella" }, is: { "keyboard.tooltip.functions": "Aðgerðir", "keyboard.tooltip.symbols": "Tákn", "keyboard.tooltip.greek": "Grísk bréf", "keyboard.tooltip.command": "LaTeX stjórnunarstilling", "keyboard.tooltip.numeric": "Tölulegt", "keyboard.tooltip.roman": "Rómversk bréf", "tooltip.copy to clipboard": "Afritaðu á klemmuspjald", "tooltip.redo": "Endurtaka", "tooltip.toggle virtual keyboard": "Skiptu um sýndarlyklaborð", "tooltip.undo": "Afturkalla", "menu.insert matrix": "Settu fylki inn", "menu.insert vector": "Settu inn Vector", "submenu.array.matrix delimiters": "Matrix afmörkun", "menu.array.add row above": "Bæta við röð á eftir", "menu.array.add row below": "Bæta við röð áður", "menu.array.add column after": "Bæta við dálki á eftir", "menu.array.add column before": "Bæta við dálki áður", "menu.array.delete row": "Eyða röð", "menu.array.delete rows": "Eyða völdum línum", "menu.array.delete column": "Eyða dálki", "menu.array.delete columns": "Eyða völdum dálkum", "submenu.array.insert separator": "Settu skiljuna í", "menu.insert table": "Settu inn töflu", "submenu.table style": "Töflu stíl" }, ja: { "keyboard.tooltip.functions": "関数", "keyboard.tooltip.symbols": "シンボル", "keyboard.tooltip.greek": "ギリシャ文字", "keyboard.tooltip.command": "ラテックスコマンドモード", "keyboard.tooltip.numeric": "数値", "keyboard.tooltip.roman": "ローマ字", "tooltip.copy to clipboard": "クリップボードにコピー", "tooltip.redo": "やり直し", "tooltip.toggle virtual keyboard": "仮想キーボードの切り替え", "tooltip.undo": "元に戻す", "menu.insert matrix": "マトリックスを挿入", "menu.insert vector": "ベクトルを挿入", "submenu.array.matrix delimiters": "行列区切り文字", "menu.array.add row above": "後に行を追加", "menu.array.add row below": "前に行を追加", "menu.array.add column after": "後に列を追加", "menu.array.add column before": "前に列を追加", "menu.array.delete row": "行を削除", "menu.array.delete rows": "選択した行を削除する", "menu.array.delete column": "列を削除", "menu.array.delete columns": "選択した列を削除する", "submenu.array.insert separator": "セパレーターを挿入", "menu.insert table": "テーブルを挿入", "submenu.table style": "テーブルスタイル" }, ko: { "keyboard.tooltip.functions": "기능", "keyboard.tooltip.symbols": "기호", "keyboard.tooltip.greek": "그리스 문자", "keyboard.tooltip.command": "유액 명령 모드", "keyboard.tooltip.numeric": "숫자", "keyboard.tooltip.roman": "로마 문자", "tooltip.copy to clipboard": "클립 보드에 복사", "tooltip.redo": "다시 하다", "tooltip.toggle virtual keyboard": "가상 키보드 전환", "tooltip.undo": "실행 취소", "menu.insert matrix": "매트릭스 삽입", "menu.insert vector": "벡터 삽입", "submenu.array.matrix delimiters": "행렬 구분 기호", "menu.array.add row above": "뒤에 행 추가", "menu.array.add row below": "앞에 행 추가", "menu.array.add column after": "뒤에 열 추가", "menu.array.add column before": "앞에 열 추가", "menu.array.delete row": "행 삭제", "menu.array.delete rows": "선택한 행 삭제", "menu.array.delete column": "열 삭제", "menu.array.delete columns": "선택한 열 삭제", "submenu.array.insert separator": "구분자 삽입", "menu.insert table": "표 삽입", "submenu.table style": "테이블 스타일" }, lv: { "keyboard.tooltip.functions": "Funkcijas", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Grieķu burti", "keyboard.tooltip.command": "LaTeX komandu režīms", "keyboard.tooltip.numeric": "Ciparu skaitlis", "keyboard.tooltip.roman": "Romiešu vēstules", "tooltip.copy to clipboard": "Kopēt starpliktuvē", "tooltip.redo": "Pārtaisīt", "tooltip.toggle virtual keyboard": "Pārslēgt virtuālo tastatūru", "tooltip.undo": "Atsaukt", "menu.insert matrix": "Ievietojiet matricu", "menu.insert vector": "Ievietot vektoru", "submenu.array.matrix delimiters": "Matricas norobežotāji", "menu.array.add row above": "Pievienot rindu pēc", "menu.array.add row below": "Pievienot rindu pirms", "menu.array.add column after": "Pievienot kolonnu pēc", "menu.array.add column before": "Pievienot kolonnu pirms", "menu.array.delete row": "Dzēst rindu", "menu.array.delete rows": "Dzēst atlasītās rindas", "menu.array.delete column": "Dzēst kolonnu", "menu.array.delete columns": "Dzēst atlasītās kolonnas", "submenu.array.insert separator": "Ievietojiet atdalītāju", "menu.insert table": "Ievietojiet tabulu", "submenu.table style": "Galda stils" }, lt: { "keyboard.tooltip.functions": "Funkcijos", "keyboard.tooltip.symbols": "Simboliai", "keyboard.tooltip.greek": "Graikiškos raidės", "keyboard.tooltip.command": "LaTeX komandų režimas", "keyboard.tooltip.numeric": "Skaitmeninis", "keyboard.tooltip.roman": "Romos laiškai", "tooltip.copy to clipboard": "Nukopijuoti į iškarpinę", "tooltip.redo": "Perdaryti", "tooltip.toggle virtual keyboard": "Perjungti virtualiąją klaviatūrą", "tooltip.undo": "Atšaukti", "menu.insert matrix": "Ievietojiet matricu", "menu.insert vector": "Ievietot vektoru", "submenu.array.matrix delimiters": "Matricas norobežotāji", "menu.array.add row above": "Pievienot rindu pēc", "menu.array.add row below": "Pievienot rindu pirms", "menu.array.add column after": "Pievienot kolonnu pēc", "menu.array.add column before": "Pievienot kolonnu pirms", "menu.array.delete row": "Dzēst rindu", "menu.array.delete rows": "Dzēst atlasītās rindas", "menu.array.delete column": "Dzēst kolonnu", "menu.array.delete columns": "Dzēst atlasītās kolonnas", "submenu.array.insert separator": "Ievietojiet atdalītāju", "menu.insert table": "Ievietojiet tabulu", "submenu.table style": "Tabulas stili" }, lu: { "keyboard.tooltip.functions": "Funktiounen", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Griichesch Bréiwer", "keyboard.tooltip.command": "LaTeX Kommando Modus", "keyboard.tooltip.numeric": "Numeresch", "keyboard.tooltip.roman": "Réimesch Bréiwer", "tooltip.copy to clipboard": "Kopéiert op Clipboard", "tooltip.redo": "Nees nei maachen", "tooltip.toggle virtual keyboard": "Wiesselt Virtuell Tastatur", "tooltip.undo": "Undoen", "menu.insert matrix": "Matrix asetzen", "menu.insert vector": "Insert Vector", "submenu.array.matrix delimiters": "Matrix Ofgrenzer", "menu.array.add row above": "Dobäizemaachen Rei No", "menu.array.add row below": "Füügt Rei vir", "menu.array.add column after": "Dobäizemaachen Kolonn No", "menu.array.add column before": "Kolonn derbäi Virun", "menu.array.delete row": "Rad läschen", "menu.array.delete rows": "Läscht Ausgewielte Reien", "menu.array.delete column": "Läscht Kolonn", "menu.array.delete columns": "Läscht Ausgewielte Kolonnen", "submenu.array.insert separator": "Insert Separator", "menu.insert table": "Dësch anzeginn", "submenu.table style": "Dësch Style" }, nl: { "keyboard.tooltip.functions": "Functies", "keyboard.tooltip.symbols": "Symbolen", "keyboard.tooltip.greek": "Griekse letters", "keyboard.tooltip.command": "LaTeX commando mode", "keyboard.tooltip.numeric": "Numeriek", "keyboard.tooltip.roman": "Romeinse letters", "tooltip.copy to clipboard": "Kopiëren naar klembord", "tooltip.redo": "Opnieuw", "tooltip.toggle virtual keyboard": "Schakel naar virtueel toetsenbord", "tooltip.undo": "Ongedaan maken", "menu.insert matrix": "Matrix invoegen", "menu.insert vector": "Vector invoegen", "submenu.array.matrix delimiters": "Matrixscheidingstekens", "menu.array.add row above": "Rij toevoegen na", "menu.array.add row below": "Rij toevoegen eerder", "menu.array.add column after": "Kolom toevoegen na", "menu.array.add column before": "Kolom toevoegen voor", "menu.array.delete row": "Verwijder rij", "menu.array.delete rows": "Geselecteerde rijen verwijderen", "menu.array.delete column": "Kolom verwijderen", "menu.array.delete columns": "Geselecteerde kolommen verwijderen", "submenu.array.insert separator": "Scheidingsteken invoegen", "menu.insert table": "Tabel invoegen", "submenu.table style": "Tabelstijl" }, no: { "keyboard.tooltip.functions": "Funksjoner", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Greske bokstaver", "keyboard.tooltip.command": "LaTeX kommandomodus", "keyboard.tooltip.numeric": "Numerisk", "keyboard.tooltip.roman": "Romerske bokstaver", "tooltip.copy to clipboard": "Kopiere til utklippstavle", "tooltip.redo": "Gjøre om", "tooltip.toggle virtual keyboard": "Bytt virtuelt tastatur", "tooltip.undo": "Angre", "menu.insert matrix": "Sett inn matrise", "menu.insert vector": "Sett inn vektor", "submenu.array.matrix delimiters": "Matrix avgrensere", "menu.array.add row above": "Legg til rad etter", "menu.array.add row below": "Legg til rad før", "menu.array.add column after": "Legg til kolonne etter", "menu.array.add column before": "Legg til kolonne før", "menu.array.delete row": "Slett rad", "menu.array.delete rows": "Slett valgte rader", "menu.array.delete column": "Slett kolonne", "menu.array.delete columns": "Slett valgte kolonner", "submenu.array.insert separator": "Sett inn skilletegn", "menu.insert table": "Sett inn tabell", "submenu.table style": "Tabellstil" }, mk: { "keyboard.tooltip.functions": "Функции", "keyboard.tooltip.symbols": "Симболи", "keyboard.tooltip.greek": "Грчки букви", "keyboard.tooltip.command": "Режим на команда во латекс", "keyboard.tooltip.numeric": "Нумерички", "keyboard.tooltip.roman": "Римски писма", "tooltip.copy to clipboard": "Копирајте во клипборд", "tooltip.redo": "Повторно", "tooltip.toggle virtual keyboard": "Вклучете ја виртуелната тастатура", "tooltip.undo": "Врати", "menu.insert matrix": "Вметнете матрица", "menu.insert vector": "Вметни вектор", "submenu.array.matrix delimiters": "Разграничувачи на матрица", "menu.array.add row above": "Додадете ред после", "menu.array.add row below": "Додади ред пред тоа", "menu.array.add column after": "Додадете колона после", "menu.array.add column before": "Додадете колона пред тоа", "menu.array.delete row": "Избриши го редот", "menu.array.delete rows": "Избришете ги избраните редови", "menu.array.delete column": "Избриши ја колоната", "menu.array.delete columns": "Избриши ја колоната", "submenu.array.insert separator": "Вметнете сепаратор", "menu.insert table": "Вметни табела", "submenu.table style": "Табела стил" }, pl: { "keyboard.tooltip.functions": "Funkcje", "keyboard.tooltip.symbols": "Symbolika", "keyboard.tooltip.greek": "Litery greckie", "keyboard.tooltip.command": "Tryb poleceń LaTeX", "keyboard.tooltip.numeric": "Numeryczne", "keyboard.tooltip.roman": "Litery rzymskie", "tooltip.copy to clipboard": "Kopiuj do Schowka", "tooltip.redo": "Przywróć", "tooltip.toggle virtual keyboard": "Przełącz wirtualną klawiaturę", "tooltip.undo": "Cofnij", "menu.insert matrix": "Wstaw macierz", "menu.insert vector": "Wstaw wektor", "submenu.array.matrix delimiters": "Ograniczniki macierzy", "menu.array.add row above": "Dodaj wiersz po", "menu.array.add row below": "Dodaj wiersz przed", "menu.array.add column after": "Dodaj kolumnę po", "menu.array.add column before": "Dodaj kolumnę przed", "menu.array.delete row": "Usuń wiersz", "menu.array.delete rows": "Usuń wybrane wiersze", "menu.array.delete column": "Usuń kolumnę", "menu.array.delete columns": "Usuń wybrane kolumny", "submenu.array.insert separator": "Wstaw separator", "menu.insert table": "Wypełnij tabelę", "submenu.table style": "Styl tabelę" }, pt: { "keyboard.tooltip.functions": "Functions", "keyboard.tooltip.symbols": "Símbolos", "keyboard.tooltip.greek": "Letras gregas", "keyboard.tooltip.command": "Modo de Comando LaTeX", "keyboard.tooltip.numeric": "Numérico", "keyboard.tooltip.roman": "Letras romanas", "tooltip.copy to clipboard": "Copiar para área de transferência", "tooltip.redo": "Refazer", "tooltip.toggle virtual keyboard": "Alternar teclado virtual", "tooltip.undo": "Desfazer", "menu.insert matrix": "Inserir Matriz", "menu.insert vector": "Inserir vetor", "submenu.array.matrix delimiters": "Delimitadores de matriz", "menu.array.add row above": "Adicionar linha depois", "menu.array.add row below": "Adicionar linha antes", "menu.array.add column after": "Adicionar coluna depois", "menu.array.add column before": "Adicionar coluna antes", "menu.array.delete row": "Excluir linha", "menu.array.delete rows": "Excluir linhas selecionadas", "menu.array.delete column": "Apagar Coluna", "menu.array.delete columns": "Excluir Colunas Selecionadas", "submenu.array.insert separator": "Inserir Separador", "menu.insert table": "Insira a tabela", "submenu.table style": "Estilo tabela" }, ro: { "keyboard.tooltip.functions": "Funcții", "keyboard.tooltip.symbols": "Simboluri", "keyboard.tooltip.greek": "Scrisori grecești", "keyboard.tooltip.command": "Modul de comandă latex", "keyboard.tooltip.numeric": "Numeric", "keyboard.tooltip.roman": "Scrisori romane", "tooltip.copy to clipboard": "Copiați în clipboard", "tooltip.redo": "A reface", "tooltip.toggle virtual keyboard": "Comutați tastatura virtuală", "tooltip.undo": "Anula", "menu.insert matrix": "Introduceți Matrix", "menu.insert vector": "Inserați Vector", "submenu.array.matrix delimiters": "Delimitatori de matrice", "menu.array.add row above": "Adăugați rândul după", "menu.array.add row below": "Adăugați rândul înainte", "menu.array.add column after": "Adăugați o coloană după", "menu.array.add column before": "Adăugați o coloană înainte", "menu.array.delete row": "Ștergeți rândul", "menu.array.delete rows": "Ștergeți rândurile selectate", "menu.array.delete column": "Ștergeți coloana", "menu.array.delete columns": "Ștergeți coloanele selectate", "submenu.array.insert separator": "Introduceți separatorul", "menu.insert table": "Introduceți tabelul", "submenu.table style": "Table style" }, ru: { "keyboard.tooltip.functions": "Функции", "keyboard.tooltip.symbols": "Символы", "keyboard.tooltip.greek": "Греческие буквы", "keyboard.tooltip.command": "Режим командной строки Латекс", "keyboard.tooltip.numeric": "числовой", "keyboard.tooltip.roman": "Латинские буквы", "tooltip.copy to clipboard": "Скопировать в буфер обмена", "tooltip.redo": "переделывать", "tooltip.toggle virtual keyboard": "Переключить виртуальную клавиатуру", "tooltip.undo": "расстегивать", "menu.insert matrix": "Вставить матрицу", "menu.insert vector": "Вставить вектор", "submenu.array.matrix delimiters": "Матричные разделители", "menu.array.add row above": "Добавить строку после", "menu.array.add row below": "Добавить строку перед", "menu.array.add column after": "Добавить столбец после", "menu.array.add column before": "Добавить столбец перед", "menu.array.delete row": "Удалить строку", "menu.array.delete rows": "Удалить выбранные строки", "menu.array.delete column": "Удалить столбец", "menu.array.delete columns": "Удалить выбранные столбцы", "submenu.array.insert separator": "Вставить разделитель", "menu.insert table": "Вставить таблицу", "submenu.table style": "Табличный стиль" }, sk: { "keyboard.tooltip.functions": "Functions", "keyboard.tooltip.symbols": "Symboly", "keyboard.tooltip.greek": "Grécke listy", "keyboard.tooltip.command": "Príkazový režim LaTeX", "keyboard.tooltip.numeric": "Numerické", "keyboard.tooltip.roman": "Rímske listy", "tooltip.copy to clipboard": "Skopírovať do schránky", "tooltip.redo": "Znova", "tooltip.toggle virtual keyboard": "Prepnúť virtuálnu klávesnicu", "tooltip.undo": "Vrátenie späť", "menu.insert matrix": "Vložte maticu", "menu.insert vector": "Vložte vektor", "submenu.array.matrix delimiters": "Oddeľovače matíc", "menu.array.add row above": "Pridajte riadok za", "menu.array.add row below": "Pridajte riadok pred", "menu.array.add column after": "Pridať stĺpec za", "menu.array.add column before": "Pridajte stĺpec predtým", "menu.array.delete row": "Odstrániť riadok", "menu.array.delete rows": "Odstrániť vybraté riadky", "menu.array.delete column": "Odstrániť stĺpec", "menu.array.delete columns": "Odstrániť vybraté stĺpce", "submenu.array.insert separator": "Vložte oddeľovač", "menu.insert table": "Vložte tabuľku", "submenu.table style": "Štýl tabuľky" }, sl: { "keyboard.tooltip.functions": "Funkcije", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Grška pisma", "keyboard.tooltip.command": "Ukazni način LaTeX", "keyboard.tooltip.numeric": "Številsko", "keyboard.tooltip.roman": "Rimska pisma", "tooltip.copy to clipboard": "Kopirati v odložišče", "tooltip.redo": "Ponovi", "tooltip.toggle virtual keyboard": "Preklop navidezne tipkovnice", "tooltip.undo": "Razveljavi", "menu.insert matrix": "Vstavi matrico", "menu.insert vector": "Vstavi vektor", "submenu.array.matrix delimiters": "Matrični ločevalniki", "menu.array.add row above": "Dodaj vrstico po", "menu.array.add row below": "Dodaj vrstico prej", "menu.array.add column after": "Dodaj stolpec po", "menu.array.add column before": "Dodaj stolpec prej", "menu.array.delete row": "Izbriši vrstico", "menu.array.delete rows": "Izbriši izbrane vrstice", "menu.array.delete column": "Izbriši stolpec", "menu.array.delete columns": "Izbriši izbrane stolpce", "submenu.array.insert separator": "Vstavi ločilo", "menu.insert table": "Vstavi tabelo", "submenu.table style": "Tabela slog" }, sq: { "keyboard.tooltip.functions": "Funksione", "keyboard.tooltip.symbols": "Simbolet", "keyboard.tooltip.greek": "Letrat Greke", "keyboard.tooltip.command": "Modaliteti i komandës latex", "keyboard.tooltip.numeric": "Numerike", "keyboard.tooltip.roman": "Letrat romake", "tooltip.copy to clipboard": "Kopjoni në Clipboard", "tooltip.redo": "Riparo", "tooltip.toggle virtual keyboard": "Aktivizo tastierën virtuale", "tooltip.undo": "Zhbëj", "menu.insert matrix": "Vendosni Matricën", "menu.insert vector": "Vendos vektorin", "submenu.array.matrix delimiters": "Përcaktuesit e matricës", "menu.array.add row above": "Shto Rreshtin Pas", "menu.array.add row below": "Shto Rreshtin Para", "menu.array.add column after": "Shto kolonën pas", "menu.array.add column before": "Shto kolonën para", "menu.array.delete row": "Fshi Rreshtin", "menu.array.delete rows": "Fshi rreshtat e zgjedhur", "menu.array.delete column": "Fshi kolonën", "menu.array.delete columns": "Fshi kolonat e zgjedhura", "submenu.array.insert separator": "Vendos Ndarësin", "menu.insert table": "Vendos tabelën", "submenu.table style": "Stili tabelën" }, sr: { "keyboard.tooltip.functions": "Функције", "keyboard.tooltip.symbols": "Симболи", "keyboard.tooltip.greek": "Греек Леттерс", "keyboard.tooltip.command": "ЛаТеКс командни режим", "keyboard.tooltip.numeric": "Нумерички", "keyboard.tooltip.roman": "Римска писма", "tooltip.copy to clipboard": "Копирајте у међуспремник", "tooltip.redo": "Понови", "tooltip.toggle virtual keyboard": "Укључи / искључи виртуелну тастатуру", "tooltip.undo": "Опозови", "menu.insert matrix": "Уметни матрицу", "menu.insert vector": "Уметни вектор", "submenu.array.matrix delimiters": "Матрик Делимитерс", "menu.array.add row above": "Додај ред после", "menu.array.add row below": "Додај ред пре", "menu.array.add column after": "Додај колону после", "menu.array.add column before": "Додај колону пре", "menu.array.delete row": "Избриши ред", "menu.array.delete rows": "Избриши изабране редове", "menu.array.delete column": "Избриши колону", "menu.array.delete columns": "Избриши изабране колоне", "submenu.array.insert separator": "Уметни сепаратор", "menu.insert table": "Убаци табелу", "submenu.table style": "Табеларни стил" }, sv: { "keyboard.tooltip.functions": "Funktioner", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Grekiska bokstäver", "keyboard.tooltip.command": "LaTeX kommandoläge", "keyboard.tooltip.numeric": "Numerisk", "keyboard.tooltip.roman": "Romerska bokstäver", "tooltip.copy to clipboard": "Kopiera till Urklipp", "tooltip.redo": "Göra om", "tooltip.toggle virtual keyboard": "Växla virtuellt tangentbord", "tooltip.undo": "Ångra", "menu.insert matrix": "Sätt in matris", "menu.insert vector": "Infoga vektor", "submenu.array.matrix delimiters": "Matrisavgränsare", "menu.array.add row above": "Lägg till rad efter", "menu.array.add row below": "Lägg till rad före", "menu.array.add column after": "Lägg till kolumn efter", "menu.array.add column before": "Lägg till kolumn före", "menu.array.delete row": "Radera rad", "menu.array.delete rows": "Ta bort valda rader", "menu.array.delete column": "Ta bort kolumn", "menu.array.delete columns": "Ta bort valda kolumner", "submenu.array.insert separator": "Sätt i separator", "menu.insert table": "Infoga tabell", "submenu.table style": "Tabellstil" }, th: { "keyboard.tooltip.functions": "ฟังก์ชั่น", "keyboard.tooltip.symbols": "สัญลักษณ์", "keyboard.tooltip.greek": "อักษรกรีก", "keyboard.tooltip.command": "โหมดคำสั่ง น้ำยาง", "keyboard.tooltip.numeric": "ตัวเลข", "keyboard.tooltip.roman": "อักษรโรมัน", "tooltip.copy to clipboard": "คัดลอกไปที่คลิปบอร์ด", "tooltip.redo": "ทำซ้ำ", "tooltip.toggle virtual keyboard": "สลับแป้นพิมพ์เสมือน", "tooltip.undo": "เลิกทำ", "menu.insert matrix": "แทรกเมทริกซ์", "menu.insert vector": "แทรกเวกเตอร์", "submenu.array.matrix delimiters": "ตัวคั่นเมทริกซ์", "menu.array.add row above": "เพิ่มแถวหลัง", "menu.array.add row below": "เพิ่มแถวก่อน", "menu.array.add column after": "เพิ่มคอลัมน์หลัง", "menu.array.add column before": "เพิ่มคอลัมน์ก่อน", "menu.array.delete row": "ลบแถว", "menu.array.delete rows": "ลบแถวที่เลือก", "menu.array.delete column": "ลบคอลัมน์", "menu.array.delete columns": "ลบคอลัมน์ที่เลือก", "submenu.array.insert separator": "ตัวคั่นแทรก", "menu.insert table": "แทรกตาราง", "submenu.table style": "สไตล์ตาราง" }, tr: { "keyboard.tooltip.functions": "Fonksiyonlar", "keyboard.tooltip.symbols": "Semboller", "keyboard.tooltip.greek": "Yunan harfleri", "keyboard.tooltip.command": "LaTeX Komut Modu", "keyboard.tooltip.numeric": "Sayısal", "keyboard.tooltip.roman": "Roma Harfleri", "tooltip.copy to clipboard": "Panoya kopyala", "tooltip.redo": "Yeniden yap", "tooltip.toggle virtual keyboard": "Sanal Klavyeyi Aç/Kapat", "tooltip.undo": "Geri alma", "menu.insert matrix": "Matris Ekle", "menu.insert vector": "Vektör Ekle", "submenu.array.matrix delimiters": "Matris Sınırlayıcılar", "menu.array.add row above": "Satırdan Sonra Ekle", "menu.array.add row below": "Önce Satır Ekle", "menu.array.add column after": "Sonra Sütun Ekle", "menu.array.add column before": "Önce Sütun Ekle", "menu.array.delete row": "Sırayı sil", "menu.array.delete rows": "Seçili Satırları Sil", "menu.array.delete column": "Sütunu Sil", "menu.array.delete columns": "Seçili Sütunları Sil", "submenu.array.insert separator": "Ayırıcı Ekle", "menu.insert table": "Tablo Ekle", "submenu.table style": "Tablo Stili" }, uk: { "keyboard.tooltip.functions": "Функції", "keyboard.tooltip.symbols": "Символи", "keyboard.tooltip.greek": "Грецькі літери", "keyboard.tooltip.command": "Командний режим латексу", "keyboard.tooltip.numeric": "Числовий", "keyboard.tooltip.roman": "Римські літери", "tooltip.copy to clipboard": "Копіювати в буфер обміну", "tooltip.redo": "Повторити", "tooltip.toggle virtual keyboard": "Переключити віртуальну клавіатуру", "tooltip.undo": "Скасувати", "menu.insert matrix": "Вставити матрицю", "menu.insert vector": "Вставити вектор", "submenu.array.matrix delimiters": "Матричні роздільники", "menu.array.add row above": "Додати рядок після", "menu.array.add row below": "Додати рядок до", "menu.array.add column after": "Додати стовпець після", "menu.array.add column before": "Додати стовпець перед", "menu.array.delete row": "Видалити рядок", "menu.array.delete rows": "Видалити вибрані рядки", "menu.array.delete column": "Видалити стовпець", "menu.array.delete columns": "Видалити вибрані стовпці", "submenu.array.insert separator": "Вставте роздільник", "menu.insert table": "Вставити таблицю", "submenu.table style": "Стиль таблиці" }, vi: { "keyboard.tooltip.functions": "Chức năng", "keyboard.tooltip.symbols": "Ký hiệu", "keyboard.tooltip.greek": "Chữ Hy Lạp", "keyboard.tooltip.command": "Chế độ lệnh LaTeX", "keyboard.tooltip.numeric": "Số", "keyboard.tooltip.roman": "Chữ cái La mã", "tooltip.copy to clipboard": "Sao chép vào clipboard", "tooltip.redo": "Làm lại", "tooltip.toggle virtual keyboard": "Chuyển đổi bàn phím ảo", "tooltip.undo": "Hoàn tác", "menu.insert matrix": "Chèn ma trận", "menu.insert vector": "Insert Vector", "submenu.array.matrix delimiters": "Dấu phân cách ma trận", "menu.array.add row above": "Thêm hàng sau", "menu.array.add row below": "Thêm hàng trước", "menu.array.add column after": "Thêm cột sau", "menu.array.add column before": "Thêm cột trước", "menu.array.delete row": "Xóa hàng", "menu.array.delete rows": "Xóa hàng đã chọn", "menu.array.delete column": "Xóa cột", "menu.array.delete columns": "Xóa các cột đã chọn", "submenu.array.insert separator": "Chèn dấu phân cách", "menu.insert table": "Chèn bảng", "submenu.table style": "Kiểu bảng" }, zh_cn: { "keyboard.tooltip.functions": "职能", "keyboard.tooltip.symbols": "符号", "keyboard.tooltip.greek": "希腊字母", "keyboard.tooltip.command": "乳胶 命令模式", "keyboard.tooltip.numeric": "数字", "keyboard.tooltip.roman": "罗马字母", "tooltip.copy to clipboard": "复制到剪贴板", "tooltip.redo": "重做", "tooltip.toggle virtual keyboard": "切换虚拟键盘", "tooltip.undo": "撤消", "menu.insert matrix": "插入矩阵", "menu.insert vector": "插入向量", "submenu.array.matrix delimiters": "矩阵分隔符", "menu.array.add row above": "在后面添加行", "menu.array.add row below": "在前面添加行", "menu.array.add column after": "在后面添加列r", "menu.array.add column before": "在前面添加列", "menu.array.delete row": "删除行", "menu.array.delete rows": "删除选定行", "menu.array.delete column": "删除列", "menu.array.delete columns": "删除选定的列", "submenu.array.insert separator": "插入分隔符", "menu.insert table": "插入表格", "submenu.table style": "表格样式" }, zh_tw: { "keyboard.tooltip.functions": "職能", "keyboard.tooltip.symbols": "符號", "keyboard.tooltip.greek": "希臘字母", "keyboard.tooltip.command": "乳膠命令模式", "keyboard.tooltip.numeric": "數字", "keyboard.tooltip.roman": "羅馬字母", "tooltip.copy to clipboard": "複製到剪貼板", "tooltip.redo": "重做", "tooltip.toggle virtual keyboard": "切換虛擬鍵盤", "tooltip.undo": "撤消", "menu.insert matrix": "插入矩陣", "menu.insert vector": "插入向量", "submenu.array.matrix delimiters": "矩陣分隔符", "menu.array.add row above": "在後面添加行", "menu.array.add row below": "在前面添加行", "menu.array.add column after": "在後面添加列", "menu.array.add column before": "在前面添加列", "menu.array.delete row": "刪除行", "menu.array.delete rows": "刪除選定行", "menu.array.delete column": "刪除列", "menu.array.delete columns": "刪除選定的列", "submenu.array.insert separator": "插入分隔符", "menu.insert table": "插入表格", "submenu.table style": "表格樣式" } }, _locale: "", get locale() {
          return B._locale || (B._locale = L() ? navigator.language.slice(0, 5) : "en"), B._locale;
        }, set locale(e3) {
          B._locale = e3;
        }, merge(e3, t3) {
          if (e3 && t3) {
            let a2 = B._locale;
            B.locale = e3, B.strings[e3] = _(_({}, B.strings[e3]), t3), B.locale = a2;
          } else if (e3 && !t3) for (let t4 of Object.keys(e3)) B.merge(t4, e3[t4]);
        } };
        function K(e3) {
          if (void 0 === e3) return;
          let t3 = B.locale.slice(0, 2), a2 = "";
          return B.strings[B.locale] && (a2 = B.strings[B.locale][e3]), !a2 && B.strings[t3] && (a2 = B.strings[t3][e3]), a2 || (a2 = B.strings.en[e3]), a2 || void 0;
        }
        var E = { m0: "#3F3D99", m1: "#993D71", m2: "#998B3D", m3: "#3D9956", m4: "#3D5A99", m5: "#993D90", m6: "#996D3D", m7: "#43993D", m8: "#3D7999", m9: "#843D99" }, $ = { blue: "#0072BD", orange: "#D95319", yellow: "#EDB120", purple: "#7E2F8E", green: "#77AC30", cyan: "#4DBEEE", red: "#A2142F" }, q = { red: "#fbbbb6", orange: "#ffe0c2", yellow: "#fff1c2", lime: "#d0e8b9", green: "#bceac4", teal: "#b9f1f1", blue: "#b6d9fb", indigo: "#d1c2f0", purple: "#e3baf8", magenta: "#f9c8e0", black: "#353535", "dark-grey": "#8C8C8C", grey: "#D0D0D0", "light-grey": "#F0F0F0", white: "#ffffff" }, O = { red: "#d7170b", orange: "#fe8a2b", yellow: "#ffc02b", lime: "#63b215", green: "#21ba3a", teal: "#17cfcf", blue: "#0d80f2", indigo: "#63c", purple: "#a219e6", magenta: "#eb4799", black: "#000", "dark-grey": "#666", grey: "#A6A6A6", "light-grey": "#d4d5d2", white: "#ffffff" }, P = { Red: "red", Orange: "orange", Yellow: "yellow", LimeGreen: "lime", Green: "green", TealBlue: "teal", Blue: "blue", Violet: "indigo", Purple: "purple", Magenta: "magenta", Black: "black", Gray: "grey", White: "white" }, N = { Apricot: "#FBB982", Aquamarine: "#00B5BE", Bittersweet: "#C04F17", Black: "#221E1F", Blue: "#2D2F92", BlueGreen: "#00B3B8", BlueViolet: "#473992", BrickRed: "#B6321C", Brown: "#792500", BurntOrange: "#F7921D", CadetBlue: "#74729A", CarnationPink: "#F282B4", Cerulean: "#00A2E3", CornflowerBlue: "#41B0E4", Cyan: "#00AEEF", Dandelion: "#FDBC42", DarkOrchid: "#A4538A", Emerald: "#00A99D", ForestGreen: "#009B55", Fuchsia: "#8C368C", Goldenrod: "#FFDF42", Gray: "#949698", Green: "#00A64F", GreenYellow: "#DFE674", JungleGreen: "#00A99A", Lavender: "#F49EC4", Limegreen: "#8DC73E", Magenta: "#EC008C", Mahogany: "#A9341F", Maroon: "#AF3235", Melon: "#F89E7B", MidnightBlue: "#006795", Mulberry: "#A93C93", NavyBlue: "#006EB8", OliveGreen: "#3C8031", Orange: "#F58137", OrangeRed: "#ED135A", Orchid: "#AF72B0", Peach: "#F7965A", Periwinkle: "#7977B8", PineGreen: "#008B72", Plum: "#92268F", ProcessBlue: "#00B0F0", Purple: "#99479B", RawSienna: "#974006", Red: "#ED1B23", RedOrange: "#F26035", RedViolet: "#A1246B", Rhodamine: "#EF559F", RoyalBlue: "#0071BC", RoyalPurple: "#613F99", RubineRed: "#ED017D", Salmon: "#F69289", SeaGreen: "#3FBC9D", Sepia: "#671800", SkyBlue: "#46C5DD", SpringGreen: "#C6DC67", Tan: "#DA9D76", TealBlue: "#00AEB3", Thistle: "#D883B7", Turquoise: "#00B4CE", Violet: "#58429B", VioletRed: "#EF58A0", White: "#FFFFFF", WildStrawberry: "#EE2967", Yellow: "#FFF200", YellowGreen: "#98CC70", YellowOrange: "#FAA21A" };
        function F(e3) {
          var t3, a2, r2, i2, o2, n2;
          let s2, l2, d2, c2 = e3.split("!"), u2 = 255, p2 = 255, h2 = 255, m2 = -1, f2 = c2.length > 0 && c2[0].startsWith("-");
          f2 && (c2[0] = c2[0].slice(1));
          for (let e4 = 0; e4 < c2.length; e4++) {
            s2 = u2, l2 = p2, d2 = h2;
            let f3 = null == (t3 = c2[e4].trim().match(/^([A-Za-z\d]+)/)) ? void 0 : t3[1], y2 = null == f3 ? void 0 : f3.toLowerCase(), b2 = f3 && null != (n2 = null != (o2 = null != (i2 = null != (r2 = null != (a2 = O[y2]) ? a2 : O[P[f3]]) ? r2 : $[f3]) ? i2 : N[f3]) ? o2 : E[f3]) ? n2 : c2[e4].trim(), g2 = b2.match(/^#([\da-f]{2})([\da-f]{2})([\da-f]{2})$/i);
            if (null != g2 && g2[1] && g2[2] && g2[3]) u2 = Math.max(0, Math.min(255, Number.parseInt(g2[1], 16))), p2 = Math.max(0, Math.min(255, Number.parseInt(g2[2], 16))), h2 = Math.max(0, Math.min(255, Number.parseInt(g2[3], 16)));
            else if (g2 = b2.match(/^#([\da-f]{3})$/i), null != g2 && g2[1]) {
              let e5 = Number.parseInt(g2[1][0], 16), t4 = Number.parseInt(g2[1][1], 16), a3 = Number.parseInt(g2[1][2], 16);
              u2 = Math.max(0, Math.min(255, 16 * e5 + e5)), p2 = Math.max(0, Math.min(255, 16 * t4 + t4)), h2 = Math.max(0, Math.min(255, 16 * a3 + a3));
            } else {
              if (g2 = b2.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i), !(null != g2 && g2[1] && g2[2] && g2[3])) return;
              u2 = Math.max(0, Math.min(255, Number.parseInt(g2[1]))), p2 = Math.max(0, Math.min(255, Number.parseInt(g2[2]))), h2 = Math.max(0, Math.min(255, Number.parseInt(g2[3])));
            }
            m2 >= 0 && (u2 = (1 - m2) * u2 + m2 * s2, p2 = (1 - m2) * p2 + m2 * l2, h2 = (1 - m2) * h2 + m2 * d2, m2 = -1), e4 + 1 < c2.length && (m2 = Math.max(0, Math.min(100, Number.parseInt(c2[++e4]))) / 100);
          }
          return m2 >= 0 && (u2 = m2 * u2 + (1 - m2) * s2, p2 = m2 * p2 + (1 - m2) * l2, h2 = m2 * h2 + (1 - m2) * d2), f2 && (u2 = 255 - u2, p2 = 255 - p2, h2 = 255 - h2), "#" + ("00" + Math.round(u2).toString(16)).slice(-2) + ("00" + Math.round(p2).toString(16)).slice(-2) + ("00" + Math.round(h2).toString(16)).slice(-2);
        }
        function R(e3) {
          var t3, a2;
          return e3 = e3.trim(), null != (a2 = null != (t3 = q[e3.toLowerCase()]) ? t3 : q[P[e3]]) ? a2 : F(e3);
        }
        function I(e3, t3, a2) {
          return a2 < 0 && (a2 += 6), a2 >= 6 && (a2 -= 6), a2 < 1 ? (t3 - e3) * a2 + e3 : a2 < 3 ? t3 : a2 < 4 ? (t3 - e3) * (4 - a2) + e3 : e3;
        }
        function j(e3) {
          return e3 < 0 ? 0 : e3 > 255 ? 255 : Math.round(e3);
        }
        function V(e3) {
          let t3 = function(e4) {
            if (!e4 || "#" !== e4[0]) return;
            let t4;
            return (e4 = e4.slice(1)).length <= 4 ? (t4 = { r: parseInt(e4[0] + e4[0], 16), g: parseInt(e4[1] + e4[1], 16), b: parseInt(e4[2] + e4[2], 16) }, 4 === e4.length && (t4.a = parseInt(e4[3] + e4[3], 16) / 255)) : (t4 = { r: parseInt(e4[0] + e4[1], 16), g: parseInt(e4[2] + e4[3], 16), b: parseInt(e4[4] + e4[5], 16) }, 8 === e4.length && (t4.a = parseInt(e4[6] + e4[7], 16) / 255)), t4 && void 0 === t4.a && (t4.a = 1), t4;
          }(e3);
          if (!t3) return e3;
          let { h: a2, s: r2, l: i2 } = function(e4) {
            let { r: t4, g: a3, b: r3 } = e4;
            t4 /= 255, a3 /= 255, r3 /= 255;
            let i3, o2, n2 = Math.min(t4, a3, r3), s2 = Math.max(t4, a3, r3), l2 = s2 - n2;
            s2 === n2 ? i3 = 0 : t4 === s2 ? i3 = (a3 - r3) / l2 : a3 === s2 ? i3 = 2 + (r3 - t4) / l2 : r3 === s2 && (i3 = 4 + (t4 - a3) / l2), i3 = Math.min(60 * i3, 360), i3 < 0 && (i3 += 360);
            let d2 = (n2 + s2) / 2;
            return o2 = s2 === n2 ? 0 : d2 <= 0.5 ? l2 / (s2 + n2) : l2 / (2 - s2 - n2), { h: i3, s: o2, l: d2 };
          }(t3);
          return r2 += 0.1, i2 -= 0.1, function(e4) {
            let { r: t4, g: a3, b: r3 } = e4, i3 = ((1 << 24) + (j(t4) << 16) + (j(a3) << 8) + j(r3)).toString(16).slice(1);
            return i3[0] === i3[1] && i3[2] === i3[3] && i3[4] === i3[5] && i3[6] === i3[7] && (i3 = i3[0] + i3[2] + i3[4]), "#" + i3;
          }(function(e4) {
            let [t4, a3, r3] = [e4.h, e4.s, e4.l];
            t4 = (t4 + 360) % 360 / 60, r3 = Math.max(0, Math.min(r3, 1)), a3 = Math.max(0, Math.min(a3, 1));
            let i3 = r3 <= 0.5 ? r3 * (a3 + 1) : r3 + a3 - r3 * a3, o2 = 2 * r3 - i3;
            return { r: Math.round(255 * I(o2, i3, t4 + 2)), g: Math.round(255 * I(o2, i3, t4)), b: Math.round(255 * I(o2, i3, t4 - 2)) };
          }({ h: a2, s: r2, l: i2 }));
        }
        var H = {}, W = { 60: "\\lt", 62: "\\gt", 111: "o", 38: "\\&", 123: "\\lbrace", 125: "\\rbrace", 91: "\\lbrack", 93: "\\rbrack", 58: "\\colon", 160: "~", 172: "\\neg", 183: "\\cdot", 188: "\\frac{1}{4}", 189: "\\frac{1}{2}", 190: "\\frac{3}{4}", 8304: "^{0}", 8305: "^{i}", 185: "^{1}", 178: "^{2}", 179: "^{3}", 8224: "\\dagger", 8225: "\\ddagger", 8230: "\\ldots", 8308: "^{4}", 8309: "^{5}", 8310: "^{6}", 8311: "^{7}", 8312: "^{8}", 8313: "^{9}", 8314: "^{+}", 8315: "^{-}", 8316: "^{=}", 8319: "^{n}", 8320: "_{0}", 8321: "_{1}", 8322: "_{2}", 8323: "_{3}", 8324: "_{4}", 8325: "_{5}", 8326: "_{6}", 8327: "_{7}", 8328: "_{8}", 8329: "_{9}", 8330: "_{+}", 8331: "_{-}", 8332: "_{=}", 8336: "_{a}", 8337: "_{e}", 8338: "_{o}", 8339: "_{x}", 8242: "\\prime", 39: "\\prime", 8592: "\\gets", 8594: "\\to", 9651: "\\triangle", 9661: "\\triangledown", 8715: "\\owns", 8727: "\\ast", 8739: "\\vert", 8741: "\\Vert", 8743: "\\land", 8744: "\\lor", 8901: "\\cdot", 8904: "\\bowtie", 8800: "\\ne", 8804: "\\le", 8805: "\\ge", 8869: "\\bot", 10231: "\\biconditional", 10232: "\\impliedby", 10233: "\\implies", 10234: "\\iff", 8450: "\\mathbb{C}", 8469: "\\mathbb{N}", 8473: "\\mathbb{P}", 8474: "\\mathbb{Q}", 8477: "\\mathbb{R}", 8484: "\\mathbb{Z}", 8461: "\\mathbb{H}", 8476: "\\Re", 8465: "\\Im", 42: "\\ast", 11036: "\\square", 9633: "\\square", 8720: "\\coprod", 8716: "\\not\\ni", 9671: "\\diamond", 8846: "\\uplus", 8851: "\\sqcap", 8852: "\\sqcup", 8768: "\\wr", 8750: "\\oint", 8226: "\\textbullet", 8722: "-", 978: "\\Upsilon" }, X = {}, U = {}, J = { iff: "\\;⟺\\;", nicefrac: "^{#1}\\!\\!/\\!_{#2}", rd: "\\mathrm{d}", rD: "\\mathrm{D}", doubleStruckCapitalN: "\\mathbb{N}", doubleStruckCapitalR: "\\mathbb{R}", doubleStruckCapitalQ: "\\mathbb{Q}", doubleStruckCapitalZ: "\\mathbb{Z}", doubleStruckCapitalP: "\\mathbb{P}", scriptCapitalE: "\\mathscr{E}", scriptCapitalH: "\\mathscr{H}", scriptCapitalL: "\\mathscr{L}", gothicCapitalC: "\\mathfrak{C}", gothicCapitalH: "\\mathfrak{H}", gothicCapitalI: "\\mathfrak{I}", gothicCapitalR: "\\mathfrak{R}", imaginaryI: "\\mathrm{i}", imaginaryJ: "\\mathrm{j}", exponentialE: "\\mathrm{e}", differentialD: "\\mathrm{d}", capitalDifferentialD: "\\mathrm{D}", "braket.sty": { package: { bra: "\\mathinner{\\langle{#1}|}", ket: "\\mathinner{|{#1}\\rangle}", braket: "\\mathinner{\\langle{#1}\\rangle}", set: "\\mathinner{\\lbrace #1 \\rbrace}", Bra: "\\left\\langle #1\\right|", Ket: "\\left|#1\\right\\rangle", Braket: "\\left\\langle{#1}\\right\\rangle", Set: "\\left\\lbrace #1 \\right\\rbrace" } }, "amsmath.sty": { package: { varGamma: "\\mathit{\\Gamma}", varDelta: "\\mathit{\\Delta}", varTheta: "\\mathit{\\Theta}", varLambda: "\\mathit{\\Lambda}", varXi: "\\mathit{\\Xi}", varPi: "\\mathit{\\Pi}", varSigma: "\\mathit{\\Sigma}", varUpsilon: "\\mathit{\\Upsilon}", varPhi: "\\mathit{\\Phi}", varPsi: "\\mathit{\\Psi}", varOmega: "\\mathit{\\Omega}", pmod: { def: "\\quad(\\operatorname{mod}\\ #1)", args: 1, expand: false }, mod: { def: "\\quad\\operatorname{mod}\\,\\,#1", args: 1, expand: false }, bmod: { def: "\\;\\mathbin{\\operatorname{mod }}", expand: false } }, expand: false }, "texvc.sty": { package: { darr: "\\downarrow", dArr: "\\Downarrow", Darr: "\\Downarrow", lang: "\\langle", rang: "\\rangle", uarr: "\\uparrow", uArr: "\\Uparrow", Uarr: "\\Uparrow", N: "\\mathbb{N}", R: "\\mathbb{R}", Z: "\\mathbb{Z}", alef: "\\aleph", alefsym: "\\aleph", Alpha: "\\mathrm{A}", Beta: "\\mathrm{B}", bull: "\\bullet", Chi: "\\mathrm{X}", clubs: "\\clubsuit", cnums: "\\mathbb{C}", Complex: "\\mathbb{C}", Dagger: "\\ddagger", diamonds: "\\diamondsuit", empty: "\\emptyset", Epsilon: "\\mathrm{E}", Eta: "\\mathrm{H}", exist: "\\exists", harr: "\\leftrightarrow", hArr: "\\Leftrightarrow", Harr: "\\Leftrightarrow", hearts: "\\heartsuit", image: "\\Im", infin: "\\infty", Iota: "\\mathrm{I}", isin: "\\in", Kappa: "\\mathrm{K}", larr: "\\leftarrow", lArr: "\\Leftarrow", Larr: "\\Leftarrow", lrarr: "\\leftrightarrow", lrArr: "\\Leftrightarrow", Lrarr: "\\Leftrightarrow", Mu: "\\mathrm{M}", natnums: "\\mathbb{N}", Nu: "\\mathrm{N}", Omicron: "\\mathrm{O}", plusmn: "\\pm", rarr: "\\rightarrow", rArr: "\\Rightarrow", Rarr: "\\Rightarrow", real: "\\Re", reals: "\\mathbb{R}", Reals: "\\mathbb{R}", Rho: "\\mathrm{P}", sdot: "\\cdot", sect: "\\S", spades: "\\spadesuit", sub: "\\subset", sube: "\\subseteq", supe: "\\supseteq", Tau: "\\mathrm{T}", thetasym: "\\vartheta", weierp: "\\wp", Zeta: "\\mathrm{Z}" }, expand: false } }, G = { " ": 32, "\\#": 35, "\\&": 38, "\\$": 36, "\\%": 37, "\\_": 95, "\\euro": 8364, "\\maltese": 10016, "\\{": 123, "\\}": 125, "\\nobreakspace": 160, "\\ldots": 8230, "\\textellipsis": 8230, "\\backslash": 92, "`": 8216, "'": 8217, "``": 8220, "''": 8221, "\\degree": 176, "\\textasciicircum": 94, "\\textasciitilde": 126, "\\textasteriskcentered": 42, "\\textbackslash": 92, "\\textbraceleft": 123, "\\textbraceright": 125, "\\textbullet": 8226, "\\textdollar": 36, "\\textsterling": 163, "\\textdagger": 8224, "\\textdaggerdbl": 8225, "–": 8211, "—": 8212, "‘": 8216, "’": 8217, "“": 8220, "”": 8221, '"': 8221, "\\ss": 223, "\\ae": 230, "\\oe": 339, "\\AE": 198, "\\OE": 338, "\\O": 216, "\\i": 305, "\\j": 567, "\\aa": 229, "\\AA": 197 }, Z = /[\w!@*()-=+{}[\]\\';:?/.,~<>`|$%#&^" ]/, Y = z() ? new RegExp("\\p{Letter}", "u") : /[a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒößÖẞìíòúÌÍÒÚáñÁÑ]/, Q = z() ? new RegExp("[0-9\\p{Letter}]", "u") : /[\da-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒößÖẞìíòúÌÍÒÚáñÁÑ]/;
        function ee(e3, t3, a2 = "mord", r2) {
          void 0 !== t3 && (H[e3] = { definitionType: "symbol", type: a2, variant: r2, codepoint: t3 }, W[t3] || (W[t3] = e3), G[e3] || (G[e3] = t3));
        }
        function te(e3, t3, a2) {
          if ("string" != typeof e3) for (let [r2, i2, o2, n2] of e3) ee(r2, i2, null != o2 ? o2 : t3, null != n2 ? n2 : a2);
          else for (let t4 = 0; t4 < e3.length; t4++) {
            let a3 = e3.charAt(t4);
            ee(a3, a3.codePointAt(0));
          }
        }
        function ae(e3, t3) {
          for (let a2 = e3; a2 <= t3; a2++) ee(String.fromCodePoint(a2), a2);
        }
        function re(e3, t3) {
          if (void 0 === t3) return "";
          if ("math" === e3 && W[t3]) return W[t3];
          if ("text" === e3) {
            let e4 = Object.keys(G).find((e5) => G[e5] === t3);
            if (!e4) {
              let a2 = t3.toString(16);
              e4 = "^".repeat(a2.length) + a2;
            }
            return e4;
          }
          return String.fromCodePoint(t3);
        }
        var ie, oe = { 119893: 8462, 119965: 8492, 119968: 8496, 119969: 8497, 119971: 8459, 119972: 8464, 119975: 8466, 119976: 8499, 119981: 8475, 119994: 8495, 119996: 8458, 120004: 8500, 120070: 8493, 120075: 8460, 120076: 8465, 120085: 8476, 120093: 8488, 120122: 8450, 120127: 8461, 120133: 8469, 120135: 8473, 120136: 8474, 120137: 8477, 120145: 8484 }, ne = [{ start: 119808, len: 26, offset: 65, style: "bold" }, { start: 119834, len: 26, offset: 97, style: "bold" }, { start: 119860, len: 26, offset: 65, style: "italic" }, { start: 119886, len: 26, offset: 97, style: "italic" }, { start: 119912, len: 26, offset: 65, style: "bolditalic" }, { start: 119938, len: 26, offset: 97, style: "bolditalic" }, { start: 119964, len: 26, offset: 65, variant: "script" }, { start: 119990, len: 26, offset: 97, variant: "script" }, { start: 120016, len: 26, offset: 65, variant: "script", style: "bold" }, { start: 120042, len: 26, offset: 97, variant: "script", style: "bold" }, { start: 120068, len: 26, offset: 65, variant: "fraktur" }, { start: 120094, len: 26, offset: 97, variant: "fraktur" }, { start: 120172, len: 26, offset: 65, variant: "fraktur", style: "bold" }, { start: 120198, len: 26, offset: 97, variant: "fraktur", style: "bold" }, { start: 120120, len: 26, offset: 65, variant: "double-struck" }, { start: 120146, len: 26, offset: 97, variant: "double-struck" }, { start: 120224, len: 26, offset: 65, variant: "sans-serif" }, { start: 120250, len: 26, offset: 97, variant: "sans-serif" }, { start: 120276, len: 26, offset: 65, variant: "sans-serif", style: "bold" }, { start: 120302, len: 26, offset: 97, variant: "sans-serif", style: "bold" }, { start: 120328, len: 26, offset: 65, variant: "sans-serif", style: "italic" }, { start: 120354, len: 26, offset: 97, variant: "sans-serif", style: "italic" }, { start: 120380, len: 26, offset: 65, variant: "sans-serif", style: "bolditalic" }, { start: 120406, len: 26, offset: 97, variant: "sans-serif", style: "bolditalic" }, { start: 120432, len: 26, offset: 65, variant: "monospace" }, { start: 120458, len: 26, offset: 97, variant: "monospace" }, { start: 120488, len: 25, offset: 913, style: "bold" }, { start: 120514, len: 25, offset: 945, style: "bold" }, { start: 120546, len: 25, offset: 913, style: "italic" }, { start: 120572, len: 25, offset: 945, style: "italic" }, { start: 120604, len: 25, offset: 913, style: "bolditalic" }, { start: 120630, len: 25, offset: 945, style: "bolditalic" }, { start: 120662, len: 25, offset: 913, variant: "sans-serif", style: "bold" }, { start: 120688, len: 25, offset: 945, variant: "sans-serif", style: "bold" }, { start: 120720, len: 25, offset: 913, variant: "sans-serif", style: "bolditalic" }, { start: 120746, len: 25, offset: 945, variant: "sans-serif", style: "bolditalic" }, { start: 120782, len: 10, offset: 48, variant: "main", style: "bold" }, { start: 120792, len: 10, offset: 48, variant: "double-struck" }, { start: 120803, len: 10, offset: 48, variant: "sans-serif" }, { start: 120812, len: 10, offset: 48, variant: "sans-serif", style: "bold" }, { start: 120822, len: 10, offset: 48, variant: "monospace" }];
        function se(e3) {
          let t3 = "auto", a2 = e3.match(/:([^=]+)/);
          return a2 && (t3 = a2[1].trim()), t3;
        }
        function le(e3) {
          if (!e3) return [];
          let t3 = [], a2 = e3.split("]");
          if (a2[0].startsWith("[")) {
            t3.push({ isOptional: true, type: se(a2[0].slice(1)) });
            for (let e4 = 1; e4 <= a2.length; e4++) t3.push(...le(a2[e4]));
          } else if (a2 = e3.split("}"), a2[0].startsWith("{")) {
            t3.push({ isOptional: false, type: se(a2[0].slice(1)) });
            for (let e4 = 1; e4 <= a2.length; e4++) t3.push(...le(a2[e4]));
          }
          return t3;
        }
        function de(e3) {
          if (!e3) return "";
          let t3 = "", a2 = true;
          for (let r2 of e3) "string" == typeof r2.value ? t3 += r2.value : a2 = false;
          return a2 ? t3 : "";
        }
        function ce(e3, t3, a2, r2 = false) {
          "string" == typeof e3 && (e3 = [e3]);
          let i2 = { tabular: r2, params: le(t3), createAtom: a2 };
          for (let t4 of e3) U[t4] = i2;
        }
        function ue(e3, t3, a2) {
          ce(e3, t3, a2, true);
        }
        function pe(e3, t3, a2) {
          var r2, i2;
          a2 || (a2 = {});
          let o2 = { definitionType: "function", params: le(t3), ifMode: a2.ifMode, isFunction: null != (r2 = a2.isFunction) && r2, applyMode: a2.applyMode, infix: null != (i2 = a2.infix) && i2, createAtom: a2.createAtom, applyStyle: a2.applyStyle };
          if ("string" == typeof e3) X["\\" + e3] = o2;
          else for (let t4 of e3) X["\\" + t4] = o2;
        }
        function he(e3) {
          return ie || (ie = fe(J)), e3 ? fe(_(_({}, ie), e3)) : ie;
        }
        function me(e3, t3) {
          var a2, r2, i2, o2;
          if ("string" == typeof e3) {
            let i3 = 0, o3 = e3;
            return /(^|[^\\])#1/.test(o3) && (i3 = 1), /(^|[^\\])#2/.test(o3) && (i3 = 2), /(^|[^\\])#3/.test(o3) && (i3 = 3), /(^|[^\\])#4/.test(o3) && (i3 = 4), /(^|[^\\])#5/.test(o3) && (i3 = 5), /(^|[^\\])#6/.test(o3) && (i3 = 6), /(^|[^\\])#7/.test(o3) && (i3 = 7), /(^|[^\\])#8/.test(o3) && (i3 = 8), /(^|[^\\])#9/.test(o3) && (i3 = 9), { expand: null == (a2 = null == t3 ? void 0 : t3.expand) || a2, captureSelection: null == (r2 = null == t3 ? void 0 : t3.captureSelection) || r2, args: i3, def: o3 };
          }
          return _({ expand: null == (i2 = null == t3 ? void 0 : t3.expand) || i2, captureSelection: null == (o2 = null == t3 ? void 0 : t3.captureSelection) || o2, args: 0 }, e3);
        }
        function fe(e3) {
          if (!e3) return {};
          let t3 = {};
          for (let a2 of Object.keys(e3)) {
            let r2 = e3[a2];
            if (null == r2) delete t3[a2];
            else if ("object" == typeof r2 && "package" in r2) for (let e4 of Object.keys(r2.package)) t3[e4] = me(r2.package[e4], { expand: r2.expand, captureSelection: r2.captureSelection });
            else t3[a2] = me(r2);
          }
          return t3;
        }
        var ye = [0, 0.69444, 0, 0], be = [0, 0.61111, 0, 0], ge = [0.25, 0.75, 0, 0], ve = [0, 0.44444, 0, 0], ke = [0, 0.68611, 0, 0], xe = [0.19444, 0.69444, 0, 0], we = [0, 0.68333, 0, 0], _e = [0, 0.68889, 0, 0], Se = [0, 0.69141, 0, 0], Me = [0, 0, 0, 0], Le = [0, 0.64444, 0, 0], Ce = [0, 0.69224, 0, 0], Ae = [0.19444, 0.44444, 0, 0], De = [0.65002, 1.15, 0, 0], Te = [0, 0.55556, 0, 0], ze = [0.35001, 0.85, 0, 0], Be = [1.25003, 1.75, 0, 0], Ke = [0.95003, 1.45, 0, 0], Ee = [0, 0.75, 0, 0], $e = [0, 0.47534, 0, 0], qe = [0.25001, 0.75, 0, 0], Oe = [0.55001, 1.05, 0, 0], Pe = [0.16667, 0.68889, 0, 0], Ne = [0.08167, 0.58167, 0, 0], Fe = { "AMS-Regular": { 32: Me, 65: _e, 66: _e, 67: _e, 68: _e, 69: _e, 70: _e, 71: _e, 72: _e, 73: _e, 74: Pe, 75: _e, 76: _e, 77: _e, 78: _e, 79: Pe, 80: _e, 81: Pe, 82: _e, 83: _e, 84: _e, 85: _e, 86: _e, 87: _e, 88: _e, 89: _e, 90: _e, 107: _e, 160: Me, 165: [0, 0.675, 0.025, 0], 174: [0.15559, 0.69224, 0, 0], 240: _e, 295: _e, 710: [0, 0.825, 0, 0], 732: [0, 0.9, 0, 0], 770: [0, 0.825, 0, 0], 771: [0, 0.9, 0, 0], 989: Ne, 1008: [0, 0.43056, 0.04028, 0], 8245: [0, 0.54986, 0, 0], 8463: _e, 8487: _e, 8498: _e, 8502: _e, 8503: _e, 8504: _e, 8513: _e, 8592: [-0.03598, 0.46402, 0, 0], 8594: [-0.03598, 0.46402, 0, 0], 8602: [-0.13313, 0.36687, 0, 0], 8603: [-0.13313, 0.36687, 0, 0], 8606: [0.01354, 0.52239, 0, 0], 8608: [0.01354, 0.52239, 0, 0], 8610: [0.01354, 0.52239, 0, 0], 8611: [0.01354, 0.52239, 0, 0], 8619: [0, 0.54986, 0, 0], 8620: [0, 0.54986, 0, 0], 8621: [-0.13313, 0.37788, 0, 0], 8622: [-0.13313, 0.36687, 0, 0], 8624: Ce, 8625: Ce, 8630: [0, 0.43056, 0, 0], 8631: [0, 0.43056, 0, 0], 8634: [0.08198, 0.58198, 0, 0], 8635: [0.08198, 0.58198, 0, 0], 8638: [0.19444, 0.69224, 0, 0], 8639: [0.19444, 0.69224, 0, 0], 8642: [0.19444, 0.69224, 0, 0], 8643: [0.19444, 0.69224, 0, 0], 8644: [0.1808, 0.675, 0, 0], 8646: [0.1808, 0.675, 0, 0], 8647: [0.1808, 0.675, 0, 0], 8648: [0.19444, 0.69224, 0, 0], 8649: [0.1808, 0.675, 0, 0], 8650: [0.19444, 0.69224, 0, 0], 8651: [0.01354, 0.52239, 0, 0], 8652: [0.01354, 0.52239, 0, 0], 8653: [-0.13313, 0.36687, 0, 0], 8654: [-0.13313, 0.36687, 0, 0], 8655: [-0.13313, 0.36687, 0, 0], 8666: [0.13667, 0.63667, 0, 0], 8667: [0.13667, 0.63667, 0, 0], 8669: [-0.13313, 0.37788, 0, 0], 8672: [-0.064, 0.437, 0, 0], 8674: [-0.064, 0.437, 0, 0], 8705: [0, 0.825, 0, 0], 8708: _e, 8709: Ne, 8717: [0, 0.43056, 0, 0], 8722: [-0.03598, 0.46402, 0, 0], 8724: [0.08198, 0.69224, 0, 0], 8726: Ne, 8733: Ce, 8736: Ce, 8737: Ce, 8738: [0.03517, 0.52239, 0, 0], 8739: Ne, 8740: [0.25142, 0.74111, 0, 0], 8741: Ne, 8742: [0.25142, 0.74111, 0, 0], 8756: Ce, 8757: Ce, 8764: [-0.13313, 0.36687, 0, 0], 8765: [-0.13313, 0.37788, 0, 0], 8769: [-0.13313, 0.36687, 0, 0], 8770: [-0.03625, 0.46375, 0, 0], 8774: [0.30274, 0.79383, 0, 0], 8776: [-0.01688, 0.48312, 0, 0], 8778: Ne, 8782: [0.06062, 0.54986, 0, 0], 8783: [0.06062, 0.54986, 0, 0], 8785: [0.08198, 0.58198, 0, 0], 8786: [0.08198, 0.58198, 0, 0], 8787: [0.08198, 0.58198, 0, 0], 8790: Ce, 8791: [0.22958, 0.72958, 0, 0], 8796: [0.08198, 0.91667, 0, 0], 8806: [0.25583, 0.75583, 0, 0], 8807: [0.25583, 0.75583, 0, 0], 8808: [0.25142, 0.75726, 0, 0], 8809: [0.25142, 0.75726, 0, 0], 8812: [0.25583, 0.75583, 0, 0], 8814: [0.20576, 0.70576, 0, 0], 8815: [0.20576, 0.70576, 0, 0], 8816: [0.30274, 0.79383, 0, 0], 8817: [0.30274, 0.79383, 0, 0], 8818: [0.22958, 0.72958, 0, 0], 8819: [0.22958, 0.72958, 0, 0], 8822: [0.1808, 0.675, 0, 0], 8823: [0.1808, 0.675, 0, 0], 8828: [0.13667, 0.63667, 0, 0], 8829: [0.13667, 0.63667, 0, 0], 8830: [0.22958, 0.72958, 0, 0], 8831: [0.22958, 0.72958, 0, 0], 8832: [0.20576, 0.70576, 0, 0], 8833: [0.20576, 0.70576, 0, 0], 8840: [0.30274, 0.79383, 0, 0], 8841: [0.30274, 0.79383, 0, 0], 8842: [0.13597, 0.63597, 0, 0], 8843: [0.13597, 0.63597, 0, 0], 8847: [0.03517, 0.54986, 0, 0], 8848: [0.03517, 0.54986, 0, 0], 8858: [0.08198, 0.58198, 0, 0], 8859: [0.08198, 0.58198, 0, 0], 8861: [0.08198, 0.58198, 0, 0], 8862: [0, 0.675, 0, 0], 8863: [0, 0.675, 0, 0], 8864: [0, 0.675, 0, 0], 8865: [0, 0.675, 0, 0], 8872: Ce, 8873: Ce, 8874: Ce, 8876: _e, 8877: _e, 8878: _e, 8879: _e, 8882: [0.03517, 0.54986, 0, 0], 8883: [0.03517, 0.54986, 0, 0], 8884: [0.13667, 0.63667, 0, 0], 8885: [0.13667, 0.63667, 0, 0], 8888: [0, 0.54986, 0, 0], 8890: [0.19444, 0.43056, 0, 0], 8891: [0.19444, 0.69224, 0, 0], 8892: [0.19444, 0.69224, 0, 0], 8901: [0, 0.54986, 0, 0], 8903: Ne, 8905: Ne, 8906: Ne, 8907: Ce, 8908: Ce, 8909: [-0.03598, 0.46402, 0, 0], 8910: [0, 0.54986, 0, 0], 8911: [0, 0.54986, 0, 0], 8912: [0.03517, 0.54986, 0, 0], 8913: [0.03517, 0.54986, 0, 0], 8914: [0, 0.54986, 0, 0], 8915: [0, 0.54986, 0, 0], 8916: Ce, 8918: [0.0391, 0.5391, 0, 0], 8919: [0.0391, 0.5391, 0, 0], 8920: [0.03517, 0.54986, 0, 0], 8921: [0.03517, 0.54986, 0, 0], 8922: [0.38569, 0.88569, 0, 0], 8923: [0.38569, 0.88569, 0, 0], 8926: [0.13667, 0.63667, 0, 0], 8927: [0.13667, 0.63667, 0, 0], 8928: [0.30274, 0.79383, 0, 0], 8929: [0.30274, 0.79383, 0, 0], 8934: [0.23222, 0.74111, 0, 0], 8935: [0.23222, 0.74111, 0, 0], 8936: [0.23222, 0.74111, 0, 0], 8937: [0.23222, 0.74111, 0, 0], 8938: [0.20576, 0.70576, 0, 0], 8939: [0.20576, 0.70576, 0, 0], 8940: [0.30274, 0.79383, 0, 0], 8941: [0.30274, 0.79383, 0, 0], 8994: [0.19444, 0.69224, 0, 0], 8995: [0.19444, 0.69224, 0, 0], 9416: [0.15559, 0.69224, 0, 0], 9484: Ce, 9488: Ce, 9492: [0, 0.37788, 0, 0], 9496: [0, 0.37788, 0, 0], 9585: [0.19444, 0.68889, 0, 0], 9586: [0.19444, 0.74111, 0, 0], 9632: [0, 0.675, 0, 0], 9633: [0, 0.675, 0, 0], 9650: [0, 0.54986, 0, 0], 9651: [0, 0.54986, 0, 0], 9654: [0.03517, 0.54986, 0, 0], 9660: [0, 0.54986, 0, 0], 9661: [0, 0.54986, 0, 0], 9664: [0.03517, 0.54986, 0, 0], 9674: [0.11111, 0.69224, 0, 0], 9733: [0.19444, 0.69224, 0, 0], 10003: Ce, 10016: Ce, 10731: [0.11111, 0.69224, 0, 0], 10846: [0.19444, 0.75583, 0, 0], 10877: [0.13667, 0.63667, 0, 0], 10878: [0.13667, 0.63667, 0, 0], 10885: [0.25583, 0.75583, 0, 0], 10886: [0.25583, 0.75583, 0, 0], 10887: [0.13597, 0.63597, 0, 0], 10888: [0.13597, 0.63597, 0, 0], 10889: [0.26167, 0.75726, 0, 0], 10890: [0.26167, 0.75726, 0, 0], 10891: [0.48256, 0.98256, 0, 0], 10892: [0.48256, 0.98256, 0, 0], 10901: [0.13667, 0.63667, 0, 0], 10902: [0.13667, 0.63667, 0, 0], 10933: [0.25142, 0.75726, 0, 0], 10934: [0.25142, 0.75726, 0, 0], 10935: [0.26167, 0.75726, 0, 0], 10936: [0.26167, 0.75726, 0, 0], 10937: [0.26167, 0.75726, 0, 0], 10938: [0.26167, 0.75726, 0, 0], 10949: [0.25583, 0.75583, 0, 0], 10950: [0.25583, 0.75583, 0, 0], 10955: [0.28481, 0.79383, 0, 0], 10956: [0.28481, 0.79383, 0, 0], 57350: Ne, 57351: Ne, 57352: Ne, 57353: [0, 0.43056, 0.04028, 0], 57356: [0.25142, 0.75726, 0, 0], 57357: [0.25142, 0.75726, 0, 0], 57358: [0.41951, 0.91951, 0, 0], 57359: [0.30274, 0.79383, 0, 0], 57360: [0.30274, 0.79383, 0, 0], 57361: [0.41951, 0.91951, 0, 0], 57366: [0.25142, 0.75726, 0, 0], 57367: [0.25142, 0.75726, 0, 0], 57368: [0.25142, 0.75726, 0, 0], 57369: [0.25142, 0.75726, 0, 0], 57370: [0.13597, 0.63597, 0, 0], 57371: [0.13597, 0.63597, 0, 0] }, "Caligraphic-Regular": { 32: Me, 65: [0, 0.68333, 0, 0.19445], 66: [0, 0.68333, 0.03041, 0.13889], 67: [0, 0.68333, 0.05834, 0.13889], 68: [0, 0.68333, 0.02778, 0.08334], 69: [0, 0.68333, 0.08944, 0.11111], 70: [0, 0.68333, 0.09931, 0.11111], 71: [0.09722, 0.68333, 0.0593, 0.11111], 72: [0, 0.68333, 965e-5, 0.11111], 73: [0, 0.68333, 0.07382, 0], 74: [0.09722, 0.68333, 0.18472, 0.16667], 75: [0, 0.68333, 0.01445, 0.05556], 76: [0, 0.68333, 0, 0.13889], 77: [0, 0.68333, 0, 0.13889], 78: [0, 0.68333, 0.14736, 0.08334], 79: [0, 0.68333, 0.02778, 0.11111], 80: [0, 0.68333, 0.08222, 0.08334], 81: [0.09722, 0.68333, 0, 0.11111], 82: [0, 0.68333, 0, 0.08334], 83: [0, 0.68333, 0.075, 0.13889], 84: [0, 0.68333, 0.25417, 0], 85: [0, 0.68333, 0.09931, 0.08334], 86: [0, 0.68333, 0.08222, 0], 87: [0, 0.68333, 0.08222, 0.08334], 88: [0, 0.68333, 0.14643, 0.13889], 89: [0.09722, 0.68333, 0.08222, 0.08334], 90: [0, 0.68333, 0.07944, 0.13889], 160: Me }, "Fraktur-Regular": { 32: Me, 33: Se, 34: Se, 38: Se, 39: Se, 40: [0.24982, 0.74947, 0, 0], 41: [0.24982, 0.74947, 0, 0], 42: [0, 0.62119, 0, 0], 43: [0.08319, 0.58283, 0, 0], 44: [0, 0.10803, 0, 0], 45: [0.08319, 0.58283, 0, 0], 46: [0, 0.10803, 0, 0], 47: [0.24982, 0.74947, 0, 0], 48: $e, 49: $e, 50: $e, 51: [0.18906, 0.47534, 0, 0], 52: [0.18906, 0.47534, 0, 0], 53: [0.18906, 0.47534, 0, 0], 54: Se, 55: [0.18906, 0.47534, 0, 0], 56: Se, 57: [0.18906, 0.47534, 0, 0], 58: $e, 59: [0.12604, 0.47534, 0, 0], 61: [-0.13099, 0.36866, 0, 0], 63: Se, 65: Se, 66: Se, 67: Se, 68: Se, 69: Se, 70: [0.12604, 0.69141, 0, 0], 71: Se, 72: [0.06302, 0.69141, 0, 0], 73: Se, 74: [0.12604, 0.69141, 0, 0], 75: Se, 76: Se, 77: Se, 78: Se, 79: Se, 80: [0.18906, 0.69141, 0, 0], 81: [0.03781, 0.69141, 0, 0], 82: Se, 83: Se, 84: Se, 85: Se, 86: Se, 87: Se, 88: Se, 89: [0.18906, 0.69141, 0, 0], 90: [0.12604, 0.69141, 0, 0], 91: [0.24982, 0.74947, 0, 0], 93: [0.24982, 0.74947, 0, 0], 94: Se, 97: $e, 98: Se, 99: $e, 100: [0, 0.62119, 0, 0], 101: $e, 102: [0.18906, 0.69141, 0, 0], 103: [0.18906, 0.47534, 0, 0], 104: [0.18906, 0.69141, 0, 0], 105: Se, 106: Se, 107: Se, 108: Se, 109: $e, 110: $e, 111: $e, 112: [0.18906, 0.52396, 0, 0], 113: [0.18906, 0.47534, 0, 0], 114: $e, 115: $e, 116: [0, 0.62119, 0, 0], 117: $e, 118: [0, 0.52396, 0, 0], 119: [0, 0.52396, 0, 0], 120: [0.18906, 0.47534, 0, 0], 121: [0.18906, 0.47534, 0, 0], 122: [0.18906, 0.47534, 0, 0], 160: Me, 8216: Se, 8217: Se, 58112: [0, 0.62119, 0, 0], 58113: [0, 0.62119, 0, 0], 58114: [0.18906, 0.69141, 0, 0], 58115: [0.18906, 0.69141, 0, 0], 58116: [0.18906, 0.47534, 0, 0], 58117: Se, 58118: [0, 0.62119, 0, 0], 58119: $e }, "Main-Bold": { 32: Me, 33: ye, 34: ye, 35: xe, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: ye, 39: ye, 40: ge, 41: ge, 42: Ee, 43: [0.13333, 0.63333, 0, 0], 44: [0.19444, 0.15556, 0, 0], 45: ve, 46: [0, 0.15556, 0, 0], 47: ge, 48: Le, 49: Le, 50: Le, 51: Le, 52: Le, 53: Le, 54: Le, 55: Le, 56: Le, 57: Le, 58: ve, 59: Ae, 60: [0.08556, 0.58556, 0, 0], 61: [-0.10889, 0.39111, 0, 0], 62: [0.08556, 0.58556, 0, 0], 63: ye, 64: ye, 65: ke, 66: ke, 67: ke, 68: ke, 69: ke, 70: ke, 71: ke, 72: ke, 73: ke, 74: ke, 75: ke, 76: ke, 77: ke, 78: ke, 79: ke, 80: ke, 81: [0.19444, 0.68611, 0, 0], 82: ke, 83: ke, 84: ke, 85: ke, 86: [0, 0.68611, 0.01597, 0], 87: [0, 0.68611, 0.01597, 0], 88: ke, 89: [0, 0.68611, 0.02875, 0], 90: ke, 91: ge, 92: ge, 93: ge, 94: ye, 95: [0.31, 0.13444, 0.03194, 0], 97: ve, 98: ye, 99: ve, 100: ye, 101: ve, 102: [0, 0.69444, 0.10903, 0], 103: [0.19444, 0.44444, 0.01597, 0], 104: ye, 105: ye, 106: xe, 107: ye, 108: ye, 109: ve, 110: ve, 111: ve, 112: Ae, 113: Ae, 114: ve, 115: ve, 116: [0, 0.63492, 0, 0], 117: ve, 118: [0, 0.44444, 0.01597, 0], 119: [0, 0.44444, 0.01597, 0], 120: ve, 121: [0.19444, 0.44444, 0.01597, 0], 122: ve, 123: ge, 124: ge, 125: ge, 126: [0.35, 0.34444, 0, 0], 160: Me, 163: ye, 168: ye, 172: ve, 176: ye, 177: [0.13333, 0.63333, 0, 0], 184: [0.17014, 0, 0, 0], 198: ke, 215: [0.13333, 0.63333, 0, 0], 216: [0.04861, 0.73472, 0, 0], 223: ye, 230: ve, 247: [0.13333, 0.63333, 0, 0], 248: [0.09722, 0.54167, 0, 0], 305: ve, 338: ke, 339: ve, 567: Ae, 710: ye, 711: [0, 0.63194, 0, 0], 713: [0, 0.59611, 0, 0], 714: ye, 715: ye, 728: ye, 729: ye, 730: ye, 732: ye, 733: ye, 915: ke, 916: ke, 920: ke, 923: ke, 926: ke, 928: ke, 931: ke, 933: ke, 934: ke, 936: ke, 937: ke, 8211: [0, 0.44444, 0.03194, 0], 8212: [0, 0.44444, 0.03194, 0], 8216: ye, 8217: ye, 8220: ye, 8221: ye, 8224: xe, 8225: xe, 8242: Te, 8407: [0, 0.72444, 0.15486, 0], 8463: ye, 8465: ye, 8467: ye, 8472: Ae, 8476: ye, 8501: ye, 8592: [-0.10889, 0.39111, 0, 0], 8593: xe, 8594: [-0.10889, 0.39111, 0, 0], 8595: xe, 8596: [-0.10889, 0.39111, 0, 0], 8597: ge, 8598: xe, 8599: xe, 8600: xe, 8601: xe, 8636: [-0.10889, 0.39111, 0, 0], 8637: [-0.10889, 0.39111, 0, 0], 8640: [-0.10889, 0.39111, 0, 0], 8641: [-0.10889, 0.39111, 0, 0], 8656: [-0.10889, 0.39111, 0, 0], 8657: xe, 8658: [-0.10889, 0.39111, 0, 0], 8659: xe, 8660: [-0.10889, 0.39111, 0, 0], 8661: ge, 8704: ye, 8706: [0, 0.69444, 0.06389, 0], 8707: ye, 8709: [0.05556, 0.75, 0, 0], 8711: ke, 8712: [0.08556, 0.58556, 0, 0], 8715: [0.08556, 0.58556, 0, 0], 8722: [0.13333, 0.63333, 0, 0], 8723: [0.13333, 0.63333, 0, 0], 8725: ge, 8726: ge, 8727: [-0.02778, 0.47222, 0, 0], 8728: [-0.02639, 0.47361, 0, 0], 8729: [-0.02639, 0.47361, 0, 0], 8730: [0.18, 0.82, 0, 0], 8733: ve, 8734: ve, 8736: Ce, 8739: ge, 8741: ge, 8743: Te, 8744: Te, 8745: Te, 8746: Te, 8747: [0.19444, 0.69444, 0.12778, 0], 8764: [-0.10889, 0.39111, 0, 0], 8768: xe, 8771: [222e-5, 0.50222, 0, 0], 8776: [0.02444, 0.52444, 0, 0], 8781: [222e-5, 0.50222, 0, 0], 8801: [222e-5, 0.50222, 0, 0], 8804: [0.19667, 0.69667, 0, 0], 8805: [0.19667, 0.69667, 0, 0], 8810: [0.08556, 0.58556, 0, 0], 8811: [0.08556, 0.58556, 0, 0], 8826: [0.08556, 0.58556, 0, 0], 8827: [0.08556, 0.58556, 0, 0], 8834: [0.08556, 0.58556, 0, 0], 8835: [0.08556, 0.58556, 0, 0], 8838: [0.19667, 0.69667, 0, 0], 8839: [0.19667, 0.69667, 0, 0], 8846: Te, 8849: [0.19667, 0.69667, 0, 0], 8850: [0.19667, 0.69667, 0, 0], 8851: Te, 8852: Te, 8853: [0.13333, 0.63333, 0, 0], 8854: [0.13333, 0.63333, 0, 0], 8855: [0.13333, 0.63333, 0, 0], 8856: [0.13333, 0.63333, 0, 0], 8857: [0.13333, 0.63333, 0, 0], 8866: ye, 8867: ye, 8868: ye, 8869: ye, 8900: [-0.02639, 0.47361, 0, 0], 8901: [-0.02639, 0.47361, 0, 0], 8902: [-0.02778, 0.47222, 0, 0], 8968: ge, 8969: ge, 8970: ge, 8971: ge, 8994: [-0.13889, 0.36111, 0, 0], 8995: [-0.13889, 0.36111, 0, 0], 9651: xe, 9657: [-0.02778, 0.47222, 0, 0], 9661: xe, 9667: [-0.02778, 0.47222, 0, 0], 9711: xe, 9824: [0.12963, 0.69444, 0, 0], 9825: [0.12963, 0.69444, 0, 0], 9826: [0.12963, 0.69444, 0, 0], 9827: [0.12963, 0.69444, 0, 0], 9837: Ee, 9838: xe, 9839: xe, 10216: ge, 10217: ge, 10815: ke, 10927: [0.19667, 0.69667, 0, 0], 10928: [0.19667, 0.69667, 0, 0], 57376: xe }, "Main-BoldItalic": { 32: Me, 33: [0, 0.69444, 0.11417, 0], 34: [0, 0.69444, 0.07939, 0], 35: [0.19444, 0.69444, 0.06833, 0], 37: [0.05556, 0.75, 0.12861, 0], 38: [0, 0.69444, 0.08528, 0], 39: [0, 0.69444, 0.12945, 0], 40: [0.25, 0.75, 0.15806, 0], 41: [0.25, 0.75, 0.03306, 0], 42: [0, 0.75, 0.14333, 0], 43: [0.10333, 0.60333, 0.03306, 0], 44: [0.19444, 0.14722, 0, 0], 45: [0, 0.44444, 0.02611, 0], 46: [0, 0.14722, 0, 0], 47: [0.25, 0.75, 0.15806, 0], 48: [0, 0.64444, 0.13167, 0], 49: [0, 0.64444, 0.13167, 0], 50: [0, 0.64444, 0.13167, 0], 51: [0, 0.64444, 0.13167, 0], 52: [0.19444, 0.64444, 0.13167, 0], 53: [0, 0.64444, 0.13167, 0], 54: [0, 0.64444, 0.13167, 0], 55: [0.19444, 0.64444, 0.13167, 0], 56: [0, 0.64444, 0.13167, 0], 57: [0, 0.64444, 0.13167, 0], 58: [0, 0.44444, 0.06695, 0], 59: [0.19444, 0.44444, 0.06695, 0], 61: [-0.10889, 0.39111, 0.06833, 0], 63: [0, 0.69444, 0.11472, 0], 64: [0, 0.69444, 0.09208, 0], 65: ke, 66: [0, 0.68611, 0.0992, 0], 67: [0, 0.68611, 0.14208, 0], 68: [0, 0.68611, 0.09062, 0], 69: [0, 0.68611, 0.11431, 0], 70: [0, 0.68611, 0.12903, 0], 71: [0, 0.68611, 0.07347, 0], 72: [0, 0.68611, 0.17208, 0], 73: [0, 0.68611, 0.15681, 0], 74: [0, 0.68611, 0.145, 0], 75: [0, 0.68611, 0.14208, 0], 76: ke, 77: [0, 0.68611, 0.17208, 0], 78: [0, 0.68611, 0.17208, 0], 79: [0, 0.68611, 0.09062, 0], 80: [0, 0.68611, 0.0992, 0], 81: [0.19444, 0.68611, 0.09062, 0], 82: [0, 0.68611, 0.02559, 0], 83: [0, 0.68611, 0.11264, 0], 84: [0, 0.68611, 0.12903, 0], 85: [0, 0.68611, 0.17208, 0], 86: [0, 0.68611, 0.18625, 0], 87: [0, 0.68611, 0.18625, 0], 88: [0, 0.68611, 0.15681, 0], 89: [0, 0.68611, 0.19803, 0], 90: [0, 0.68611, 0.14208, 0], 91: [0.25, 0.75, 0.1875, 0], 93: [0.25, 0.75, 0.09972, 0], 94: [0, 0.69444, 0.06709, 0], 95: [0.31, 0.13444, 0.09811, 0], 97: [0, 0.44444, 0.09426, 0], 98: [0, 0.69444, 0.07861, 0], 99: [0, 0.44444, 0.05222, 0], 100: [0, 0.69444, 0.10861, 0], 101: [0, 0.44444, 0.085, 0], 102: [0.19444, 0.69444, 0.21778, 0], 103: [0.19444, 0.44444, 0.105, 0], 104: [0, 0.69444, 0.09426, 0], 105: [0, 0.69326, 0.11387, 0], 106: [0.19444, 0.69326, 0.1672, 0], 107: [0, 0.69444, 0.11111, 0], 108: [0, 0.69444, 0.10861, 0], 109: [0, 0.44444, 0.09426, 0], 110: [0, 0.44444, 0.09426, 0], 111: [0, 0.44444, 0.07861, 0], 112: [0.19444, 0.44444, 0.07861, 0], 113: [0.19444, 0.44444, 0.105, 0], 114: [0, 0.44444, 0.11111, 0], 115: [0, 0.44444, 0.08167, 0], 116: [0, 0.63492, 0.09639, 0], 117: [0, 0.44444, 0.09426, 0], 118: [0, 0.44444, 0.11111, 0], 119: [0, 0.44444, 0.11111, 0], 120: [0, 0.44444, 0.12583, 0], 121: [0.19444, 0.44444, 0.105, 0], 122: [0, 0.44444, 0.13889, 0], 126: [0.35, 0.34444, 0.11472, 0], 160: Me, 168: [0, 0.69444, 0.11473, 0], 176: ye, 184: [0.17014, 0, 0, 0], 198: [0, 0.68611, 0.11431, 0], 216: [0.04861, 0.73472, 0.09062, 0], 223: [0.19444, 0.69444, 0.09736, 0], 230: [0, 0.44444, 0.085, 0], 248: [0.09722, 0.54167, 0.09458, 0], 305: [0, 0.44444, 0.09426, 0], 338: [0, 0.68611, 0.11431, 0], 339: [0, 0.44444, 0.085, 0], 567: [0.19444, 0.44444, 0.04611, 0], 710: [0, 0.69444, 0.06709, 0], 711: [0, 0.63194, 0.08271, 0], 713: [0, 0.59444, 0.10444, 0], 714: [0, 0.69444, 0.08528, 0], 715: ye, 728: [0, 0.69444, 0.10333, 0], 729: [0, 0.69444, 0.12945, 0], 730: ye, 732: [0, 0.69444, 0.11472, 0], 733: [0, 0.69444, 0.11472, 0], 915: [0, 0.68611, 0.12903, 0], 916: ke, 920: [0, 0.68611, 0.09062, 0], 923: ke, 926: [0, 0.68611, 0.15092, 0], 928: [0, 0.68611, 0.17208, 0], 931: [0, 0.68611, 0.11431, 0], 933: [0, 0.68611, 0.10778, 0], 934: [0, 0.68611, 0.05632, 0], 936: [0, 0.68611, 0.10778, 0], 937: [0, 0.68611, 0.0992, 0], 8211: [0, 0.44444, 0.09811, 0], 8212: [0, 0.44444, 0.09811, 0], 8216: [0, 0.69444, 0.12945, 0], 8217: [0, 0.69444, 0.12945, 0], 8220: [0, 0.69444, 0.16772, 0], 8221: [0, 0.69444, 0.07939, 0] }, "Main-Italic": { 32: Me, 33: [0, 0.69444, 0.12417, 0], 34: [0, 0.69444, 0.06961, 0], 35: [0.19444, 0.69444, 0.06616, 0], 37: [0.05556, 0.75, 0.13639, 0], 38: [0, 0.69444, 0.09694, 0], 39: [0, 0.69444, 0.12417, 0], 40: [0.25, 0.75, 0.16194, 0], 41: [0.25, 0.75, 0.03694, 0], 42: [0, 0.75, 0.14917, 0], 43: [0.05667, 0.56167, 0.03694, 0], 44: [0.19444, 0.10556, 0, 0], 45: [0, 0.43056, 0.02826, 0], 46: [0, 0.10556, 0, 0], 47: [0.25, 0.75, 0.16194, 0], 48: [0, 0.64444, 0.13556, 0], 49: [0, 0.64444, 0.13556, 0], 50: [0, 0.64444, 0.13556, 0], 51: [0, 0.64444, 0.13556, 0], 52: [0.19444, 0.64444, 0.13556, 0], 53: [0, 0.64444, 0.13556, 0], 54: [0, 0.64444, 0.13556, 0], 55: [0.19444, 0.64444, 0.13556, 0], 56: [0, 0.64444, 0.13556, 0], 57: [0, 0.64444, 0.13556, 0], 58: [0, 0.43056, 0.0582, 0], 59: [0.19444, 0.43056, 0.0582, 0], 61: [-0.13313, 0.36687, 0.06616, 0], 63: [0, 0.69444, 0.1225, 0], 64: [0, 0.69444, 0.09597, 0], 65: we, 66: [0, 0.68333, 0.10257, 0], 67: [0, 0.68333, 0.14528, 0], 68: [0, 0.68333, 0.09403, 0], 69: [0, 0.68333, 0.12028, 0], 70: [0, 0.68333, 0.13305, 0], 71: [0, 0.68333, 0.08722, 0], 72: [0, 0.68333, 0.16389, 0], 73: [0, 0.68333, 0.15806, 0], 74: [0, 0.68333, 0.14028, 0], 75: [0, 0.68333, 0.14528, 0], 76: we, 77: [0, 0.68333, 0.16389, 0], 78: [0, 0.68333, 0.16389, 0], 79: [0, 0.68333, 0.09403, 0], 80: [0, 0.68333, 0.10257, 0], 81: [0.19444, 0.68333, 0.09403, 0], 82: [0, 0.68333, 0.03868, 0], 83: [0, 0.68333, 0.11972, 0], 84: [0, 0.68333, 0.13305, 0], 85: [0, 0.68333, 0.16389, 0], 86: [0, 0.68333, 0.18361, 0], 87: [0, 0.68333, 0.18361, 0], 88: [0, 0.68333, 0.15806, 0], 89: [0, 0.68333, 0.19383, 0], 90: [0, 0.68333, 0.14528, 0], 91: [0.25, 0.75, 0.1875, 0], 93: [0.25, 0.75, 0.10528, 0], 94: [0, 0.69444, 0.06646, 0], 95: [0.31, 0.12056, 0.09208, 0], 97: [0, 0.43056, 0.07671, 0], 98: [0, 0.69444, 0.06312, 0], 99: [0, 0.43056, 0.05653, 0], 100: [0, 0.69444, 0.10333, 0], 101: [0, 0.43056, 0.07514, 0], 102: [0.19444, 0.69444, 0.21194, 0], 103: [0.19444, 0.43056, 0.08847, 0], 104: [0, 0.69444, 0.07671, 0], 105: [0, 0.65536, 0.1019, 0], 106: [0.19444, 0.65536, 0.14467, 0], 107: [0, 0.69444, 0.10764, 0], 108: [0, 0.69444, 0.10333, 0], 109: [0, 0.43056, 0.07671, 0], 110: [0, 0.43056, 0.07671, 0], 111: [0, 0.43056, 0.06312, 0], 112: [0.19444, 0.43056, 0.06312, 0], 113: [0.19444, 0.43056, 0.08847, 0], 114: [0, 0.43056, 0.10764, 0], 115: [0, 0.43056, 0.08208, 0], 116: [0, 0.61508, 0.09486, 0], 117: [0, 0.43056, 0.07671, 0], 118: [0, 0.43056, 0.10764, 0], 119: [0, 0.43056, 0.10764, 0], 120: [0, 0.43056, 0.12042, 0], 121: [0.19444, 0.43056, 0.08847, 0], 122: [0, 0.43056, 0.12292, 0], 126: [0.35, 0.31786, 0.11585, 0], 160: Me, 168: [0, 0.66786, 0.10474, 0], 176: ye, 184: [0.17014, 0, 0, 0], 198: [0, 0.68333, 0.12028, 0], 216: [0.04861, 0.73194, 0.09403, 0], 223: [0.19444, 0.69444, 0.10514, 0], 230: [0, 0.43056, 0.07514, 0], 248: [0.09722, 0.52778, 0.09194, 0], 338: [0, 0.68333, 0.12028, 0], 339: [0, 0.43056, 0.07514, 0], 710: [0, 0.69444, 0.06646, 0], 711: [0, 0.62847, 0.08295, 0], 713: [0, 0.56167, 0.10333, 0], 714: [0, 0.69444, 0.09694, 0], 715: ye, 728: [0, 0.69444, 0.10806, 0], 729: [0, 0.66786, 0.11752, 0], 730: ye, 732: [0, 0.66786, 0.11585, 0], 733: [0, 0.69444, 0.1225, 0], 915: [0, 0.68333, 0.13305, 0], 916: we, 920: [0, 0.68333, 0.09403, 0], 923: we, 926: [0, 0.68333, 0.15294, 0], 928: [0, 0.68333, 0.16389, 0], 931: [0, 0.68333, 0.12028, 0], 933: [0, 0.68333, 0.11111, 0], 934: [0, 0.68333, 0.05986, 0], 936: [0, 0.68333, 0.11111, 0], 937: [0, 0.68333, 0.10257, 0], 8211: [0, 0.43056, 0.09208, 0], 8212: [0, 0.43056, 0.09208, 0], 8216: [0, 0.69444, 0.12417, 0], 8217: [0, 0.69444, 0.12417, 0], 8220: [0, 0.69444, 0.1685, 0], 8221: [0, 0.69444, 0.06961, 0], 8463: _e }, "Main-Regular": { 32: Me, 33: ye, 34: ye, 35: xe, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: ye, 39: ye, 40: ge, 41: ge, 42: Ee, 43: [0.08333, 0.58333, 0, 0], 44: [0.19444, 0.10556, 0, 0], 45: [0, 0.43056, 0, 0], 46: [0, 0.10556, 0, 0], 47: ge, 48: Le, 49: Le, 50: Le, 51: Le, 52: Le, 53: Le, 54: Le, 55: Le, 56: Le, 57: Le, 58: [0, 0.43056, 0, 0], 59: [0.19444, 0.43056, 0, 0], 60: [0.0391, 0.5391, 0, 0], 61: [-0.13313, 0.36687, 0, 0], 62: [0.0391, 0.5391, 0, 0], 63: ye, 64: ye, 65: we, 66: we, 67: we, 68: we, 69: we, 70: we, 71: we, 72: we, 73: we, 74: we, 75: we, 76: we, 77: we, 78: we, 79: we, 80: we, 81: [0.19444, 0.68333, 0, 0], 82: we, 83: we, 84: we, 85: we, 86: [0, 0.68333, 0.01389, 0], 87: [0, 0.68333, 0.01389, 0], 88: we, 89: [0, 0.68333, 0.025, 0], 90: we, 91: ge, 92: ge, 93: ge, 94: ye, 95: [0.31, 0.12056, 0.02778, 0], 97: [0, 0.43056, 0, 0], 98: ye, 99: [0, 0.43056, 0, 0], 100: ye, 101: [0, 0.43056, 0, 0], 102: [0, 0.69444, 0.07778, 0], 103: [0.19444, 0.43056, 0.01389, 0], 104: ye, 105: [0, 0.66786, 0, 0], 106: [0.19444, 0.66786, 0, 0], 107: ye, 108: ye, 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0], 112: [0.19444, 0.43056, 0, 0], 113: [0.19444, 0.43056, 0, 0], 114: [0, 0.43056, 0, 0], 115: [0, 0.43056, 0, 0], 116: [0, 0.61508, 0, 0], 117: [0, 0.43056, 0, 0], 118: [0, 0.43056, 0.01389, 0], 119: [0, 0.43056, 0.01389, 0], 120: [0, 0.43056, 0, 0], 121: [0.19444, 0.43056, 0.01389, 0], 122: [0, 0.43056, 0, 0], 123: ge, 124: ge, 125: ge, 126: [0.35, 0.31786, 0, 0], 160: Me, 163: ye, 167: xe, 168: [0, 0.66786, 0, 0], 172: [0, 0.43056, 0, 0], 176: ye, 177: [0.08333, 0.58333, 0, 0], 182: xe, 184: [0.17014, 0, 0, 0], 198: we, 215: [0.08333, 0.58333, 0, 0], 216: [0.04861, 0.73194, 0, 0], 223: ye, 230: [0, 0.43056, 0, 0], 247: [0.08333, 0.58333, 0, 0], 248: [0.09722, 0.52778, 0, 0], 305: [0, 0.43056, 0, 0], 338: we, 339: [0, 0.43056, 0, 0], 567: [0.19444, 0.43056, 0, 0], 710: ye, 711: [0, 0.62847, 0, 0], 713: [0, 0.56778, 0, 0], 714: ye, 715: ye, 728: ye, 729: [0, 0.66786, 0, 0], 730: ye, 732: [0, 0.66786, 0, 0], 733: ye, 915: we, 916: we, 920: we, 923: we, 926: we, 928: we, 931: we, 933: we, 934: we, 936: we, 937: we, 8211: [0, 0.43056, 0.02778, 0], 8212: [0, 0.43056, 0.02778, 0], 8216: ye, 8217: ye, 8220: ye, 8221: ye, 8224: xe, 8225: xe, 8230: [0, 0.12, 0, 0], 8242: Te, 8407: [0, 0.71444, 0.15382, 0], 8463: _e, 8465: ye, 8467: [0, 0.69444, 0, 0.11111], 8472: [0.19444, 0.43056, 0, 0.11111], 8476: ye, 8501: ye, 8592: [-0.13313, 0.36687, 0, 0], 8593: xe, 8594: [-0.13313, 0.36687, 0, 0], 8595: xe, 8596: [-0.13313, 0.36687, 0, 0], 8597: ge, 8598: xe, 8599: xe, 8600: xe, 8601: xe, 8614: [0.011, 0.511, 0, 0], 8617: [0.011, 0.511, 0, 0], 8618: [0.011, 0.511, 0, 0], 8636: [-0.13313, 0.36687, 0, 0], 8637: [-0.13313, 0.36687, 0, 0], 8640: [-0.13313, 0.36687, 0, 0], 8641: [-0.13313, 0.36687, 0, 0], 8652: [0.011, 0.671, 0, 0], 8656: [-0.13313, 0.36687, 0, 0], 8657: xe, 8658: [-0.13313, 0.36687, 0, 0], 8659: xe, 8660: [-0.13313, 0.36687, 0, 0], 8661: ge, 8704: ye, 8706: [0, 0.69444, 0.05556, 0.08334], 8707: ye, 8709: [0.05556, 0.75, 0, 0], 8711: we, 8712: [0.0391, 0.5391, 0, 0], 8715: [0.0391, 0.5391, 0, 0], 8722: [0.08333, 0.58333, 0, 0], 8723: [0.08333, 0.58333, 0, 0], 8725: ge, 8726: ge, 8727: [-0.03472, 0.46528, 0, 0], 8728: [-0.05555, 0.44445, 0, 0], 8729: [-0.05555, 0.44445, 0, 0], 8730: [0.2, 0.8, 0, 0], 8733: [0, 0.43056, 0, 0], 8734: [0, 0.43056, 0, 0], 8736: Ce, 8739: ge, 8741: ge, 8743: Te, 8744: Te, 8745: Te, 8746: Te, 8747: [0.19444, 0.69444, 0.11111, 0], 8764: [-0.13313, 0.36687, 0, 0], 8768: xe, 8771: [-0.03625, 0.46375, 0, 0], 8773: [-0.022, 0.589, 0, 0], 8776: [-0.01688, 0.48312, 0, 0], 8781: [-0.03625, 0.46375, 0, 0], 8784: [-0.133, 0.67, 0, 0], 8801: [-0.03625, 0.46375, 0, 0], 8804: [0.13597, 0.63597, 0, 0], 8805: [0.13597, 0.63597, 0, 0], 8810: [0.0391, 0.5391, 0, 0], 8811: [0.0391, 0.5391, 0, 0], 8826: [0.0391, 0.5391, 0, 0], 8827: [0.0391, 0.5391, 0, 0], 8834: [0.0391, 0.5391, 0, 0], 8835: [0.0391, 0.5391, 0, 0], 8838: [0.13597, 0.63597, 0, 0], 8839: [0.13597, 0.63597, 0, 0], 8846: Te, 8849: [0.13597, 0.63597, 0, 0], 8850: [0.13597, 0.63597, 0, 0], 8851: Te, 8852: Te, 8853: [0.08333, 0.58333, 0, 0], 8854: [0.08333, 0.58333, 0, 0], 8855: [0.08333, 0.58333, 0, 0], 8856: [0.08333, 0.58333, 0, 0], 8857: [0.08333, 0.58333, 0, 0], 8866: ye, 8867: ye, 8868: ye, 8869: ye, 8872: [0.249, 0.75, 0, 0], 8900: [-0.05555, 0.44445, 0, 0], 8901: [-0.05555, 0.44445, 0, 0], 8902: [-0.03472, 0.46528, 0, 0], 8904: [5e-3, 0.505, 0, 0], 8942: [0.03, 0.9, 0, 0], 8943: [-0.19, 0.31, 0, 0], 8945: [-0.1, 0.82, 0, 0], 8968: ge, 8969: ge, 8970: ge, 8971: ge, 8994: [-0.14236, 0.35764, 0, 0], 8995: [-0.14236, 0.35764, 0, 0], 9136: [0.244, 0.744, 0, 0], 9137: [0.244, 0.744, 0, 0], 9651: xe, 9657: [-0.03472, 0.46528, 0, 0], 9661: xe, 9667: [-0.03472, 0.46528, 0, 0], 9711: xe, 9824: [0.12963, 0.69444, 0, 0], 9825: [0.12963, 0.69444, 0, 0], 9826: [0.12963, 0.69444, 0, 0], 9827: [0.12963, 0.69444, 0, 0], 9837: Ee, 9838: xe, 9839: xe, 10216: ge, 10217: ge, 10222: [0.244, 0.744, 0, 0], 10223: [0.244, 0.744, 0, 0], 10229: [0.011, 0.511, 0, 0], 10230: [0.011, 0.511, 0, 0], 10231: [0.011, 0.511, 0, 0], 10232: [0.024, 0.525, 0, 0], 10233: [0.024, 0.525, 0, 0], 10234: [0.024, 0.525, 0, 0], 10236: [0.011, 0.511, 0, 0], 10815: we, 10927: [0.13597, 0.63597, 0, 0], 10928: [0.13597, 0.63597, 0, 0], 57376: xe }, "Math-BoldItalic": { 32: Me, 48: ve, 49: ve, 50: ve, 51: Ae, 52: Ae, 53: Ae, 54: Le, 55: Ae, 56: Le, 57: Ae, 65: ke, 66: [0, 0.68611, 0.04835, 0], 67: [0, 0.68611, 0.06979, 0], 68: [0, 0.68611, 0.03194, 0], 69: [0, 0.68611, 0.05451, 0], 70: [0, 0.68611, 0.15972, 0], 71: ke, 72: [0, 0.68611, 0.08229, 0], 73: [0, 0.68611, 0.07778, 0], 74: [0, 0.68611, 0.10069, 0], 75: [0, 0.68611, 0.06979, 0], 76: ke, 77: [0, 0.68611, 0.11424, 0], 78: [0, 0.68611, 0.11424, 0], 79: [0, 0.68611, 0.03194, 0], 80: [0, 0.68611, 0.15972, 0], 81: [0.19444, 0.68611, 0, 0], 82: [0, 0.68611, 421e-5, 0], 83: [0, 0.68611, 0.05382, 0], 84: [0, 0.68611, 0.15972, 0], 85: [0, 0.68611, 0.11424, 0], 86: [0, 0.68611, 0.25555, 0], 87: [0, 0.68611, 0.15972, 0], 88: [0, 0.68611, 0.07778, 0], 89: [0, 0.68611, 0.25555, 0], 90: [0, 0.68611, 0.06979, 0], 97: ve, 98: ye, 99: ve, 100: ye, 101: ve, 102: [0.19444, 0.69444, 0.11042, 0], 103: [0.19444, 0.44444, 0.03704, 0], 104: ye, 105: [0, 0.69326, 0, 0], 106: [0.19444, 0.69326, 0.0622, 0], 107: [0, 0.69444, 0.01852, 0], 108: [0, 0.69444, 88e-4, 0], 109: ve, 110: ve, 111: ve, 112: Ae, 113: [0.19444, 0.44444, 0.03704, 0], 114: [0, 0.44444, 0.03194, 0], 115: ve, 116: [0, 0.63492, 0, 0], 117: ve, 118: [0, 0.44444, 0.03704, 0], 119: [0, 0.44444, 0.02778, 0], 120: ve, 121: [0.19444, 0.44444, 0.03704, 0], 122: [0, 0.44444, 0.04213, 0], 160: Me, 915: [0, 0.68611, 0.15972, 0], 916: ke, 920: [0, 0.68611, 0.03194, 0], 923: ke, 926: [0, 0.68611, 0.07458, 0], 928: [0, 0.68611, 0.08229, 0], 931: [0, 0.68611, 0.05451, 0], 933: [0, 0.68611, 0.15972, 0], 934: ke, 936: [0, 0.68611, 0.11653, 0], 937: [0, 0.68611, 0.04835, 0], 945: ve, 946: [0.19444, 0.69444, 0.03403, 0], 947: [0.19444, 0.44444, 0.06389, 0], 948: [0, 0.69444, 0.03819, 0], 949: ve, 950: [0.19444, 0.69444, 0.06215, 0], 951: [0.19444, 0.44444, 0.03704, 0], 952: [0, 0.69444, 0.03194, 0], 953: ve, 954: ve, 955: ye, 956: Ae, 957: [0, 0.44444, 0.06898, 0], 958: [0.19444, 0.69444, 0.03021, 0], 959: ve, 960: [0, 0.44444, 0.03704, 0], 961: Ae, 962: [0.09722, 0.44444, 0.07917, 0], 963: [0, 0.44444, 0.03704, 0], 964: [0, 0.44444, 0.13472, 0], 965: [0, 0.44444, 0.03704, 0], 966: Ae, 967: Ae, 968: [0.19444, 0.69444, 0.03704, 0], 969: [0, 0.44444, 0.03704, 0], 977: ye, 981: xe, 982: [0, 0.44444, 0.03194, 0], 1009: Ae, 1013: ve, 57649: ve, 57911: Ae }, "Math-Italic": { 32: Me, 48: [0, 0.43056, 0, 0], 49: [0, 0.43056, 0, 0], 50: [0, 0.43056, 0, 0], 51: [0.19444, 0.43056, 0, 0], 52: [0.19444, 0.43056, 0, 0], 53: [0.19444, 0.43056, 0, 0], 54: Le, 55: [0.19444, 0.43056, 0, 0], 56: Le, 57: [0.19444, 0.43056, 0, 0], 65: [0, 0.68333, 0, 0.13889], 66: [0, 0.68333, 0.05017, 0.08334], 67: [0, 0.68333, 0.07153, 0.08334], 68: [0, 0.68333, 0.02778, 0.05556], 69: [0, 0.68333, 0.05764, 0.08334], 70: [0, 0.68333, 0.13889, 0.08334], 71: [0, 0.68333, 0, 0.08334], 72: [0, 0.68333, 0.08125, 0.05556], 73: [0, 0.68333, 0.07847, 0.11111], 74: [0, 0.68333, 0.09618, 0.16667], 75: [0, 0.68333, 0.07153, 0.05556], 76: [0, 0.68333, 0, 0.02778], 77: [0, 0.68333, 0.10903, 0.08334], 78: [0, 0.68333, 0.10903, 0.08334], 79: [0, 0.68333, 0.02778, 0.08334], 80: [0, 0.68333, 0.13889, 0.08334], 81: [0.19444, 0.68333, 0, 0.08334], 82: [0, 0.68333, 773e-5, 0.08334], 83: [0, 0.68333, 0.05764, 0.08334], 84: [0, 0.68333, 0.13889, 0.08334], 85: [0, 0.68333, 0.10903, 0.02778], 86: [0, 0.68333, 0.22222, 0], 87: [0, 0.68333, 0.13889, 0], 88: [0, 0.68333, 0.07847, 0.08334], 89: [0, 0.68333, 0.22222, 0], 90: [0, 0.68333, 0.07153, 0.08334], 97: [0, 0.43056, 0, 0], 98: ye, 99: [0, 0.43056, 0, 0.05556], 100: [0, 0.69444, 0, 0.16667], 101: [0, 0.43056, 0, 0.05556], 102: [0.19444, 0.69444, 0.10764, 0.16667], 103: [0.19444, 0.43056, 0.03588, 0.02778], 104: ye, 105: [0, 0.65952, 0, 0], 106: [0.19444, 0.65952, 0.05724, 0], 107: [0, 0.69444, 0.03148, 0], 108: [0, 0.69444, 0.01968, 0.08334], 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0.05556], 112: [0.19444, 0.43056, 0, 0.08334], 113: [0.19444, 0.43056, 0.03588, 0.08334], 114: [0, 0.43056, 0.02778, 0.05556], 115: [0, 0.43056, 0, 0.05556], 116: [0, 0.61508, 0, 0.08334], 117: [0, 0.43056, 0, 0.02778], 118: [0, 0.43056, 0.03588, 0.02778], 119: [0, 0.43056, 0.02691, 0.08334], 120: [0, 0.43056, 0, 0.02778], 121: [0.19444, 0.43056, 0.03588, 0.05556], 122: [0, 0.43056, 0.04398, 0.05556], 160: Me, 915: [0, 0.68333, 0.13889, 0.08334], 916: [0, 0.68333, 0, 0.16667], 920: [0, 0.68333, 0.02778, 0.08334], 923: [0, 0.68333, 0, 0.16667], 926: [0, 0.68333, 0.07569, 0.08334], 928: [0, 0.68333, 0.08125, 0.05556], 931: [0, 0.68333, 0.05764, 0.08334], 933: [0, 0.68333, 0.13889, 0.05556], 934: [0, 0.68333, 0, 0.08334], 936: [0, 0.68333, 0.11, 0.05556], 937: [0, 0.68333, 0.05017, 0.08334], 945: [0, 0.43056, 37e-4, 0.02778], 946: [0.19444, 0.69444, 0.05278, 0.08334], 947: [0.19444, 0.43056, 0.05556, 0], 948: [0, 0.69444, 0.03785, 0.05556], 949: [0, 0.43056, 0, 0.08334], 950: [0.19444, 0.69444, 0.07378, 0.08334], 951: [0.19444, 0.43056, 0.03588, 0.05556], 952: [0, 0.69444, 0.02778, 0.08334], 953: [0, 0.43056, 0, 0.05556], 954: [0, 0.43056, 0, 0], 955: ye, 956: [0.19444, 0.43056, 0, 0.02778], 957: [0, 0.43056, 0.06366, 0.02778], 958: [0.19444, 0.69444, 0.04601, 0.11111], 959: [0, 0.43056, 0, 0.05556], 960: [0, 0.43056, 0.03588, 0], 961: [0.19444, 0.43056, 0, 0.08334], 962: [0.09722, 0.43056, 0.07986, 0.08334], 963: [0, 0.43056, 0.03588, 0], 964: [0, 0.43056, 0.1132, 0.02778], 965: [0, 0.43056, 0.03588, 0.02778], 966: [0.19444, 0.43056, 0, 0.08334], 967: [0.19444, 0.43056, 0, 0.05556], 968: [0.19444, 0.69444, 0.03588, 0.11111], 969: [0, 0.43056, 0.03588, 0], 977: [0, 0.69444, 0, 0.08334], 981: [0.19444, 0.69444, 0, 0.08334], 982: [0, 0.43056, 0.02778, 0], 1009: [0.19444, 0.43056, 0, 0.08334], 1013: [0, 0.43056, 0, 0.05556], 57649: [0, 0.43056, 0, 0.02778], 57911: [0.19444, 0.43056, 0, 0.08334] }, "SansSerif-Bold": { 32: Me, 33: ye, 34: ye, 35: xe, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: ye, 39: ye, 40: ge, 41: ge, 42: Ee, 43: [0.11667, 0.61667, 0, 0], 44: [0.10556, 0.13056, 0, 0], 45: [0, 0.45833, 0, 0], 46: [0, 0.13056, 0, 0], 47: ge, 48: ye, 49: ye, 50: ye, 51: ye, 52: ye, 53: ye, 54: ye, 55: ye, 56: ye, 57: ye, 58: [0, 0.45833, 0, 0], 59: [0.10556, 0.45833, 0, 0], 61: [-0.09375, 0.40625, 0, 0], 63: ye, 64: ye, 65: ye, 66: ye, 67: ye, 68: ye, 69: ye, 70: ye, 71: ye, 72: ye, 73: ye, 74: ye, 75: ye, 76: ye, 77: ye, 78: ye, 79: ye, 80: ye, 81: [0.10556, 0.69444, 0, 0], 82: ye, 83: ye, 84: ye, 85: ye, 86: [0, 0.69444, 0.01528, 0], 87: [0, 0.69444, 0.01528, 0], 88: ye, 89: [0, 0.69444, 0.0275, 0], 90: ye, 91: ge, 93: ge, 94: ye, 95: [0.35, 0.10833, 0.03056, 0], 97: [0, 0.45833, 0, 0], 98: ye, 99: [0, 0.45833, 0, 0], 100: ye, 101: [0, 0.45833, 0, 0], 102: [0, 0.69444, 0.07639, 0], 103: [0.19444, 0.45833, 0.01528, 0], 104: ye, 105: ye, 106: xe, 107: ye, 108: ye, 109: [0, 0.45833, 0, 0], 110: [0, 0.45833, 0, 0], 111: [0, 0.45833, 0, 0], 112: [0.19444, 0.45833, 0, 0], 113: [0.19444, 0.45833, 0, 0], 114: [0, 0.45833, 0.01528, 0], 115: [0, 0.45833, 0, 0], 116: [0, 0.58929, 0, 0], 117: [0, 0.45833, 0, 0], 118: [0, 0.45833, 0.01528, 0], 119: [0, 0.45833, 0.01528, 0], 120: [0, 0.45833, 0, 0], 121: [0.19444, 0.45833, 0.01528, 0], 122: [0, 0.45833, 0, 0], 126: [0.35, 0.34444, 0, 0], 160: Me, 168: ye, 176: ye, 180: ye, 184: [0.17014, 0, 0, 0], 305: [0, 0.45833, 0, 0], 567: [0.19444, 0.45833, 0, 0], 710: ye, 711: [0, 0.63542, 0, 0], 713: [0, 0.63778, 0, 0], 728: ye, 729: ye, 730: ye, 732: ye, 733: ye, 915: ye, 916: ye, 920: ye, 923: ye, 926: ye, 928: ye, 931: ye, 933: ye, 934: ye, 936: ye, 937: ye, 8211: [0, 0.45833, 0.03056, 0], 8212: [0, 0.45833, 0.03056, 0], 8216: ye, 8217: ye, 8220: ye, 8221: ye }, "SansSerif-Italic": { 32: Me, 33: [0, 0.69444, 0.05733, 0], 34: [0, 0.69444, 316e-5, 0], 35: [0.19444, 0.69444, 0.05087, 0], 36: [0.05556, 0.75, 0.11156, 0], 37: [0.05556, 0.75, 0.03126, 0], 38: [0, 0.69444, 0.03058, 0], 39: [0, 0.69444, 0.07816, 0], 40: [0.25, 0.75, 0.13164, 0], 41: [0.25, 0.75, 0.02536, 0], 42: [0, 0.75, 0.11775, 0], 43: [0.08333, 0.58333, 0.02536, 0], 44: [0.125, 0.08333, 0, 0], 45: [0, 0.44444, 0.01946, 0], 46: [0, 0.08333, 0, 0], 47: [0.25, 0.75, 0.13164, 0], 48: [0, 0.65556, 0.11156, 0], 49: [0, 0.65556, 0.11156, 0], 50: [0, 0.65556, 0.11156, 0], 51: [0, 0.65556, 0.11156, 0], 52: [0, 0.65556, 0.11156, 0], 53: [0, 0.65556, 0.11156, 0], 54: [0, 0.65556, 0.11156, 0], 55: [0, 0.65556, 0.11156, 0], 56: [0, 0.65556, 0.11156, 0], 57: [0, 0.65556, 0.11156, 0], 58: [0, 0.44444, 0.02502, 0], 59: [0.125, 0.44444, 0.02502, 0], 61: [-0.13, 0.37, 0.05087, 0], 63: [0, 0.69444, 0.11809, 0], 64: [0, 0.69444, 0.07555, 0], 65: ye, 66: [0, 0.69444, 0.08293, 0], 67: [0, 0.69444, 0.11983, 0], 68: [0, 0.69444, 0.07555, 0], 69: [0, 0.69444, 0.11983, 0], 70: [0, 0.69444, 0.13372, 0], 71: [0, 0.69444, 0.11983, 0], 72: [0, 0.69444, 0.08094, 0], 73: [0, 0.69444, 0.13372, 0], 74: [0, 0.69444, 0.08094, 0], 75: [0, 0.69444, 0.11983, 0], 76: ye, 77: [0, 0.69444, 0.08094, 0], 78: [0, 0.69444, 0.08094, 0], 79: [0, 0.69444, 0.07555, 0], 80: [0, 0.69444, 0.08293, 0], 81: [0.125, 0.69444, 0.07555, 0], 82: [0, 0.69444, 0.08293, 0], 83: [0, 0.69444, 0.09205, 0], 84: [0, 0.69444, 0.13372, 0], 85: [0, 0.69444, 0.08094, 0], 86: [0, 0.69444, 0.1615, 0], 87: [0, 0.69444, 0.1615, 0], 88: [0, 0.69444, 0.13372, 0], 89: [0, 0.69444, 0.17261, 0], 90: [0, 0.69444, 0.11983, 0], 91: [0.25, 0.75, 0.15942, 0], 93: [0.25, 0.75, 0.08719, 0], 94: [0, 0.69444, 0.0799, 0], 95: [0.35, 0.09444, 0.08616, 0], 97: [0, 0.44444, 981e-5, 0], 98: [0, 0.69444, 0.03057, 0], 99: [0, 0.44444, 0.08336, 0], 100: [0, 0.69444, 0.09483, 0], 101: [0, 0.44444, 0.06778, 0], 102: [0, 0.69444, 0.21705, 0], 103: [0.19444, 0.44444, 0.10836, 0], 104: [0, 0.69444, 0.01778, 0], 105: [0, 0.67937, 0.09718, 0], 106: [0.19444, 0.67937, 0.09162, 0], 107: [0, 0.69444, 0.08336, 0], 108: [0, 0.69444, 0.09483, 0], 109: [0, 0.44444, 0.01778, 0], 110: [0, 0.44444, 0.01778, 0], 111: [0, 0.44444, 0.06613, 0], 112: [0.19444, 0.44444, 0.0389, 0], 113: [0.19444, 0.44444, 0.04169, 0], 114: [0, 0.44444, 0.10836, 0], 115: [0, 0.44444, 0.0778, 0], 116: [0, 0.57143, 0.07225, 0], 117: [0, 0.44444, 0.04169, 0], 118: [0, 0.44444, 0.10836, 0], 119: [0, 0.44444, 0.10836, 0], 120: [0, 0.44444, 0.09169, 0], 121: [0.19444, 0.44444, 0.10836, 0], 122: [0, 0.44444, 0.08752, 0], 126: [0.35, 0.32659, 0.08826, 0], 160: Me, 168: [0, 0.67937, 0.06385, 0], 176: ye, 184: [0.17014, 0, 0, 0], 305: [0, 0.44444, 0.04169, 0], 567: [0.19444, 0.44444, 0.04169, 0], 710: [0, 0.69444, 0.0799, 0], 711: [0, 0.63194, 0.08432, 0], 713: [0, 0.60889, 0.08776, 0], 714: [0, 0.69444, 0.09205, 0], 715: ye, 728: [0, 0.69444, 0.09483, 0], 729: [0, 0.67937, 0.07774, 0], 730: ye, 732: [0, 0.67659, 0.08826, 0], 733: [0, 0.69444, 0.09205, 0], 915: [0, 0.69444, 0.13372, 0], 916: ye, 920: [0, 0.69444, 0.07555, 0], 923: ye, 926: [0, 0.69444, 0.12816, 0], 928: [0, 0.69444, 0.08094, 0], 931: [0, 0.69444, 0.11983, 0], 933: [0, 0.69444, 0.09031, 0], 934: [0, 0.69444, 0.04603, 0], 936: [0, 0.69444, 0.09031, 0], 937: [0, 0.69444, 0.08293, 0], 8211: [0, 0.44444, 0.08616, 0], 8212: [0, 0.44444, 0.08616, 0], 8216: [0, 0.69444, 0.07816, 0], 8217: [0, 0.69444, 0.07816, 0], 8220: [0, 0.69444, 0.14205, 0], 8221: [0, 0.69444, 316e-5, 0] }, "SansSerif-Regular": { 32: Me, 33: ye, 34: ye, 35: xe, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: ye, 39: ye, 40: ge, 41: ge, 42: Ee, 43: [0.08333, 0.58333, 0, 0], 44: [0.125, 0.08333, 0, 0], 45: ve, 46: [0, 0.08333, 0, 0], 47: ge, 48: [0, 0.65556, 0, 0], 49: [0, 0.65556, 0, 0], 50: [0, 0.65556, 0, 0], 51: [0, 0.65556, 0, 0], 52: [0, 0.65556, 0, 0], 53: [0, 0.65556, 0, 0], 54: [0, 0.65556, 0, 0], 55: [0, 0.65556, 0, 0], 56: [0, 0.65556, 0, 0], 57: [0, 0.65556, 0, 0], 58: ve, 59: [0.125, 0.44444, 0, 0], 61: [-0.13, 0.37, 0, 0], 63: ye, 64: ye, 65: ye, 66: ye, 67: ye, 68: ye, 69: ye, 70: ye, 71: ye, 72: ye, 73: ye, 74: ye, 75: ye, 76: ye, 77: ye, 78: ye, 79: ye, 80: ye, 81: [0.125, 0.69444, 0, 0], 82: ye, 83: ye, 84: ye, 85: ye, 86: [0, 0.69444, 0.01389, 0], 87: [0, 0.69444, 0.01389, 0], 88: ye, 89: [0, 0.69444, 0.025, 0], 90: ye, 91: ge, 93: ge, 94: ye, 95: [0.35, 0.09444, 0.02778, 0], 97: ve, 98: ye, 99: ve, 100: ye, 101: ve, 102: [0, 0.69444, 0.06944, 0], 103: [0.19444, 0.44444, 0.01389, 0], 104: ye, 105: [0, 0.67937, 0, 0], 106: [0.19444, 0.67937, 0, 0], 107: ye, 108: ye, 109: ve, 110: ve, 111: ve, 112: Ae, 113: Ae, 114: [0, 0.44444, 0.01389, 0], 115: ve, 116: [0, 0.57143, 0, 0], 117: ve, 118: [0, 0.44444, 0.01389, 0], 119: [0, 0.44444, 0.01389, 0], 120: ve, 121: [0.19444, 0.44444, 0.01389, 0], 122: ve, 126: [0.35, 0.32659, 0, 0], 160: Me, 168: [0, 0.67937, 0, 0], 176: ye, 184: [0.17014, 0, 0, 0], 305: ve, 567: Ae, 710: ye, 711: [0, 0.63194, 0, 0], 713: [0, 0.60889, 0, 0], 714: ye, 715: ye, 728: ye, 729: [0, 0.67937, 0, 0], 730: ye, 732: [0, 0.67659, 0, 0], 733: ye, 915: ye, 916: ye, 920: ye, 923: ye, 926: ye, 928: ye, 931: ye, 933: ye, 934: ye, 936: ye, 937: ye, 8211: [0, 0.44444, 0.02778, 0], 8212: [0, 0.44444, 0.02778, 0], 8216: ye, 8217: ye, 8220: ye, 8221: ye }, "Script-Regular": { 32: Me, 65: [0, 0.7, 0.22925, 0], 66: [0, 0.7, 0.04087, 0], 67: [0, 0.7, 0.1689, 0], 68: [0, 0.7, 0.09371, 0], 69: [0, 0.7, 0.18583, 0], 70: [0, 0.7, 0.13634, 0], 71: [0, 0.7, 0.17322, 0], 72: [0, 0.7, 0.29694, 0], 73: [0, 0.7, 0.19189, 0], 74: [0.27778, 0.7, 0.19189, 0], 75: [0, 0.7, 0.31259, 0], 76: [0, 0.7, 0.19189, 0], 77: [0, 0.7, 0.15981, 0], 78: [0, 0.7, 0.3525, 0], 79: [0, 0.7, 0.08078, 0], 80: [0, 0.7, 0.08078, 0], 81: [0, 0.7, 0.03305, 0], 82: [0, 0.7, 0.06259, 0], 83: [0, 0.7, 0.19189, 0], 84: [0, 0.7, 0.29087, 0], 85: [0, 0.7, 0.25815, 0], 86: [0, 0.7, 0.27523, 0], 87: [0, 0.7, 0.27523, 0], 88: [0, 0.7, 0.26006, 0], 89: [0, 0.7, 0.2939, 0], 90: [0, 0.7, 0.24037, 0], 160: Me }, "Size1-Regular": { 32: Me, 40: ze, 41: ze, 47: ze, 91: ze, 92: ze, 93: ze, 123: ze, 125: ze, 160: Me, 710: [0, 0.72222, 0, 0], 732: [0, 0.72222, 0, 0], 770: [0, 0.72222, 0, 0], 771: [0, 0.72222, 0, 0], 8214: [-99e-5, 0.601, 0, 0], 8593: [1e-5, 0.6, 0, 0], 8595: [1e-5, 0.6, 0, 0], 8657: [1e-5, 0.6, 0, 0], 8659: [1e-5, 0.6, 0, 0], 8719: qe, 8720: qe, 8721: qe, 8730: ze, 8739: [-599e-5, 0.606, 0, 0], 8741: [-599e-5, 0.606, 0, 0], 8747: [0.30612, 0.805, 0.19445, 0], 8748: [0.306, 0.805, 0.19445, 0], 8749: [0.306, 0.805, 0.19445, 0], 8750: [0.30612, 0.805, 0.19445, 0], 8896: qe, 8897: qe, 8898: qe, 8899: qe, 8968: ze, 8969: ze, 8970: ze, 8971: ze, 9168: [-99e-5, 0.601, 0, 0], 10216: ze, 10217: ze, 10752: qe, 10753: qe, 10754: qe, 10756: qe, 10758: qe }, "Size2-Regular": { 32: Me, 40: De, 41: De, 47: De, 91: De, 92: De, 93: De, 123: De, 125: De, 160: Me, 710: Ee, 732: Ee, 770: Ee, 771: Ee, 8719: Oe, 8720: Oe, 8721: Oe, 8730: De, 8747: [0.86225, 1.36, 0.44445, 0], 8748: [0.862, 1.36, 0.44445, 0], 8749: [0.862, 1.36, 0.44445, 0], 8750: [0.86225, 1.36, 0.44445, 0], 8896: Oe, 8897: Oe, 8898: Oe, 8899: Oe, 8968: De, 8969: De, 8970: De, 8971: De, 10216: De, 10217: De, 10752: Oe, 10753: Oe, 10754: Oe, 10756: Oe, 10758: Oe }, "Size3-Regular": { 32: Me, 40: Ke, 41: Ke, 47: Ke, 91: Ke, 92: Ke, 93: Ke, 123: Ke, 125: Ke, 160: Me, 710: Ee, 732: Ee, 770: Ee, 771: Ee, 8730: Ke, 8968: Ke, 8969: Ke, 8970: Ke, 8971: Ke, 10216: Ke, 10217: Ke }, "Size4-Regular": { 32: Me, 40: Be, 41: Be, 47: Be, 91: Be, 92: Be, 93: Be, 123: Be, 125: Be, 160: Me, 710: [0, 0.825, 0, 0], 732: [0, 0.825, 0, 0], 770: [0, 0.825, 0, 0], 771: [0, 0.825, 0, 0], 8730: Be, 8968: Be, 8969: Be, 8970: Be, 8971: Be, 9115: [0.64502, 1.155, 0, 0], 9116: [1e-5, 0.6, 0, 0], 9117: [0.64502, 1.155, 0, 0], 9118: [0.64502, 1.155, 0, 0], 9119: [1e-5, 0.6, 0, 0], 9120: [0.64502, 1.155, 0, 0], 9121: [0.64502, 1.155, 0, 0], 9122: [-99e-5, 0.601, 0, 0], 9123: [0.64502, 1.155, 0, 0], 9124: [0.64502, 1.155, 0, 0], 9125: [-99e-5, 0.601, 0, 0], 9126: [0.64502, 1.155, 0, 0], 9127: [1e-5, 0.9, 0, 0], 9128: De, 9129: [0.90001, 0, 0, 0], 9130: [0, 0.3, 0, 0], 9131: [1e-5, 0.9, 0, 0], 9132: De, 9133: [0.90001, 0, 0, 0], 9143: [0.88502, 0.915, 0, 0], 10216: Be, 10217: Be, 57344: [-499e-5, 0.605, 0, 0], 57345: [-499e-5, 0.605, 0, 0], 57680: [0, 0.12, 0, 0], 57681: [0, 0.12, 0, 0], 57682: [0, 0.12, 0, 0], 57683: [0, 0.12, 0, 0] }, "Typewriter-Regular": { 32: Me, 33: be, 34: be, 35: be, 36: [0.08333, 0.69444, 0, 0], 37: [0.08333, 0.69444, 0, 0], 38: be, 39: be, 40: [0.08333, 0.69444, 0, 0], 41: [0.08333, 0.69444, 0, 0], 42: [0, 0.52083, 0, 0], 43: [-0.08056, 0.53055, 0, 0], 44: [0.13889, 0.125, 0, 0], 45: [-0.08056, 0.53055, 0, 0], 46: [0, 0.125, 0, 0], 47: [0.08333, 0.69444, 0, 0], 48: be, 49: be, 50: be, 51: be, 52: be, 53: be, 54: be, 55: be, 56: be, 57: be, 58: [0, 0.43056, 0, 0], 59: [0.13889, 0.43056, 0, 0], 60: [-0.05556, 0.55556, 0, 0], 61: [-0.19549, 0.41562, 0, 0], 62: [-0.05556, 0.55556, 0, 0], 63: be, 64: be, 65: be, 66: be, 67: be, 68: be, 69: be, 70: be, 71: be, 72: be, 73: be, 74: be, 75: be, 76: be, 77: be, 78: be, 79: be, 80: be, 81: [0.13889, 0.61111, 0, 0], 82: be, 83: be, 84: be, 85: be, 86: be, 87: be, 88: be, 89: be, 90: be, 91: [0.08333, 0.69444, 0, 0], 92: [0.08333, 0.69444, 0, 0], 93: [0.08333, 0.69444, 0, 0], 94: be, 95: [0.09514, 0, 0, 0], 96: be, 97: [0, 0.43056, 0, 0], 98: be, 99: [0, 0.43056, 0, 0], 100: be, 101: [0, 0.43056, 0, 0], 102: be, 103: [0.22222, 0.43056, 0, 0], 104: be, 105: be, 106: [0.22222, 0.61111, 0, 0], 107: be, 108: be, 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0], 112: [0.22222, 0.43056, 0, 0], 113: [0.22222, 0.43056, 0, 0], 114: [0, 0.43056, 0, 0], 115: [0, 0.43056, 0, 0], 116: [0, 0.55358, 0, 0], 117: [0, 0.43056, 0, 0], 118: [0, 0.43056, 0, 0], 119: [0, 0.43056, 0, 0], 120: [0, 0.43056, 0, 0], 121: [0.22222, 0.43056, 0, 0], 122: [0, 0.43056, 0, 0], 123: [0.08333, 0.69444, 0, 0], 124: [0.08333, 0.69444, 0, 0], 125: [0.08333, 0.69444, 0, 0], 126: be, 127: be, 160: Me, 176: be, 184: [0.19445, 0, 0, 0], 305: [0, 0.43056, 0, 0], 567: [0.22222, 0.43056, 0, 0], 711: [0, 0.56597, 0, 0], 713: [0, 0.56555, 0, 0], 714: be, 715: be, 728: be, 730: be, 770: be, 771: be, 776: be, 915: be, 916: be, 920: be, 923: be, 926: be, 928: be, 931: be, 933: be, 934: be, 936: be, 937: be, 8216: be, 8217: be, 8242: be, 9251: [0.11111, 0.21944, 0, 0] } }, Re = /[\u3040-\u309F]|[\u30A0-\u30FF]|[\u4E00-\u9FAF]|[\uAC00-\uD7AF]/, Ie = 0.25, je = 0.431, Ve = { slant: [0.25, 0.25, 0.25], space: [0, 0, 0], stretch: [0, 0, 0], shrink: [0, 0, 0], xHeight: [je, je, je], quad: [1, 1.171, 1.472], extraSpace: [0, 0, 0], num1: [0.677, 0.732, 0.925], num2: [0.394, 0.384, 0.387], num3: [0.444, 0.471, 0.504], denom1: [0.686, 0.752, 1.025], denom2: [0.345, 0.344, 0.532], sup1: [0.413, 0.503, 0.504], sup2: [0.363, 0.431, 0.404], sup3: [0.289, 0.286, 0.294], sub1: [0.15, 0.143, 0.2], sub2: [0.247, 0.286, 0.4], supDrop: [0.386, 0.353, 0.494], subDrop: [0.05, 0.071, 0.1], delim1: [2.39, 1.7, 1.98], delim2: [1.01, 1.157, 1.42], axisHeight: [Ie, Ie, Ie], defaultRuleThickness: [0.04, 0.049, 0.049], bigOpSpacing1: [0.111, 0.111, 0.111], bigOpSpacing2: [0.166, 0.166, 0.166], bigOpSpacing3: [0.2, 0.2, 0.2], bigOpSpacing4: [0.6, 0.611, 0.611], bigOpSpacing5: [0.1, 0.143, 0.143], sqrtRuleThickness: [0.04, 0.04, 0.04] }, He = [0, 0.5, 0.7, 0.8, 0.9, 1, 1.2, 1.44, 1.728, 2.074, 2.488], We = { " ": " ", "​": " ", Å: "A", Ç: "C", Ð: "D", Þ: "o", å: "a", ç: "c", ð: "d", þ: "o", А: "A", Б: "B", В: "B", Г: "F", Д: "A", Е: "E", Ж: "K", З: "3", И: "N", Й: "N", К: "K", Л: "N", М: "M", Н: "H", О: "O", П: "N", Р: "P", С: "C", Т: "T", У: "y", Ф: "O", Х: "X", Ц: "U", Ч: "h", Ш: "W", Щ: "W", Ъ: "B", Ы: "X", Ь: "B", Э: "3", Ю: "X", Я: "R", а: "a", б: "b", в: "a", г: "r", д: "y", е: "e", ж: "m", з: "e", и: "n", й: "n", к: "n", л: "n", м: "m", н: "n", о: "o", п: "n", р: "p", с: "c", т: "o", у: "y", ф: "b", х: "x", ц: "n", ч: "n", ш: "w", щ: "w", ъ: "a", ы: "m", ь: "a", э: "e", ю: "m", я: "r" };
        function Xe(e3, t3) {
          void 0 === e3 && (e3 = 77);
          let a2 = Fe[t3][e3];
          if (a2) return { defaultMetrics: false, depth: a2[0], height: a2[1], italic: a2[2], skew: a2[3] };
          if (11034 === e3) return { defaultMetrics: true, depth: 0.2, height: 0.8, italic: 0, skew: 0 };
          let r2 = String.fromCodePoint(e3);
          if (r2 in We) e3 = We[r2].codePointAt(0);
          else if (Re.test(r2)) return e3 = 77, { defaultMetrics: true, depth: 0.2, height: 0.9, italic: 0, skew: 0 };
          return { defaultMetrics: true, depth: 0.2, height: 0.7, italic: 0, skew: 0 };
        }
        var Ue = class {
          constructor(e3, t3, a2) {
            this.id = e3, this.sizeDelta = t3, this.cramped = a2;
            let r2 = { "-4": 2, "-3": 1, 0: 0 }[t3];
            this.metrics = Object.keys(Ve).reduce((e4, t4) => S(_({}, e4), { [t4]: Ve[t4][r2] }), {});
          }
          getFontSize(e3) {
            return Math.max(1, e3 + this.sizeDelta);
          }
          get sup() {
            return Je[[0, 1, 0, 1, 2, 3, 2, 3][this.id]];
          }
          get sub() {
            return Je[[0, 0, 0, 0, 2, 2, 2, 2][this.id]];
          }
          get fracNum() {
            return Je[[0, 1, 0, 1, 2, 3, 4, 5][this.id]];
          }
          get fracDen() {
            return Je[[0, 0, 0, 0, 2, 2, 4, 4][this.id]];
          }
          get cramp() {
            return Je[[0, 0, 2, 2, 4, 4, 6, 6][this.id]];
          }
          get isTight() {
            return this.sizeDelta < 0;
          }
        }, Je = { 7: new Ue(7, 0, false), 6: new Ue(6, 0, true), 5: new Ue(5, 0, false), 4: new Ue(4, 0, true), 3: new Ue(3, -3, false), 2: new Ue(2, -3, true), 1: new Ue(1, -4, false), 0: new Ue(0, -4, true) };
        function Ge(e3, t3) {
          return null === e3 ? 0 : function(e4, t4) {
            var a2;
            if (!e4) return 0;
            let r2 = { pt: 1, mm: 7227 / 2540, cm: 7227 / 254, ex: 35271 / 8192, px: 3 / 4, em: 10, bp: 1.00375, dd: 1238 / 1157, pc: 12, in: 72.27, mu: 10 / 18 }[null != (a2 = e4.unit) ? a2 : "pt"];
            if (Number.isFinite(t4)) {
              let a3 = 10 ** t4;
              return Math.round(e4.dimension / 10 * r2 * a3) / a3;
            }
            return e4.dimension * r2;
          }(e3, t3) / 10;
        }
        function Ze(e3) {
          var t3;
          return `${e3.dimension}${null != (t3 = e3.unit) ? t3 : "pt"}`;
        }
        Je.displaystyle = Je[7], Je.textstyle = Je[5], Je.scriptstyle = Je[3], Je.scriptscriptstyle = Je[1];
        var Ye = class {
          constructor(e3, t3, a2) {
            var r2, i2, o2, n2, s2, l2;
            e3 instanceof Ye && (this.parent = e3), e3 instanceof Ye || (this.registers = null != (r2 = e3.registers) ? r2 : {}), this.isPhantom = null != (n2 = null != (o2 = null == t3 ? void 0 : t3.isPhantom) ? o2 : null == (i2 = this.parent) ? void 0 : i2.isPhantom) && n2;
            let d2, c2 = _({}, e3);
            if (t3 && (t3.letterShapeStyle && "auto" !== t3.letterShapeStyle && (c2.letterShapeStyle = t3.letterShapeStyle), t3.color && "none" !== t3.color && (c2.color = t3.color), t3.backgroundColor && "none" !== t3.backgroundColor && (c2.backgroundColor = t3.backgroundColor), t3.fontSize && "auto" !== t3.fontSize && t3.fontSize !== (null == (s2 = this.parent) ? void 0 : s2._size) && (this._size = t3.fontSize)), this.letterShapeStyle = null != (l2 = c2.letterShapeStyle) ? l2 : "tex", this.color = c2.color, this.backgroundColor = c2.backgroundColor, "string" == typeof a2) {
              if (e3 instanceof Ye) switch (a2) {
                case "cramp":
                  d2 = e3.mathstyle.cramp;
                  break;
                case "superscript":
                  d2 = e3.mathstyle.sup;
                  break;
                case "subscript":
                  d2 = e3.mathstyle.sub;
                  break;
                case "numerator":
                  d2 = e3.mathstyle.fracNum;
                  break;
                case "denominator":
                  d2 = e3.mathstyle.fracDen;
              }
              switch (a2) {
                case "textstyle":
                  d2 = Je.textstyle;
                  break;
                case "displaystyle":
                  d2 = Je.displaystyle;
                  break;
                case "scriptstyle":
                  d2 = Je.scriptstyle;
                  break;
                case "scriptscriptstyle":
                  d2 = Je.scriptscriptstyle;
              }
            }
            this._mathstyle = d2, this.atomIdsSettings = e3.atomIdsSettings, this.renderPlaceholder = c2.renderPlaceholder;
          }
          get mathstyle() {
            let e3 = this._mathstyle, t3 = this.parent;
            for (; !e3; ) e3 = t3._mathstyle, t3 = t3.parent;
            return e3;
          }
          getRegister(e3) {
            var t3;
            return null != (t3 = this.registers) && t3[e3] ? this.registers[e3] : this.parent ? this.parent.getRegister(e3) : void 0;
          }
          getRegisterAsGlue(e3) {
            var t3;
            if (null != (t3 = this.registers) && t3[e3]) {
              let t4 = this.registers[e3];
              return "object" == typeof t4 && "glue" in t4 ? t4 : "object" == typeof t4 && "dimension" in t4 ? { glue: { dimension: t4.dimension } } : "number" == typeof t4 ? { glue: { dimension: t4 } } : void 0;
            }
            if (this.parent) return this.parent.getRegisterAsGlue(e3);
          }
          getRegisterAsEm(e3) {
            return Ge(this.getRegisterAsDimension(e3));
          }
          getRegisterAsDimension(e3) {
            var t3;
            if (null != (t3 = this.registers) && t3[e3]) {
              let t4 = this.registers[e3];
              return "object" == typeof t4 && "glue" in t4 ? t4.glue : "object" == typeof t4 && "dimension" in t4 ? t4 : "number" == typeof t4 ? { dimension: t4 } : void 0;
            }
            if (this.parent) return this.parent.getRegisterAsDimension(e3);
          }
          setRegister(e3, t3) {
            void 0 !== t3 ? this.registers[e3] = t3 : delete this.registers[e3];
          }
          setGlobalRegister(e3, t3) {
            let a2 = this;
            for (; a2.parent; ) a2.setRegister(e3, void 0), a2 = a2.parent;
            a2.setRegister(e3, t3);
          }
          get size() {
            let e3 = this._size, t3 = this.parent;
            for (; !e3; ) e3 = t3._size, t3 = t3.parent;
            return e3;
          }
          makeID() {
            if (!this.atomIdsSettings) return;
            if (this.atomIdsSettings.overrideID) return this.atomIdsSettings.overrideID;
            if ("number" != typeof this.atomIdsSettings.seed) return Date.now().toString(36).slice(-2) + Math.floor(1e5 * Math.random()).toString(36);
            let e3 = this.atomIdsSettings.seed.toString(36);
            return this.atomIdsSettings.seed += 1, e3;
          }
          scale(e3) {
            return e3 * this.effectiveFontSize;
          }
          get scalingFactor() {
            return this.parent ? this.effectiveFontSize / this.parent.effectiveFontSize : 1;
          }
          get isDisplayStyle() {
            return 7 === this.mathstyle.id || 6 === this.mathstyle.id;
          }
          get isCramped() {
            return this.mathstyle.cramped;
          }
          get isTight() {
            return this.mathstyle.isTight;
          }
          get effectiveFontSize() {
            return He[Math.max(1, this.size + this.mathstyle.sizeDelta)];
          }
          get computedColor() {
            let e3 = this.color, t3 = this.parent;
            return !e3 && t3 && (e3 = t3.color, t3 = t3.parent), null != e3 ? e3 : "";
          }
          get computedBackgroundColor() {
            let e3 = this.backgroundColor, t3 = this.parent;
            return !e3 && t3 && (e3 = t3.backgroundColor, t3 = t3.parent), null != e3 ? e3 : "";
          }
          get metrics() {
            return this.mathstyle.metrics;
          }
        }, Qe = { overrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"], overleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"], underrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"], underleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"], xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"], xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"], Overrightarrow: [["doublerightarrow"], 0.888, 560, "xMaxYMin"], xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"], xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"], overleftharpoon: [["leftharpoon"], 0.888, 522, "xMinYMin"], xleftharpoonup: [["leftharpoon"], 0.888, 522, "xMinYMin"], xleftharpoondown: [["leftharpoondown"], 0.888, 522, "xMinYMin"], overrightharpoon: [["rightharpoon"], 0.888, 522, "xMaxYMin"], xrightharpoonup: [["rightharpoon"], 0.888, 522, "xMaxYMin"], xrightharpoondown: [["rightharpoondown"], 0.888, 522, "xMaxYMin"], xlongequal: [["longequal"], 0.888, 334, "xMinYMin"], xtwoheadleftarrow: [["twoheadleftarrow"], 0.888, 334, "xMinYMin"], xtwoheadrightarrow: [["twoheadrightarrow"], 0.888, 334, "xMaxYMin"], overleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522], overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548], underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548], underleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522], xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522], xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560], xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716], xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716], xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522], xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522], overlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522], underlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522], overgroup: [["leftgroup", "rightgroup"], 0.888, 342], undergroup: [["leftgroupunder", "rightgroupunder"], 0.888, 342], xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522], xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528], xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 901], xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716], xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716] }, et = { widehat1: [1062, 239, 0.24], widehat2: [2364, 300, 0.3], widehat3: [2364, 360, 0.36], widehat4: [2364, 420, 0.42], widecheck1: [1062, 239, 0.24], widecheck2: [2364, 300, 0.3], widecheck3: [2364, 360, 0.36], widecheck4: [2364, 420, 0.42], widetilde1: [600, 260, 0.26], widetilde2: [1033, 286, 0.286], widetilde3: [2339, 306, 0.306], widetilde4: [2340, 312, 0.34], overarc: [1061, 159, 0.3], underarc: [1061, 159, 0.3] }, tt = { doubleleftarrow: "M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z", doublerightarrow: "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z", leftarrow: "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z", leftbrace: "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z", leftbraceunder: "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z", overarc: "M529 0c179 0 524 115 524 115 5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2s-338-93-512-92c-174 0-513 92-513 92h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13 0 0 342-115 520-115z", underarc: "m 529 160\n  c -179 0 -524 -115 -524 -115\n  c -5 -1 -9 -5 -9 -10\n  c 0 -1 1 -2 1 -3\n  l 4 -22\n  c 1 -5 5 -9 11 -9\n  h 2\n  s 338 93 512 92\n  c 174 0 513 -92 513 -92\n  h 2\n  c 5 0 9 4 11 9\n  l 5 22\n  c 1 6 -2 12 -8 13\n  c 0 0 -342 115 -520 115\n  z\n  ", leftgroup: "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z", leftgroupunder: "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z", leftharpoon: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z", leftharpoonplus: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z", leftharpoondown: "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z", leftharpoondownplus: "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z", lefthook: "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z", leftlinesegment: "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z", leftmapsto: "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z", leftToFrom: "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z", longequal: "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z", midbrace: "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z", midbraceunder: "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z", oiintSize1: "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z", oiintSize2: "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z", oiiintSize1: "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z", oiiintSize2: "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z", rightarrow: "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z", rightbrace: "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z", rightbraceunder: "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z", rightgroup: "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z", rightgroupunder: "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z", rightharpoon: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z", rightharpoonplus: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z", rightharpoondown: "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z", rightharpoondownplus: "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z", righthook: "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z", rightlinesegment: "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z", rightToFrom: "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z", twoheadleftarrow: "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z", twoheadrightarrow: "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z", widetilde1: "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z", widetilde2: "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z", widetilde3: "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z", widetilde4: "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z", vec: "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z", widehat1: "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z", widehat2: "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", widehat3: "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", widehat4: "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", widecheck1: "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z", widecheck2: "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", widecheck3: "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", widecheck4: "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", baraboveleftarrow: "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z", rightarrowabovebar: "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z", baraboveshortleftharpoon: "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z", rightharpoonaboveshortbar: "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z", shortbaraboveleftharpoon: "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z", shortrightharpoonabovebar: "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z" }, at = class {
          constructor(e3) {
            at._registry[e3] = this;
          }
          static createAtom(e3, t3, a2, r2) {
            return at._registry[e3].createAtom(t3, a2, r2);
          }
          static serialize(e3, t3) {
            return at._registry[e3[0].mode].serialize(e3, t3);
          }
          static applyStyle(e3, t3, a2) {
            return at._registry[e3].applyStyle(t3, a2);
          }
        }, rt = at;
        function it(e3, t3) {
          let a2, r2 = [], i2 = [];
          for (let o2 of e3) if ("first" !== o2.type && o2.style) {
            let e4;
            "variant" === t3 ? (e4 = o2.style.variant, o2.style.variantStyle && "up" !== o2.style.variantStyle && (e4 += "-" + o2.style.variantStyle)) : "cssClass" === t3 ? "group" === o2.type && (e4 = o2.customClass) : e4 = o2.style[t3], e4 === a2 ? i2.push(o2) : (i2.length > 0 && r2.push(i2), i2 = [o2], a2 = e4);
          }
          return i2.length > 0 && r2.push(i2), r2;
        }
        rt._registry = {};
        var ot = ["", "chem", "mord", "mbin", "mop", "mrel", "mopen", "mclose", "mpunct", "minner", "spacing", "first", "latex", "composition", "error", "placeholder", "supsub", "none", "mathfield"], nt = { mord: { mop: 3, mbin: 4, mrel: 5, minner: 3 }, mop: { mord: 3, mop: 3, rel: 5, minner: 3 }, mbin: { mord: 4, mop: 4, mopen: 4, minner: 4 }, mrel: { mord: 5, mop: 5, mopen: 5, minner: 5 }, mclose: { mop: 3, mbin: 4, mrel: 5, minner: 3 }, mpunct: { mord: 3, mop: 3, mrel: 3, mopen: 3, mpunct: 3, minner: 3 }, minner: { mord: 3, mop: 3, mbin: 4, mrel: 5, mopen: 3, mpunct: 3, minner: 3 } }, st = { mord: { mop: 3 }, mop: { mord: 3, mop: 3 }, mclose: { mop: 3 }, minner: { mop: 3 } };
        function lt(e3, t3) {
          if ("string" == typeof e3) return e3;
          if ("number" == typeof e3) {
            let a2 = Math.ceil(100 * e3) / 100;
            return 0 === a2 ? "0" : a2.toString() + (null != t3 ? t3 : "");
          }
          return "";
        }
        var dt = class {
          constructor(e3, t3) {
            var a2, r2, i2, o2, n2, s2;
            if ("number" == typeof e3 ? this.value = String.fromCodePoint(e3) : "string" == typeof e3 ? this.value = e3 : M(e3) ? this.children = e3.filter((e4) => null !== e4) : e3 && e3 instanceof dt && (this.children = [e3]), this.type = null != (a2 = null == t3 ? void 0 : t3.type) ? a2 : "", this.isSelected = false, this.isTight = null != (r2 = null == t3 ? void 0 : t3.isTight) && r2, this.newList = null != (i2 = null == t3 ? void 0 : t3.newList) && i2, null != t3 && t3.properties) for (let e4 of Object.keys(t3.properties)) this.setStyle(e4, t3.properties[e4]);
            null != t3 && t3.attributes && (this.attributes = t3.attributes), this.classes = null != (o2 = null == t3 ? void 0 : t3.classes) ? o2 : "";
            let l2 = (null == t3 ? void 0 : t3.fontFamily) || "Main-Regular";
            if (null != t3 && t3.style && this.value && (l2 = rt.applyStyle(null != (n2 = t3.mode) ? n2 : "math", this, t3.style) || "Main-Regular"), this.height = 0, this.depth = 0, this.skew = 0, this.italic = 0, this.maxFontSize = 0, "latex" === this.type) this.height = 0.8, this.depth = 0.2;
            else if ("number" == typeof e3) {
              let t4 = Xe(e3, l2);
              this.height = t4.height, this.depth = t4.depth, this.skew = t4.skew, this.italic = t4.italic;
            } else if (this.value) {
              this.height = -1 / 0, this.depth = -1 / 0, this.skew = -1 / 0, this.italic = -1 / 0;
              for (let e4 = 0; e4 < this.value.length; e4++) {
                let t4 = Xe(this.value.codePointAt(e4), l2 || "Main-Regular");
                this.height = Math.max(this.height, t4.height), this.depth = Math.max(this.depth, t4.depth), this.skew = t4.skew, this.italic = t4.italic;
              }
            } else if (this.children && this.children.length > 0) if (1 === this.children.length) {
              let e4 = this.children[0];
              this.height = e4.height, this.depth = e4.depth, this.maxFontSize = e4.maxFontSize, this.skew = e4.skew, this.italic = e4.italic;
            } else {
              let e4 = -1 / 0, t4 = -1 / 0, a3 = 0;
              for (let r3 of this.children) r3.height > e4 && (e4 = r3.height), r3.depth > t4 && (t4 = r3.depth), a3 = Math.max(a3, null != (s2 = r3.maxFontSize) ? s2 : 0);
              this.height = e4, this.depth = t4, this.maxFontSize = a3;
            }
            void 0 !== (null == t3 ? void 0 : t3.height) && (this.height = t3.height), void 0 !== (null == t3 ? void 0 : t3.depth) && (this.depth = t3.depth), void 0 !== (null == t3 ? void 0 : t3.maxFontSize) && (this.maxFontSize = t3.maxFontSize);
          }
          set atomID(e3) {
            void 0 === e3 || 0 === e3.length || (this.attributes || (this.attributes = {}), this.attributes["data-atom-id"] = e3);
          }
          selected(e3) {
            if (this.isSelected !== e3 && (this.isSelected = e3, this.children)) for (let t3 of this.children) t3.selected(e3);
          }
          setStyle(e3, t3, a2) {
            if (void 0 === t3) return;
            let r2 = lt(t3, a2);
            r2.length > 0 && (this.cssProperties || (this.cssProperties = {}), this.cssProperties[e3] = r2);
          }
          setTop(e3) {
            Number.isFinite(e3) && Math.abs(e3) > 0.01 && (this.cssProperties || (this.cssProperties = {}), this.cssProperties.top = lt(e3, "em"), this.height -= e3, this.depth += e3);
          }
          get left() {
            var e3;
            return null != (e3 = this.cssProperties) && e3["margin-left"] ? Number.parseFloat(this.cssProperties["margin-left"]) : 0;
          }
          set left(e3) {
            Number.isFinite(e3) && (0 === e3 ? this.cssProperties && delete this.cssProperties["margin-left"] : (this.cssProperties || (this.cssProperties = {}), this.cssProperties["margin-left"] = lt(e3, "em")));
          }
          set right(e3) {
            Number.isFinite(e3) && (0 === e3 ? this.cssProperties && delete this.cssProperties["margin-right"] : (this.cssProperties || (this.cssProperties = {}), this.cssProperties["margin-right"] = lt(e3, "em")));
          }
          set width(e3) {
            Number.isFinite(e3) && (0 === e3 ? this.cssProperties && delete this.cssProperties.width : (this.cssProperties || (this.cssProperties = {}), this.cssProperties.width = lt(e3, "em")));
          }
          wrap(e3, t3) {
            let a2 = e3.parent;
            if (!a2) return this;
            e3.isPhantom && this.setStyle("opacity", 0);
            let r2 = e3.computedColor;
            r2 === a2.computedColor && (r2 = ""), this.setStyle("color", r2);
            let i2, o2 = e3.effectiveFontSize === a2.effectiveFontSize ? void 0 : e3.effectiveFontSize, n2 = e3.computedBackgroundColor;
            if (this.isSelected && (n2 = V(n2)), n2 === a2.computedBackgroundColor && (n2 = ""), !(o2 || n2 || t3 && (t3.classes || t3.type))) return this;
            n2 ? (i2 = ft(this, t3), i2.selected(this.isSelected), i2.setStyle("background-color", n2), i2.setStyle("display", "inline-block")) : i2 = new dt(this, t3);
            let s2 = e3.scalingFactor;
            return 1 !== s2 && (i2.setStyle("font-size", 100 * s2, "%"), i2.height *= s2, i2.depth *= s2, i2.italic *= s2, i2.skew *= s2), i2;
          }
          wrapSelect(e3) {
            if (!this.isSelected) return this;
            if (!e3.parent) return this;
            let t3 = V(e3.computedBackgroundColor), a2 = ft(this);
            return a2.selected(true), a2.setStyle("background-color", t3), a2.setStyle("display", "inline-block"), a2;
          }
          toMarkup() {
            var e3, t3, a2;
            let r2 = null != (e3 = this.value) ? e3 : "";
            if (this.children) for (let e4 of this.children) r2 += e4.toMarkup();
            let i2 = this.classes.split(" ");
            i2.push(null != (t3 = { latex: "ML__latex", placeholder: "ML__placeholder", error: "ML__error" }[this.type]) ? t3 : ""), "latex" === this.caret && i2.push("ML__latex-caret");
            let o2 = 1 === i2.length ? i2[0] : i2.filter((e4, t4, a3) => e4.length > 0 && a3.indexOf(e4) === t4).join(" "), n2 = "";
            if (r2.length > 0 && "​" !== r2 || o2.length > 0 || this.cssId || this.htmlData || this.htmlStyle || this.attributes || this.cssProperties || this.svgBody || this.svgOverlay) {
              let e4 = "";
              if (this.cssId && (e4 += ` id=${this.cssId.replace(/ /g, "-")} `), this.htmlData) {
                let t5 = this.htmlData.split(",");
                for (let a3 of t5) {
                  let t6 = a3.match(/([^=]+)=(.+$)/);
                  if (t6) {
                    let a4 = t6[1].trim().replace(/ /g, "-");
                    a4 && (e4 += ` data-${a4}=${t6[2]} `);
                  } else {
                    let t7 = a3.trim().replace(/ /g, "-");
                    t7 && (e4 += ` data-${t7} `);
                  }
                }
              }
              if (this.htmlStyle) {
                let t5 = this.htmlStyle.split(";"), a3 = "";
                for (let e5 of t5) {
                  let t6 = e5.match(/([^=]+):(.+$)/);
                  if (t6) {
                    let e6 = t6[1].trim().replace(/ /g, "-");
                    e6 && (a3 += `${e6}:${t6[2]};`);
                  }
                }
                a3 && (e4 += ` style="${a3}"`);
              }
              if (this.attributes && (e4 += " " + Object.keys(this.attributes).map((e5) => `${e5}="${this.attributes[e5]}"`).join(" ")), o2.length > 0 && (e4 += ` class="${o2}"`), this.cssProperties) {
                let t5 = Object.keys(this.cssProperties).map((e5) => `${e5}:${this.cssProperties[e5]}`).join(";");
                t5.length > 0 && (e4 += ` style="${t5}"`);
              }
              let t4 = "";
              this.svgBody ? t4 = function(e5) {
                if (et[e5]) {
                  let [t6, a4, r4] = et[e5];
                  return `<span style="display:inline-block;height:${r4 / 2}em;min-width:0"><span class="stretchy" style="height:${r4}em"><svg width="100%" height="${r4}em" viewBox="0 0 ${t6} ${a4}" preserveAspectRatio="none" ><path fill="currentcolor" d="${tt[e5]}"></path></svg></span></span>`;
                }
                let t5, a3, [r3, i3, o3, n3] = Qe[e5], s2 = o3 / 1e3;
                3 === r3.length ? (t5 = ["slice-1-of-3", "slice-2-of-3", "slice-3-of-3"], a3 = ["xMinYMin", "xMidYMin", "xMaxYMin"]) : 2 === r3.length ? (t5 = ["slice-1-of-2", "slice-2-of-2"], a3 = ["xMinYMin", "xMaxYMin"]) : (t5 = ["slice-1-of-1"], a3 = [n3]);
                let l2 = r3.map((e6, r4) => `<span class="${t5[r4]}" style=height:${s2}em><svg width=400em height=${s2}em viewBox="0 0 400000 ${o3}" preserveAspectRatio="${a3[r4]} slice"><path fill="currentcolor" d="${tt[e6]}"></path></svg></span>`).join("");
                return `<span style="display:inline-block;height:${s2}em;min-width:${i3}em;">${l2}</span>`;
              }(this.svgBody) : this.svgOverlay && (t4 = '<span style="', t4 += "display: inline-block;", t4 += `height:${this.height + this.depth}em;`, t4 += `vertical-align:${this.depth}em;`, t4 += '">', t4 += r2, t4 += "</span>", t4 += '<svg style="position:absolute;overflow:overlay;', t4 += `height:${this.height + this.depth}em;`, null != (a2 = this.cssProperties) && a2.padding ? (t4 += `top:${this.cssProperties.padding}em;`, t4 += `left:${this.cssProperties.padding}em;`, t4 += `width:calc(100% - 2 * ${this.cssProperties.padding}em );`) : t4 += "top:0;left:0;width:100%;", t4 += "z-index:2;", t4 += '"', this.svgStyle && (t4 += ` style="${this.svgStyle}"`), t4 += `>${this.svgOverlay}</svg>`), n2 = `<span${e4}>${r2}${t4}</span>`;
            }
            return "text" === this.caret ? n2 += '<span class="ML__text-caret"></span>' : "math" === this.caret && (n2 += '<span class="ML__caret"></span>'), n2;
          }
          tryCoalesceWith(e3) {
            if (this.type !== e3.type || !/ML__text/.test(this.classes) && !["mord", "mbin", "mrel"].includes(this.type) || this.svgBody || !this.value || e3.svgBody || !e3.value) return false;
            let t3 = this.children && this.children.length > 0, a2 = e3.children && e3.children.length > 0;
            if (t3 || a2) return false;
            let r2 = this.cssProperties ? Object.keys(this.cssProperties).length : 0;
            if (r2 !== (e3.cssProperties ? Object.keys(e3.cssProperties).length : 0)) return false;
            if (r2 > 0) {
              for (let t4 of Object.keys(this.cssProperties)) if (this.cssProperties[t4] !== e3.cssProperties[t4]) return false;
            }
            let i2 = this.classes.trim().replace(/\s+/g, " ").split(" "), o2 = e3.classes.trim().replace(/\s+/g, " ").split(" ");
            if (i2.length !== o2.length) return false;
            i2.sort(), o2.sort();
            for (let [e4, t4] of i2.entries()) if ("vertical-separator" === t4 || t4 !== o2[e4]) return false;
            return this.value += e3.value, this.height = Math.max(this.height, e3.height), this.depth = Math.max(this.depth, e3.depth), this.maxFontSize = Math.max(this.maxFontSize, e3.maxFontSize), this.italic = e3.italic, true;
          }
        };
        function ct(e3) {
          if (!e3 || 0 === e3.length) return [];
          e3[0].children = ct(e3[0].children);
          let t3 = [e3[0]];
          for (let a2 = 1; a2 < e3.length; a2++) t3[t3.length - 1].tryCoalesceWith(e3[a2]) || (e3[a2].children = ct(e3[a2].children), t3.push(e3[a2]));
          return t3;
        }
        function ut(e3) {
          return e3.children && (e3.children = ct(e3.children)), e3;
        }
        function pt(e3, t3, a2) {
          t3.newList && (e3 = null);
          let r2 = t3.type;
          if ("first" === r2) return null;
          if ("spacing" === r2) return e3;
          if (a2(e3, t3), t3.children) {
            let i2 = null;
            (void 0 === r2 || 0 === r2.length) && (i2 = e3);
            for (let e4 of t3.children) i2 = pt(i2, e4, a2);
            (void 0 === r2 || 0 === r2.length) && (e3 = i2);
          }
          return "supsub" !== r2 && void 0 !== r2 && r2.length > 0 && (e3 = t3), e3;
        }
        function ht(e3, t3) {
          e3 && pt(null, e3, t3);
        }
        function mt(e3, t3 = 1) {
          return function(e4) {
            ht(e4, (e5, t4) => {
              "mbin" === t4.type && (!e5 || /first|none|mbin|mop|mrel|mopen|mpunct/.test(e5.type)) && (t4.type = "mord"), e5 && "mbin" === e5.type && /mrel|mclose|mpunct|placeholder/.test(t4.type) && (e5.type = "mord");
            });
          }(e3), function(e4, t4) {
            ht(e4, (e5, a2) => {
              var r2, i2, o2, n2;
              let s2 = null != (r2 = null == e5 ? void 0 : e5.type) ? r2 : "none", l2 = a2.isTight ? null != (i2 = st[s2]) ? i2 : null : null != (o2 = nt[s2]) ? o2 : null, d2 = l2 && null != (n2 = l2[a2.type]) ? n2 : 0;
              d2 && (a2.left += t4 * (d2 / 18));
            });
          }(e3, t3), e3;
        }
        function ft(e3, t3) {
          if (!e3) return new dt(null, t3);
          let a2 = new dt(null, { classes: "ML__strut" });
          a2.setStyle("height", Math.max(0, e3.height), "em");
          let r2 = [a2];
          if (0 !== e3.depth) {
            let t4 = new dt(null, { classes: "ML__strut--bottom" });
            t4.setStyle("height", e3.height + e3.depth, "em"), t4.setStyle("vertical-align", -e3.depth, "em"), r2.push(t4);
          }
          return r2.push(e3), new dt(r2, t3);
        }
        function yt(e3) {
          let t3 = function(e4) {
            return Qe[e4] ? Qe[e4][2] / 1e3 : et[e4][2];
          }(e3) / 2, a2 = new dt(null, { height: t3 + 0.166, depth: t3 - 0.166, maxFontSize: 0 });
          return a2.svgBody = e3, a2;
        }
        var bt, gt = class extends dt {
          constructor(e3, t3) {
            var a2;
            let [r2, i2, o2] = function(e4) {
              var t4;
              let [a3, r3] = function(e5) {
                if ("individualShift" in e5) {
                  let t5 = e5.individualShift, a4 = t5[0], r4 = [a4], i4 = -a4.shift - a4.box.depth, o4 = i4;
                  for (let e6 = 1; e6 < t5.length; e6++) {
                    let i5 = t5[e6], n3 = -i5.shift - o4 - i5.box.depth, s3 = n3 - (a4.box.height + a4.box.depth);
                    o4 += n3, r4.push(s3), r4.push(i5), a4 = i5;
                  }
                  return [r4, i4];
                }
                if ("top" in e5) {
                  let t5 = e5.top;
                  for (let a4 of e5.children) t5 -= "number" == typeof a4 ? a4 : a4.box.height + a4.box.depth;
                  return [e5.children, t5];
                }
                if ("bottom" in e5) return [e5.children, -e5.bottom];
                if ("firstBaseline" in e5) {
                  let t5 = e5.firstBaseline[0];
                  if ("number" == typeof t5) throw new Error("First child must be an element.");
                  return [e5.firstBaseline, -t5.box.depth];
                }
                if ("shift" in e5) {
                  let t5 = e5.children[0];
                  if ("number" == typeof t5) throw new Error("First child must be an element.");
                  return [e5.children, -t5.box.depth - e5.shift];
                }
                return [null, 0];
              }(e4);
              if (!a3) return [[], 0, 0];
              let i3 = 0;
              for (let e5 of a3) if ("number" != typeof e5) {
                let t5 = e5.box;
                i3 = Math.max(i3, t5.maxFontSize, t5.height);
              }
              i3 += 2;
              let o3 = new dt(null, { classes: "pstrut" });
              o3.setStyle("height", i3, "em");
              let n2 = [], s2 = r3, l2 = r3, d2 = r3;
              for (let e5 of a3) {
                if ("number" == typeof e5) d2 += e5;
                else {
                  let a4 = e5.box, r4 = null != (t4 = e5.classes) ? t4 : [], s3 = new dt([o3, a4], { classes: r4.join(" "), style: e5.style });
                  s3.setStyle("top", -i3 - d2 - a4.depth, "em"), e5.marginLeft && s3.setStyle("margin-left", e5.marginLeft, "em"), e5.marginRight && s3.setStyle("margin-right", e5.marginRight, "em"), n2.push(s3), d2 += a4.height + a4.depth;
                }
                s2 = Math.min(s2, d2), l2 = Math.max(l2, d2);
              }
              let c2 = new dt(n2, { classes: "vlist" });
              if (c2.setStyle("height", l2, "em"), s2 >= 0) return [[new dt(c2, { classes: "vlist-r" })], l2, -s2];
              let u2 = new dt(new dt(null), { classes: "vlist" });
              u2.setStyle("height", -s2, "em");
              let p2 = new dt(8203, { classes: "vlist-s", maxFontSize: 0, height: 0, depth: 0 });
              return [[new dt([c2, p2], { classes: "vlist-r" }), new dt(u2, { classes: "vlist-r" })], l2, -s2];
            }(e3);
            super(1 === r2.length ? r2[0] : r2, { classes: (null != (a2 = null == t3 ? void 0 : t3.classes) ? a2 : "") + " vlist-t" + (2 === r2.length ? " vlist-t2" : ""), height: i2, depth: o2, type: null == t3 ? void 0 : t3.type });
          }
        }, vt = 8205, kt = [[vt, 1], [65038, 2], [127995, 5], [129456, 4], [917536, 96]], xt = [127462, 127487];
        function wt(e3) {
          var t3;
          if (void 0 === bt) {
            bt = {};
            for (let e4 of kt) for (let t4 = e4[0]; t4 <= e4[0] + e4[1] - 1; t4++) bt[t4] = true;
          }
          return null != (t3 = bt[e3]) && t3;
        }
        function _t(e3) {
          return e3 >= xt[0] && e3 <= xt[1];
        }
        function St(e3) {
          if (/^[\u0020-\u00FF]*$/.test(e3)) return e3;
          let t3 = [], a2 = function(e4) {
            let t4 = [];
            for (let a3 = 0; a3 < e4.length; a3++) {
              let r3 = e4.charCodeAt(a3);
              if (13 === r3 && 10 === e4.charCodeAt(a3 + 1) && (r3 = 10, a3++), (13 === r3 || 12 === r3) && (r3 = 10), 0 === r3 && (r3 = 65533), r3 >= 55296 && r3 <= 56319) {
                let t5 = e4.charCodeAt(a3 + 1);
                t5 >= 56320 && t5 <= 57343 && (r3 = 65536 + 1024 * (r3 - 55296) + (t5 - 56320), a3++);
              }
              t4.push(r3);
            }
            return t4;
          }(e3), r2 = 0;
          for (; r2 < a2.length; ) {
            let e4 = a2[r2++], i2 = a2[r2];
            if (i2 === vt) {
              let e5 = r2 - 1;
              for (r2 += 2; a2[r2] === vt; ) r2 += 2;
              t3.push(String.fromCodePoint(...a2.slice(e5, r2 - e5 + 1)));
            } else if (wt(i2)) {
              let e5 = r2 - 1;
              for (; wt(a2[r2]); ) r2 += a2[r2] === vt ? 2 : 1;
              t3.push(String.fromCodePoint(...a2.slice(e5, 2 * r2 - e5 - 1)));
            } else _t(e4) ? (r2 += 1, t3.push(String.fromCodePoint(...a2.slice(r2 - 2, 2)))) : t3.push(String.fromCodePoint(e4));
          }
          return t3;
        }
        function Mt(e3, t3) {
          var a2, r2, i2, o2;
          let n2 = [], s2 = e3.next();
          if (s2 && "\\relax" !== s2) {
            if ("\\noexpand" === s2) s2 = e3.next(), s2 && n2.push(s2);
            else if ("\\obeyspaces" === s2) e3.obeyspaces = true;
            else if ("\\space" === s2 || "~" === s2) n2.push("<space>");
            else if ("\\bgroup" === s2) n2.push("<{>");
            else if ("\\egroup" === s2) n2.push("<}>");
            else if ("\\string" === s2) {
              if (s2 = e3.next(), s2) if (s2.startsWith("\\")) for (let e4 of s2) n2.push("\\" === e4 ? "\\backslash" : e4);
              else "<{>" === s2 ? n2.push("\\{") : "<space>" === s2 ? n2.push("~") : "<}>" === s2 && n2.push("\\}");
            } else if ("\\csname" === s2) {
              for (; "<space>" === e3.peek(); ) e3.next();
              let i3 = "", o3 = false, l2 = [];
              do {
                if (0 === l2.length) if (/^#[\d?@]$/.test(e3.peek())) {
                  let i4 = e3.get().slice(1);
                  l2 = Lt(null != (r2 = null != (a2 = null == t3 ? void 0 : t3(i4)) ? a2 : null == t3 ? void 0 : t3("?")) ? r2 : "\\placeholder{}", t3), s2 = l2[0];
                } else s2 = e3.next(), l2 = s2 ? [s2] : [];
                o3 = 0 === l2.length, !o3 && "\\endcsname" === s2 && (o3 = true, l2.shift()), o3 || (o3 = "<$>" === s2 || "<$$>" === s2 || "<{>" === s2 || "<}>" === s2 || "string" == typeof s2 && s2.length > 1 && s2.startsWith("\\")), o3 || (i3 += l2.shift());
              } while (!o3);
              i3 && n2.push("\\" + i3), n2.push(...l2);
            } else if ("\\endcsname" !== s2) if (s2.length > 1 && s2.startsWith("#")) {
              let e4 = s2.slice(1);
              n2.push(...Lt(null != (o2 = null != (i2 = null == t3 ? void 0 : t3(e4)) ? i2 : null == t3 ? void 0 : t3("?")) ? o2 : "\\placeholder{}", t3));
            } else n2.push(s2);
          }
          return n2;
        }
        function Lt(e3, t3 = null) {
          let a2 = [], r2 = "";
          for (let t4 of e3.toString().split(/\r?\n/)) {
            r2 && a2.push(r2), r2 = " ";
            let e4 = t4.match(/((?:\\%)|[^%])*/);
            null !== e4 && a2.push(e4[0]);
          }
          let i2 = new class {
            constructor(e4) {
              this.s = St(e4), this.pos = 0, this.obeyspaces = false;
            }
            end() {
              return this.pos >= this.s.length;
            }
            get() {
              return this.pos < this.s.length ? this.s[this.pos++] : "";
            }
            peek() {
              return this.s[this.pos];
            }
            match(e4) {
              let t4 = "string" == typeof this.s ? e4.exec(this.s.slice(this.pos)) : e4.exec(this.s.slice(this.pos).join(""));
              return null != t4 && t4[0] ? (this.pos += t4[0].length, t4[0]) : "";
            }
            next() {
              if (this.end()) return null;
              if (!this.obeyspaces && this.match(/^[ \f\n\r\t\v\u00A0\u2028\u2029]+/) || this.obeyspaces && this.match(/^[ \f\n\r\t\v\u00A0\u2028\u2029]/)) return "<space>";
              let e4 = this.get();
              if ("\\" === e4) {
                if (!this.end()) {
                  let e5 = this.match(/^[a-zA-Z\*]+/);
                  if (e5) this.match(/^[ \f\n\r\t\v\u00A0\u2028\u2029]*/);
                  else if (e5 = this.get(), " " === e5) return "<space>";
                  return "\\" + e5;
                }
              } else {
                if ("{" === e4) return "<{>";
                if ("}" === e4) return "<}>";
                if ("^" === e4) {
                  if ("^" === this.peek()) {
                    this.get();
                    let e5 = this.match(/^(\^(\^(\^(\^[\da-f])?[\da-f])?[\da-f])?[\da-f])?[\da-f]{2}/);
                    if (e5) return String.fromCodePoint(Number.parseInt(e5.slice(e5.lastIndexOf("^") + 1), 16));
                  }
                  return e4;
                }
                if ("#" === e4) {
                  if (!this.end()) {
                    let e5 = false;
                    if (/[\d?@]/.test(this.peek()) && (e5 = true, this.pos + 1 < this.s.length)) {
                      let t4 = this.s[this.pos + 1];
                      e5 = /[^\dA-Za-z]/.test(t4);
                    }
                    return e5 ? "#" + this.get() : "#";
                  }
                } else if ("$" === e4) return "$" === this.peek() ? (this.get(), "<$$>") : "<$>";
              }
              return e4;
            }
          }(a2.join("")), o2 = [];
          do {
            o2.push(...Mt(i2, t3));
          } while (!i2.end());
          return o2;
        }
        function Ct(e3) {
          let t3 = "", a2 = [];
          for (let r2 of e3) r2 && (/[a-zA-Z\*]/.test(r2[0]) && a2.push(t3), a2.push(r2), /\\[a-zA-Z]+\*?[\"\'][^\ ]+$/.test(r2) && a2.push(" "), t3 = /\\[a-zA-Z]+\*?$/.test(r2) ? " " : "");
          return a2.join("");
        }
        function At(e3) {
          return Ct(e3.map((e4) => {
            var t3;
            return null != (t3 = { "<space>": " ", "<$$>": "$$", "<$>": "$", "<{>": "{", "<}>": "}" }[e4]) ? t3 : e4;
          }));
        }
        var Dt = class extends dt {
          constructor(e3, t3, a2) {
            super(null, a2), this.mathfield = t3, this.htmlData = `placeholder-id=${e3} `;
            let r2 = ft(mt((i2 = t3._mathfield).model.root.render(new Ye({ registers: i2.registers }, { fontSize: 5, letterShapeStyle: i2.options.letterShapeStyle }, "inline-math" === i2.options.defaultMode ? "textstyle" : "displaystyle")), i2.options.horizontalSpacingScale), { classes: "ML__mathlive", attributes: { translate: "no", "aria-hidden": "true" } });
            var i2;
            this.height = r2.height, this.depth = r2.depth;
          }
          toMarkup() {
            let e3 = [], t3 = this.classes.split(" "), a2 = 1 === t3.length ? t3[0] : t3.filter((e4, t4, a3) => e4.length > 0 && a3.indexOf(e4) === t4).join(" ");
            if (this.cssId && e3.push(`id=${this.cssId.replace(/ /g, "-")}`), this.htmlData) {
              let t4 = this.htmlData.split(",");
              for (let a3 of t4) {
                let t5 = a3.match(/([^=]+)=(.+$)/);
                if (t5) {
                  let a4 = t5[1].trim().replace(/ /g, "-");
                  a4 && e3.push(`data-${a4}=${t5[2]}`);
                } else {
                  let t6 = a3.trim().replace(/ /g, "-");
                  t6 && e3.push(`data-${t6}`);
                }
              }
            }
            if (this.htmlStyle) {
              let t4 = this.htmlStyle.split(";"), a3 = "";
              for (let e4 of t4) {
                let t5 = e4.match(/([^=]+):(.+$)/);
                if (t5) {
                  let e5 = t5[1].trim().replace(/ /g, "-");
                  e5 && (a3 += `${e5}:${t5[2]};`);
                }
              }
              a3 && e3.push(`style="${a3}"`);
            }
            this.attributes && e3.push(...Object.keys(this.attributes).map((e4) => `${e4}="${this.attributes[e4]}"`)), a2.length > 0 && e3.push(`class="${a2}"`);
            let r2 = this.mathfield;
            return e3.push(`style="display:inline-block; width:${r2.clientWidth}px; height:${r2.clientHeight}px;" `), `<span ${e3.join(" ")}></span>`;
          }
        }, Tt = ["above", "body", "below", "superscript", "subscript"];
        function zt(e3) {
          return "string" == typeof e3 && Tt.includes(e3);
        }
        function Bt(e3) {
          return void 0 !== e3 && Array.isArray(e3) && 2 === e3.length;
        }
        var Kt = class {
          constructor(e3, t3, a2) {
            var r2, i2, o2, n2, s2, l2;
            this.id = void 0, this.verbatimLatex = void 0, this._isDirty = false, this._changeCounter = 0, this.subsupPlacement = void 0, this.explicitSubsupPlacement = false, this.skipBoundary = false, this.captureSelection = false, this.type = e3, this.context = t3, "string" == typeof (null == a2 ? void 0 : a2.value) && (this.value = a2.value), this.command = null != (i2 = null != (r2 = null == a2 ? void 0 : a2.command) ? r2 : this.value) ? i2 : "", this.mode = null != (o2 = null == a2 ? void 0 : a2.mode) ? o2 : "math", this.isFunction = null != (n2 = null == a2 ? void 0 : a2.isFunction) && n2, this.subsupPlacement = null == a2 ? void 0 : a2.limits, this.style = null != (s2 = null == a2 ? void 0 : a2.style) ? s2 : {}, this.displayContainsHighlight = null != (l2 = null == a2 ? void 0 : a2.displayContainsHighlight) && l2, null != a2 && a2.serialize && (Kt.customSerializer[a2.command] = a2.serialize);
          }
          static createBox(e3, t3, a2) {
            var r2, i2, o2;
            if (!t3) return null;
            let n2 = function(e4) {
              let t4, a3 = [], r3 = [];
              for (let i3 of e4) if (t4 || i3.style) {
                let e5 = i3.computedStyle;
                t4 && e5.color === t4.color && e5.backgroundColor === t4.backgroundColor && e5.fontSize === t4.fontSize ? r3.push(i3) : (r3.length > 0 && a3.push(r3), r3 = [i3], t4 = e5);
              } else r3.push(i3);
              return r3.length > 0 && a3.push(r3), a3;
            }(t3);
            if (1 === n2.length) {
              let t4 = n2[0];
              return t4[0].style ? qt(e3, t4, S(_({}, a2), { style: { color: t4[0].style.color, backgroundColor: t4[0].style.backgroundColor, fontSize: t4[0].style.fontSize } })) : qt(e3, t4, a2);
            }
            let s2 = [], l2 = null == a2 ? void 0 : a2.newList;
            for (let t4 of n2) {
              let a3 = qt(new Ye(e3, { color: null == (r2 = t4[0].style) ? void 0 : r2.color, backgroundColor: null == (i2 = t4[0].style) ? void 0 : i2.backgroundColor, fontSize: null == (o2 = t4[0].style) ? void 0 : o2.fontSize }), t4, { newList: l2 });
              a3 && (l2 = false, s2.push(a3));
            }
            return 0 === s2.length ? null : 1 !== s2.length || null != a2 && a2.classes || null != a2 && a2.type ? new dt(s2, { classes: null == a2 ? void 0 : a2.classes, type: null == a2 ? void 0 : a2.type, newList: null == a2 ? void 0 : a2.newList }).wrap(e3) : s2[0].wrap(e3);
          }
          static serialize(e3, t3) {
            return M(e3) ? $t(e3, t3) : "number" == typeof e3 || "boolean" == typeof e3 ? e3.toString() : "string" == typeof e3 ? e3.replace(/\s/g, "~") : void 0 === e3 ? "" : t3.expandMacro || "string" != typeof e3.verbatimLatex ? e3.command && Kt.customSerializer[e3.command] ? Kt.customSerializer[e3.command](e3, t3) : e3.serialize(t3) : e3.verbatimLatex;
          }
          static commonAncestor(e3, t3) {
            if (e3 === t3 || e3.parent === t3.parent) return e3.parent;
            let a2 = /* @__PURE__ */ new WeakSet(), { parent: r2 } = e3;
            for (; r2; ) a2.add(r2), r2 = r2.parent;
            for (r2 = t3.parent; r2; ) {
              if (a2.has(r2)) return r2;
              r2 = r2.parent;
            }
          }
          static fromJson(e3, t3) {
            let a2 = new Kt(e3.type, t3, e3);
            for (let t4 of Tt) e3[t4] && a2.setChildren(e3[t4], t4);
            return a2;
          }
          toJson() {
            let e3 = { type: this.type };
            if ("math" !== this.mode && (e3.mode = this.mode), this.command && this.command !== this.value && (e3.command = this.command), void 0 !== this.value && (e3.value = this.value), this.style && Object.keys(this.style).length > 0 && (e3.style = _({}, this.style)), void 0 !== this.verbatimLatex && (e3.verbatimLatex = this.verbatimLatex), this.subsupPlacement && (e3.subsupPlacement = this.subsupPlacement), this.explicitSubsupPlacement && (e3.explicitSubsupPlacement = true), this.isFunction && (e3.isFunction = true), this.displayContainsHighlight && (e3.displayContainsHighlight = true), this.isExtensibleSymbol && (e3.isExtensibleSymbol = true), this.skipBoundary && (e3.skipBoundary = true), this.captureSelection && (e3.captureSelection = true), this._branches) for (let t3 of Object.keys(this._branches)) this._branches[t3] && (e3[t3] = this._branches[t3].filter((e4) => "first" !== e4.type).map((e4) => e4.toJson()));
            return e3;
          }
          get changeCounter() {
            return this._changeCounter;
          }
          get isDirty() {
            return this._isDirty;
          }
          set isDirty(e3) {
            if (this._isDirty = e3, e3) {
              this._changeCounter++, this.verbatimLatex = void 0, this._children = void 0;
              let { parent: e4 } = this;
              for (; e4; ) e4._isDirty = true, e4._changeCounter++, e4.verbatimLatex = void 0, e4._children = void 0, e4 = e4.parent;
            }
          }
          serialize(e3) {
            var t3;
            return this.body && this.command ? Ct([this.command, "{", this.bodyToLatex(e3), "}", this.supsubToLatex(e3)]) : this.body ? Ct([this.bodyToLatex(e3), this.supsubToLatex(e3)]) : this.value && "​" !== this.value ? null != (t3 = this.command) ? t3 : function(e4, t4) {
              var a2;
              if ("text" === e4) return null != (a2 = re(e4, t4.codePointAt(0))) ? a2 : t4;
              let r2;
              if (r2 = re(e4, t4.codePointAt(0)), r2) return r2;
              let i2 = function(e5) {
                var t5;
                if ((e5 < 119808 || e5 > 120831) && (e5 < 8448 || e5 > 8527)) return { char: String.fromCodePoint(e5) };
                for (let a3 in oe) if (oe[a3] === e5) {
                  e5 = null != (t5 = a3.codePointAt(0)) ? t5 : 0;
                  break;
                }
                for (let t6 of ne) if (e5 >= t6.start && e5 < t6.start + t6.len) return { char: String.fromCodePoint(e5 - t6.start + t6.offset), variant: t6.variant, style: t6.style };
                return { char: String.fromCodePoint(e5) };
              }(t4.codePointAt(0));
              return i2.style || i2.variant ? (r2 = i2.char, i2.variant && (r2 = "\\" + i2.variant + "{" + r2 + "}"), "bold" === i2.style ? r2 = "\\mathbf{" + r2 + "}" : "italic" === i2.style ? r2 = "\\mathit{" + r2 + "}" : "bolditalic" === i2.style && (r2 = "\\mathbfit{" + r2 + "}"), "\\mathord{" + r2 + "}") : "";
            }(this.mode, this.value) : "";
          }
          bodyToLatex(e3) {
            return $t(this.body, e3);
          }
          aboveToLatex(e3) {
            return $t(this.above, e3);
          }
          belowToLatex(e3) {
            return $t(this.below, e3);
          }
          supsubToLatex(e3) {
            let t3 = "";
            if (void 0 !== this.branch("subscript")) {
              let a2 = $t(this.subscript, e3);
              0 === a2.length ? t3 += "_{}" : 1 === a2.length ? t3 += "_" + a2 : t3 += `_{${a2}}`;
            }
            if (void 0 !== this.branch("superscript")) {
              let a2 = $t(this.superscript, e3);
              0 === a2.length ? t3 += "^{}" : 1 === a2.length ? t3 += "′" === a2 ? "^\\prime " : "″" === a2 ? "^\\doubleprime " : "^" + a2 : t3 += `^{${a2}}`;
            }
            return t3;
          }
          get treeDepth() {
            let e3 = 1, t3 = this.parent;
            for (; t3; ) t3 = t3.parent, e3 += 1;
            return e3;
          }
          get inCaptureSelection() {
            let e3 = false, t3 = this;
            for (; t3; ) {
              if (t3.captureSelection) {
                e3 = true;
                break;
              }
              t3 = t3.parent;
            }
            return e3;
          }
          branch(e3) {
            if (zt(e3) && this._branches) return this._branches[e3];
          }
          get branches() {
            if (!this._branches) return [];
            let e3 = [];
            for (let t3 of Tt) this._branches[t3] && e3.push(t3);
            return e3;
          }
          createBranch(e3) {
            return zt(e3) ? (this._branches ? this._branches[e3] || (this._branches[e3] = [this.makeFirstAtom(e3)]) : this._branches = { [e3]: [this.makeFirstAtom(e3)] }, this.isDirty = true, this._branches[e3]) : [];
          }
          get row() {
            return Bt(this.treeBranch) ? this.treeBranch[0] : -1;
          }
          get col() {
            return Bt(this.treeBranch) ? this.treeBranch[1] : -1;
          }
          get body() {
            var e3;
            return null == (e3 = this._branches) ? void 0 : e3.body;
          }
          set body(e3) {
            this.setChildren(e3, "body");
          }
          get superscript() {
            var e3;
            return null == (e3 = this._branches) ? void 0 : e3.superscript;
          }
          set superscript(e3) {
            this.setChildren(e3, "superscript");
          }
          get subscript() {
            var e3;
            return null == (e3 = this._branches) ? void 0 : e3.subscript;
          }
          set subscript(e3) {
            this.setChildren(e3, "subscript");
          }
          get above() {
            var e3;
            return null == (e3 = this._branches) ? void 0 : e3.above;
          }
          set above(e3) {
            this.setChildren(e3, "above");
          }
          get below() {
            var e3;
            return null == (e3 = this._branches) ? void 0 : e3.below;
          }
          set below(e3) {
            this.setChildren(e3, "below");
          }
          get computedStyle() {
            var e3;
            if (!this.parent) return _({}, null != (e3 = this.style) ? e3 : {});
            let t3 = void 0 !== this.style.verbatimColor, a2 = void 0 !== this.style.verbatimBackgroundColor, r2 = _(_({}, this.parent.computedStyle), this.style);
            return delete r2.variant, delete r2.variantStyle, a2 || delete r2.verbatimBackgroundColor, t3 || delete r2.verbatimColor, r2;
          }
          applyStyle(e3) {
            this.isDirty = true, this.style = _(_({}, this.style), e3), "none" === this.style.fontFamily && delete this.style.fontFamily, "auto" === this.style.fontShape && delete this.style.fontShape, "auto" === this.style.fontSeries && delete this.style.fontSeries, "none" === this.style.color && (delete this.style.color, delete this.style.verbatimColor), "none" === this.style.backgroundColor && (delete this.style.backgroundColor, delete this.style.verbatimBackgroundColor), "auto" === this.style.fontSize && delete this.style.fontSize;
            for (let t3 of this.children) t3.applyStyle(e3);
          }
          getInitialBaseElement() {
            let e3;
            return this.hasEmptyBranch("body") || (e3 = this.body[1].getInitialBaseElement()), null != e3 ? e3 : this;
          }
          getFinalBaseElement() {
            return this.hasEmptyBranch("body") ? this : this.body[this.body.length - 1].getFinalBaseElement();
          }
          isCharacterBox() {
            if ("leftright" === this.type) return false;
            let e3 = this.getInitialBaseElement();
            return /mord/.test(e3.type);
          }
          hasEmptyBranch(e3) {
            let t3 = this.branch(e3);
            return !t3 || 1 === t3.length;
          }
          setChildren(e3, t3) {
            if (!e3 || !zt(t3)) return;
            let a2 = [this.makeFirstAtom(t3), ...e3];
            this._branches ? this._branches[t3] = a2 : this._branches = { [t3]: a2 };
            for (let a3 of e3) a3.parent = this, a3.treeBranch = t3;
            this.isDirty = true;
          }
          makeFirstAtom(e3) {
            let t3 = new Kt("first", this.context, { mode: this.mode });
            return t3.parent = this, t3.treeBranch = e3, t3;
          }
          addChild(e3, t3) {
            this.createBranch(t3).push(e3), this.isDirty = true, e3.parent = this, e3.treeBranch = t3;
          }
          addChildBefore(e3, t3) {
            let a2 = this.createBranch(t3.treeBranch);
            a2.splice(a2.indexOf(t3), 0, e3), this.isDirty = true, e3.parent = this, e3.treeBranch = t3.treeBranch;
          }
          addChildAfter(e3, t3) {
            let a2 = this.createBranch(t3.treeBranch);
            a2.splice(a2.indexOf(t3) + 1, 0, e3), this.isDirty = true, e3.parent = this, e3.treeBranch = t3.treeBranch;
          }
          addChildren(e3, t3) {
            for (let a2 of e3) this.addChild(a2, t3);
          }
          addChildrenAfter(e3, t3) {
            let a2 = this.createBranch(t3.treeBranch);
            a2.splice(a2.indexOf(t3) + 1, 0, ...e3), this.isDirty = true;
            for (let a3 of e3) a3.parent = this, a3.treeBranch = t3.treeBranch;
            return e3[e3.length - 1];
          }
          removeBranch(e3) {
            let t3 = this.branch(e3);
            if (zt(e3) && (this._branches[e3] = void 0), !t3) return [];
            for (let e4 of t3) e4.parent = void 0, e4.treeBranch = void 0;
            return t3.shift(), this.isDirty = true, t3;
          }
          removeChild(e3) {
            if ("first" === e3.type) return;
            let t3 = this.branch(e3.treeBranch), a2 = t3.indexOf(e3);
            t3.splice(a2, 1), this.isDirty = true, e3.parent = void 0, e3.treeBranch = void 0;
          }
          get siblings() {
            return "root" === this.type ? [] : this.parent.branch(this.treeBranch);
          }
          get firstSibling() {
            return this.siblings[0];
          }
          get lastSibling() {
            let { siblings: e3 } = this;
            return e3[e3.length - 1];
          }
          get isFirstSibling() {
            return this === this.firstSibling;
          }
          get isLastSibling() {
            return this === this.lastSibling;
          }
          get hasNoSiblings() {
            return 1 === this.siblings.length;
          }
          get leftSibling() {
            let e3 = this.parent.branch(this.treeBranch);
            return e3[e3.indexOf(this) - 1];
          }
          get rightSibling() {
            let e3 = this.parent.branch(this.treeBranch);
            return e3[e3.indexOf(this) + 1];
          }
          get hasChildren() {
            return Boolean(this._branches && this.children.length > 0);
          }
          get firstChild() {
            return this.children[0];
          }
          get lastChild() {
            let { children: e3 } = this;
            return e3[e3.length - 1];
          }
          get children() {
            if (this._children) return this._children;
            if (!this._branches) return [];
            let e3 = [];
            for (let t3 of Tt) if (this._branches[t3]) for (let a2 of this._branches[t3]) e3.push(...a2.children), e3.push(a2);
            return this._children = e3, e3;
          }
          render(e3, t3) {
            if ("first" === this.type && !e3.atomIdsSettings) return null;
            let a2 = new Ye(e3, this.style), r2 = "";
            "root" === this.type && (r2 += " ML__base"), this.isSelected && (r2 += " ML__selected");
            let i2 = this.createBox(a2, { classes: r2, newList: true === (null == t3 ? void 0 : t3.newList) || "first" === this.type });
            return i2 ? (!this.subsupPlacement && (this.superscript || this.subscript) && (i2 = this.attachSupsub(a2, { base: i2 })), i2.wrap(a2)) : null;
          }
          attachSupsub(e3, t3) {
            var a2, r2;
            let i2 = t3.base, o2 = this.superscript, n2 = this.subscript;
            if (!o2 && !n2) return i2;
            let s2 = null, l2 = null, d2 = null != (a2 = t3.isCharacterBox) ? a2 : this.isCharacterBox(), c2 = 0;
            if (o2) {
              let t4 = new Ye(e3, void 0, "superscript");
              s2 = Kt.createBox(t4, o2, { newList: true }), d2 || (c2 = i2.height - e3.metrics.supDrop * t4.scalingFactor);
            }
            let u2, p2 = 0;
            if (n2) {
              let t4 = new Ye(e3, void 0, "subscript");
              l2 = Kt.createBox(t4, n2, { newList: true }), d2 || (p2 = i2.depth + e3.metrics.subDrop * t4.scalingFactor);
            }
            u2 = e3.isDisplayStyle ? e3.metrics.sup1 : e3.isCramped ? e3.metrics.sup3 : e3.metrics.sup2;
            let h2 = 0.05 / e3.scalingFactor, m2 = null;
            if (l2 && s2) {
              c2 = Math.max(c2, u2, s2.depth + 0.25 * e3.metrics.xHeight), p2 = Math.max(p2, e3.metrics.sub2);
              let t4 = e3.metrics.defaultRuleThickness;
              if (c2 - s2.depth - (l2.height - p2) < 4 * t4) {
                p2 = 4 * t4 - (c2 - s2.depth) + l2.height;
                let a4 = 0.8 * e3.metrics.xHeight - (c2 - s2.depth);
                a4 > 0 && (c2 += a4, p2 -= a4);
              }
              let a3 = this.isExtensibleSymbol && i2.italic ? -i2.italic : 0;
              m2 = new gt({ individualShift: [{ box: l2, shift: p2, marginLeft: a3 }, { box: s2, shift: -c2 }] }).wrap(e3);
            } else l2 && !s2 ? (p2 = Math.max(p2, e3.metrics.sub1, l2.height - 0.3448), m2 = new gt({ shift: p2, children: [{ box: l2, marginRight: h2, marginLeft: this.isCharacterBox() ? -(null != (r2 = i2.italic) ? r2 : 0) : 0 }] })) : !l2 && s2 && (c2 = Math.max(c2, u2, s2.depth + 0.10775), m2 = new gt({ shift: -c2, children: [{ box: s2, marginRight: h2 }] }), m2.wrap(e3));
            let f2 = new dt(m2, { classes: "msubsup" + (this.isSelected ? " ML__selected" : "") });
            return this.caret && (f2.caret = this.caret), new dt([i2, f2], { type: t3.type });
          }
          attachLimits(e3, t3) {
            var a2;
            let r2 = this.superscript ? Kt.createBox(new Ye(e3, this.style, "superscript"), this.superscript, { newList: true }) : null, i2 = this.subscript ? Kt.createBox(new Ye(e3, this.style, "subscript"), this.subscript, { newList: true }) : null;
            return r2 || i2 ? function(e4, t4) {
              var a3, r3, i3, o2, n2;
              let s2 = e4.metrics, l2 = new dt(t4.base), d2 = null != (a3 = t4.baseShift) ? a3 : 0, c2 = null != (r3 = t4.slant) ? r3 : 0, u2 = 0, p2 = 0;
              t4.above && (u2 = null != (i3 = t4.aboveShift) ? i3 : Math.max(s2.bigOpSpacing1, s2.bigOpSpacing3 - t4.above.depth)), t4.below && (p2 = null != (o2 = t4.belowShift) ? o2 : Math.max(s2.bigOpSpacing2, s2.bigOpSpacing4 - t4.below.height));
              let h2 = null;
              if (t4.below && t4.above) {
                let a4 = s2.bigOpSpacing5 + t4.below.height + t4.below.depth + p2 + l2.depth + d2;
                h2 = new gt({ bottom: a4, children: [s2.bigOpSpacing5, { box: t4.below, marginLeft: -c2, classes: ["ML__center"] }, p2, { box: l2, classes: ["ML__center"] }, u2, { box: t4.above, marginLeft: c2, classes: ["ML__center"] }, s2.bigOpSpacing5] }).wrap(e4);
              } else if (t4.below && !t4.above) h2 = new gt({ top: l2.height - d2, children: [s2.bigOpSpacing5, { box: t4.below, marginLeft: -c2, classes: ["ML__center"] }, p2, { box: l2, classes: ["ML__center"] }] }).wrap(e4);
              else if (!t4.below && t4.above) {
                let a4 = l2.depth + d2;
                h2 = new gt({ bottom: a4, children: [{ box: l2, classes: ["ML__center"] }, u2, { box: t4.above, marginLeft: c2, classes: ["ML__center"] }, s2.bigOpSpacing5] }).wrap(e4);
              } else {
                let t5 = l2.depth + d2;
                h2 = new gt({ bottom: t5, children: [{ box: l2 }, s2.bigOpSpacing5] }).wrap(e4);
              }
              return new dt(h2, { type: null != (n2 = t4.type) ? n2 : "mop" });
            }(e3, S(_({}, t3), { above: r2, below: i2, type: null != (a2 = null == t3 ? void 0 : t3.type) ? a2 : "mop" })) : t3.base.wrap(e3);
          }
          bind(e3, t3) {
            if (!t3 || e3.isPhantom || "​" === this.value) return t3;
            let a2 = this.parent;
            for (; a2 && !a2.captureSelection; ) a2 = a2.parent;
            return null != a2 && a2.captureSelection || (this.id || (this.id = e3.makeID()), t3.atomID = this.id), t3;
          }
          createMathfieldBox(e3, t3, a2) {
            let r2 = new Dt(a2, t3, { type: "mathfield", mode: this.mode, maxFontSize: e3.scalingFactor, style: S(_({ variant: "normal" }, this.style), { letterShapeStyle: e3.letterShapeStyle, fontSize: Math.max(1, e3.size + e3.mathstyle.sizeDelta) }), classes: "" });
            return e3.isTight && (r2.isTight = true), ("math" !== this.mode || "main" === this.style.variant) && (r2.italic = 0), r2.right = r2.italic, this.bind(e3, r2), ft(r2, { type: "mord" });
          }
          createBox(e3, t3) {
            var a2, r2, i2;
            let o2 = null != (a2 = this.value) ? a2 : this.body, n2 = (l2 = this.type, ot.includes(l2) ? this.type : void 0), s2 = null != (r2 = null == t3 ? void 0 : t3.classes) ? r2 : "";
            var l2;
            "text" === this.mode && (s2 += " ML__text");
            let d2 = "string" == typeof o2 || void 0 === o2 ? new dt(null != o2 ? o2 : null, { type: n2, mode: this.mode, maxFontSize: e3.scalingFactor, style: S(_({ variant: "normal" }, this.style), { letterShapeStyle: e3.letterShapeStyle, fontSize: Math.max(1, e3.size + e3.mathstyle.sizeDelta) }), classes: s2, newList: null == t3 ? void 0 : t3.newList }) : null != (i2 = Kt.createBox(e3, o2, { type: n2, mode: this.mode, style: this.style, classes: s2, newList: null == t3 ? void 0 : t3.newList })) ? i2 : new dt(null);
            return e3.isTight && (d2.isTight = true), ("math" !== this.mode || "main" === this.style.variant) && (d2.italic = 0), d2.right = d2.italic, this.bind(e3, d2), this.caret && !this.superscript && !this.subscript && (d2.caret = this.caret), d2;
          }
          isDigit() {
            var e3;
            return "mord" === this.type && this.value ? /^[\d,.]$/.test(this.value) : "group" === this.type && 2 === (null == (e3 = this.body) ? void 0 : e3.length) && "first" === this.body[0].type && "," === this.body[1].value;
          }
          asDigit() {
            var e3;
            return "mord" === this.type && this.value && /^[\d,.]$/.test(this.value) ? this.value : "group" === this.type && 2 === (null == (e3 = this.body) ? void 0 : e3.length) && "first" === this.body[0].type && "," === this.body[1].value ? "." : "";
          }
        }, Et = Kt;
        function $t(e3, t3) {
          if (!e3 || 0 === e3.length) return "";
          if ("first" === e3[0].type) {
            if (1 === e3.length) return "";
            e3 = e3.slice(1);
          }
          return 0 === e3.length ? "" : Ct(it(e3, "cssClass").map((e4) => Ct(it(e4, "color").map((e5) => Ct(function(e6) {
            let t4 = [], a2 = [], r2 = "NONE";
            for (let i2 of e6) "first" !== i2.type && (i2.mode !== r2 ? (a2.length > 0 && t4.push(a2), a2 = [i2], r2 = i2.mode) : a2.push(i2));
            return a2.length > 0 && t4.push(a2), t4;
          }(e5).map((e6) => rt.serialize(e6, t3)))))));
        }
        function qt(e3, t3, a2) {
          var r2, i2, o2, n2;
          function s2(e4) {
            return "text" === e4.mode;
          }
          if (!t3 || 0 === t3.length) return null;
          let l2, d2 = new Ye(e3, null == a2 ? void 0 : a2.style), c2 = !d2.atomIdsSettings || !d2.atomIdsSettings.groupNumbers, u2 = [], p2 = null != (r2 = null == a2 ? void 0 : a2.newList) && r2;
          if (1 === t3.length) {
            let e4 = t3[0], a3 = e4.render(d2, { newList: p2 });
            a3 && (c2 && e4.isSelected && a3.selected(true), u2 = [a3]);
          } else {
            let e4 = "", a3 = true;
            for (let r3 of t3) {
              null != (i2 = d2.atomIdsSettings) && i2.groupNumbers && e4 && (a3 && r3.isDigit() || !a3 && s2(r3)) && (d2.atomIdsSettings.overrideID = e4);
              let t4 = r3.render(d2, { newList: p2 });
              d2.atomIdsSettings && (d2.atomIdsSettings.overrideID = void 0), t4 && (p2 = "group" === r3.type && !r3.boxType, null != (o2 = d2.atomIdsSettings) && o2.groupNumbers && ((r3.isDigit() || s2(r3)) && (!e4 || a3 !== r3.isDigit()) && (a3 = r3.isDigit(), e4 = null != (n2 = r3.id) ? n2 : ""), e4 && (!(r3.isDigit() || s2(r3)) || !r3.hasEmptyBranch("superscript") || !r3.hasEmptyBranch("subscript")) && (e4 = "")), c2 && r3.isSelected && t4.selected(true), u2.push(t4));
            }
          }
          return 0 === u2.length ? null : (a2 || d2.isTight || u2.length > 1 ? (l2 = new dt(u2, _({ isTight: d2.isTight }, null != a2 ? a2 : {})), l2.isSelected = u2.every((e4) => e4.isSelected)) : l2 = u2[0], l2.wrap(d2).wrap(e3));
        }
        Et.customSerializer = {};
        var Ot = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("accent", a2, { command: e3, style: r2.style }), r2.accentChar ? this.accent = r2.accentChar : this.svgAccent = null == r2 ? void 0 : r2.svgAccent, this.body = t3, this.skipBoundary = true;
          }
          static fromJson(e3, t3) {
            return new Ot(e3.command, e3.body, t3, { accentChar: e3.accentChar, svgAccent: e3.svgAccent, style: e3.style });
          }
          toJson() {
            return S(_({}, super.toJson()), { accentChar: this.accent, svgAccent: this.svgAccent });
          }
          render(e3) {
            var t3;
            let a2 = new Ye(e3, this.style, "cramp"), r2 = null != (t3 = Et.createBox(a2, this.body)) ? t3 : new dt(null), i2 = 0;
            !this.hasEmptyBranch("body") && 2 === this.body.length && this.body[1].isCharacterBox() && (i2 = r2.skew);
            let o2, n2 = Math.min(r2.height, je);
            if (this.svgAccent) o2 = yt(this.svgAccent), n2 = a2.metrics.bigOpSpacing1 - n2;
            else if (this.accent) {
              let e4 = new dt(this.accent, { fontFamily: "Main-Regular" });
              e4.italic = 0;
              let t4 = 8407 === this.accent ? " ML__accent-vec" : "";
              o2 = new dt(new dt(e4), { classes: "ML__accent-body" + t4 });
            }
            o2 = new gt({ shift: 0, children: [{ box: new dt(r2) }, -n2, { box: o2, marginLeft: r2.left + 2 * i2, classes: ["ML__center"] }] });
            let s2 = new dt(o2, { newList: true, type: "mord" });
            return this.caret && (s2.caret = this.caret), this.bind(a2, s2.wrap(a2)), this.attachSupsub(a2, { base: s2 });
          }
        }, Pt = { "(": ")", "{": "}", "[": "]", "|": "|", "\\lbrace": "\\rbrace", "\\lparen": "\\rparen", "\\{": "\\}", "\\langle": "\\rangle", "\\lfloor": "\\rfloor", "\\lceil": "\\rceil", "\\vert": "\\vert", "\\lvert": "\\rvert", "\\Vert": "\\Vert", "\\lVert": "\\rVert", "\\lbrack": "\\rbrack", "\\ulcorner": "\\urcorner", "\\llcorner": "\\lrcorner", "\\lgroup": "\\rgroup", "\\lmoustache": "\\rmoustache" }, Nt = Object.fromEntries(Object.entries(Pt).map(([e3, t3]) => [t3, e3]));
        function Ft(e3) {
          var t3;
          return null != (t3 = { "[": 91, "]": 93, "(": 40, ")": 41, "\\mid": 8739, "|": 8739, "∣": 8739, "∥": 8741, "\\|": 8739, "\\{": 123, "\\}": 125, "\\lbrace": 123, "\\rbrace": 125, "\\lparen": 40, "\\rparen": 41, "\\lbrack": 91, "\\rbrack": 93, "\\vert": 8739, "\\lvert": 8739, "\\mvert": 8739, "\\rvert": 8739, "\\Vert": 8741, "\\lVert": 8741, "\\mVert": 8741, "\\rVert": 8741, "\\parallel": 8741, "\\shortparallel": 8741, "\\langle": 10216, "\\rangle": 10217, "\\lfloor": 8970, "\\rfloor": 8971, "\\lceil": 8968, "\\rceil": 8969, "\\ulcorner": 9484, "\\urcorner": 9488, "\\llcorner": 9492, "\\lrcorner": 9496, "\\lgroup": 10222, "\\rgroup": 10223, "\\lmoustache": 9136, "\\rmoustache": 9137, "\\surd": 8730 }[e3]) ? t3 : e3.codePointAt(0);
        }
        function Rt(e3, t3, a2, r2, i2) {
          let o2 = new Ye(r2, null == i2 ? void 0 : i2.style, "textstyle"), n2 = new dt(Ft(e3), { fontFamily: "Size" + t3 + "-Regular", classes: "ML__delim-size" + t3 }).wrap(o2);
          return a2 && n2.setTop((1 - o2.scalingFactor) * Ie), n2;
        }
        function It(e3, t3, a2, r2, i2) {
          var o2;
          let n2, s2, l2, d2;
          n2 = l2 = d2 = Ft(e3), s2 = null;
          let c2 = "Size1-Regular";
          "\\vert" === e3 || "\\lvert" === e3 || "\\rvert" === e3 || "\\mvert" === e3 || "\\mid" === e3 ? l2 = n2 = d2 = 8739 : "\\Vert" === e3 || "\\lVert" === e3 || "\\rVert" === e3 || "\\mVert" === e3 || "\\|" === e3 ? l2 = n2 = d2 = 8741 : "\\uparrow" === e3 ? l2 = d2 = 9168 : "\\Uparrow" === e3 ? l2 = d2 = 8214 : "\\downarrow" === e3 ? n2 = l2 = 9168 : "\\Downarrow" === e3 ? n2 = l2 = 8214 : "\\updownarrow" === e3 ? (n2 = 8593, l2 = 9168, d2 = 8595) : "\\Updownarrow" === e3 ? (n2 = 8657, l2 = 8214, d2 = 8659) : "[" === e3 || "\\lbrack" === e3 ? (n2 = 9121, l2 = 9122, d2 = 9123, c2 = "Size4-Regular") : "]" === e3 || "\\rbrack" === e3 ? (n2 = 9124, l2 = 9125, d2 = 9126, c2 = "Size4-Regular") : "\\lfloor" === e3 || "⌊" === e3 ? (l2 = n2 = 9122, d2 = 9123, c2 = "Size4-Regular") : "\\lceil" === e3 || "⌈" === e3 ? (n2 = 9121, l2 = d2 = 9122, c2 = "Size4-Regular") : "\\rfloor" === e3 || "⌋" === e3 ? (l2 = n2 = 9125, d2 = 9126, c2 = "Size4-Regular") : "\\rceil" === e3 || "⌉" === e3 ? (n2 = 9124, l2 = d2 = 9125, c2 = "Size4-Regular") : "(" === e3 || "\\lparen" === e3 ? (n2 = 9115, l2 = 9116, d2 = 9117, c2 = "Size4-Regular") : ")" === e3 || "\\rparen" === e3 ? (n2 = 9118, l2 = 9119, d2 = 9120, c2 = "Size4-Regular") : "\\{" === e3 || "\\lbrace" === e3 ? (n2 = 9127, s2 = 9128, d2 = 9129, l2 = 9130, c2 = "Size4-Regular") : "\\}" === e3 || "\\rbrace" === e3 ? (n2 = 9131, s2 = 9132, d2 = 9133, l2 = 9130, c2 = "Size4-Regular") : "\\lgroup" === e3 || "⟮" === e3 ? (n2 = 9127, d2 = 9129, l2 = 9130, c2 = "Size4-Regular") : "\\rgroup" === e3 || "⟯" === e3 ? (n2 = 9131, d2 = 9133, l2 = 9130, c2 = "Size4-Regular") : "\\lmoustache" === e3 || "⎰" === e3 ? (n2 = 9127, d2 = 9133, l2 = 9130, c2 = "Size4-Regular") : "\\rmoustache" === e3 || "⎱" === e3 ? (n2 = 9131, d2 = 9129, l2 = 9130, c2 = "Size4-Regular") : "\\surd" === e3 ? (n2 = 57345, d2 = 9143, l2 = 57344, c2 = "Size4-Regular") : "\\ulcorner" === e3 ? (n2 = 9484, l2 = d2 = 32) : "\\urcorner" === e3 ? (n2 = 9488, l2 = d2 = 32) : "\\llcorner" === e3 ? (d2 = 9492, l2 = n2 = 32) : "\\lrcorner" === e3 && (n2 = 9496, l2 = n2 = 32);
          let u2 = Xe(n2, c2), p2 = u2.height + u2.depth, h2 = Xe(l2, c2), m2 = h2.height + h2.depth, f2 = Xe(d2, c2), y2 = f2.height + f2.depth, b2 = 0, g2 = 1;
          if (null !== s2) {
            let e4 = Xe(s2, c2);
            b2 = e4.height + e4.depth, g2 = 2;
          }
          let v2 = p2 + y2 + b2, k2 = Math.max(0, Math.ceil((t3 - v2) / (g2 * m2))), x2 = v2 + k2 * g2 * m2, w2 = Ie;
          a2 && (w2 *= r2.scalingFactor);
          let M2 = x2 / 2 - w2, L2 = 8e-3, C2 = [];
          C2.push({ box: new dt(d2, { fontFamily: c2 }) }), C2.push(-L2);
          let A2 = new dt(l2, { fontFamily: c2 });
          if (null === s2) for (let e4 = 0; e4 < k2; e4++) C2.push({ box: A2 });
          else {
            for (let e4 = 0; e4 < k2; e4++) C2.push({ box: A2 });
            C2.push(-L2), C2.push({ box: new dt(s2, { fontFamily: c2 }) }), C2.push(-L2);
            for (let e4 = 0; e4 < k2; e4++) C2.push({ box: A2 });
          }
          C2.push(-L2), C2.push({ box: new dt(n2, { fontFamily: c2 }) });
          let D2 = "";
          "Size1-Regular" === c2 ? D2 = " delim-size1" : "Size4-Regular" === c2 && (D2 = " delim-size4");
          let T2 = new gt({ bottom: M2, children: C2 }, { classes: D2 });
          return new dt(T2, S(_({}, null != i2 ? i2 : {}), { classes: (null != (o2 = null == i2 ? void 0 : i2.classes) ? o2 : "") + " ML__delim-mult" }));
        }
        var jt = /* @__PURE__ */ new Set(["(", ")", "\\lparen", "\\rparen", "[", "]", "\\lbrack", "\\rbrack", "\\{", "\\}", "\\lbrace", "\\rbrace", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "\\surd", "⌊", "⌋", "⌈", "⌉"]), Vt = /* @__PURE__ */ new Set(["\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\mvert", "\\mid", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache", "⟮", "⟯", "⎰", "⎱"]), Ht = /* @__PURE__ */ new Set(["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"]), Wt = [0, 1.2, 1.8, 2.4, 3], Xt = [{ type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "scriptstyle" }, { type: "small", mathstyle: "textstyle" }, { type: "large", size: 1 }, { type: "large", size: 2 }, { type: "large", size: 3 }, { type: "large", size: 4 }], Ut = [{ type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "textstyle" }, { type: "stack" }], Jt = [{ type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "scriptstyle" }, { type: "small", mathstyle: "textstyle" }, { type: "large", size: 1 }, { type: "large", size: 2 }, { type: "large", size: 3 }, { type: "large", size: 4 }, { type: "stack" }];
        function Gt(e3) {
          return "small" === e3.type ? "Main-Regular" : "large" === e3.type ? "Size" + e3.size + "-Regular" : "Size4-Regular";
        }
        function Zt(e3, t3, a2, r2, i2, o2) {
          var n2;
          if (!t3 || 0 === t3.length || "." === t3) return Qt(i2, e3, e3);
          let s2;
          "<" === t3 || "\\lt" === t3 ? t3 = "\\langle" : (">" === t3 || "\\gt" === t3) && (t3 = "\\rangle"), s2 = Ht.has(t3) ? Xt : jt.has(t3) ? Jt : Ut;
          let l2 = function(e4, t4, a3, r3) {
            for (let i3 = { "-4": 0, "-3": 1, 0: 2 }[r3.mathstyle.sizeDelta]; i3 < a3.length && "stack" !== a3[i3].type; i3++) {
              let o3 = Xe(e4, Gt(a3[i3]));
              if (o3.defaultMetrics) return { type: "small", mathstyle: "scriptstyle" };
              let n3 = o3.height + o3.depth;
              if ("small" === a3[i3].type && ("scriptscriptstyle" === a3[i3].mathstyle ? n3 *= He[Math.max(1, r3.size - 2)] : "scriptstyle" === a3[i3].mathstyle && (n3 *= He[Math.max(1, r3.size - 1)])), n3 > t4) return a3[i3];
            }
            return a3[a3.length - 1];
          }(Ft(t3), a2, s2, i2), d2 = new Ye(i2, null == o2 ? void 0 : o2.style, l2.mathstyle);
          return "small" === l2.type ? function(e4, t4, a3, r3) {
            let i3 = new dt(Ft(e4), { fontFamily: "Main-Regular" }).wrap(t4, r3);
            return a3 && i3.setTop((1 - t4.scalingFactor) * Ie), i3;
          }(t3, d2, r2, { type: e3, classes: "ML__small-delim " + (null != (n2 = null == o2 ? void 0 : o2.classes) ? n2 : "") }) : "large" === l2.type ? Rt(t3, l2.size, r2, d2, S(_({}, o2), { type: e3 })) : It(t3, a2, r2, d2, S(_({}, o2), { type: e3 }));
        }
        function Yt(e3, t3, a2, r2, i2, o2) {
          if ("." === t3) return Qt(i2, e3, null == o2 ? void 0 : o2.classes);
          let n2 = Ie * i2.scalingFactor, s2 = Math.max(a2 - n2, r2 + n2);
          return Zt(e3, t3, Math.max(s2 / 500 * 901, 2 * s2 - 0.5), true, i2, o2);
        }
        function Qt(e3, t3, a2) {
          let r2 = new Ye(e3, void 0, "textstyle");
          return new dt(null, { classes: " nulldelimiter " + (null != a2 ? a2 : ""), type: t3 }).wrap(r2);
        }
        var ea = class extends Et {
          constructor(e3, t3, a2) {
            var r2, i2, o2, n2;
            super("overunder", t3, { command: e3, serialize: a2.serialize, style: a2.style }), this.skipBoundary = null == (r2 = a2.skipBoundary) || r2, this.subsupPlacement = a2.supsubPlacement, this.body = a2.body, this.svgAbove = a2.svgAbove, this.svgBelow = a2.svgBelow, this.svgBody = a2.svgBody, this.above = a2.above, this.below = a2.below, this.boxType = null != (i2 = a2.boxType) ? i2 : "mord", this.paddedBody = null != (o2 = a2.paddedBody) && o2, this.paddedLabels = null != (n2 = a2.paddedLabels) && n2;
          }
          static fromJson(e3, t3) {
            return new ea(e3.command, t3, e3);
          }
          toJson() {
            let e3 = {};
            return this.skipBoundary || (e3.skipBoundary = false), this.subsupPlacement && (e3.subsupPlacement = this.subsupPlacement), this.svgAbove && (e3.svgAbove = this.svgAbove), this.svgBelow && (e3.svgBelow = this.svgBelow), this.svgBody && (e3.svgBody = this.svgBody), "mord" !== this.boxType && (e3.boxType = this.boxType), this.paddedBody && (e3.paddedBody = true), this.paddedLabels && (e3.paddedLabels = true), _(_({}, super.toJson()), e3);
          }
          render(e3) {
            let t3 = this.svgBody ? yt(this.svgBody) : Et.createBox(e3, this.body, { newList: true }), a2 = new Ye(e3, this.style, "scriptstyle"), r2 = null;
            this.svgAbove ? r2 = yt(this.svgAbove) : this.above && (r2 = Et.createBox(a2, this.above, { newList: true }));
            let i2 = null;
            this.svgBelow ? i2 = yt(this.svgBelow) : this.below && (i2 = Et.createBox(a2, this.below, { newList: true })), this.paddedBody && (t3 = new dt([Qt(e3, "mopen"), t3, Qt(e3, "mclose")], { newList: true }));
            let o2 = function(e4, t4) {
              if (!t4.base) return null;
              if (!t4.above && !t4.below) {
                let e5 = new dt(t4.base, { type: t4.type });
                return e5.setStyle("position", "relative"), e5;
              }
              let a3 = 0;
              t4.above && (a3 = -t4.above.depth + e4.metrics.bigOpSpacing2);
              let r3 = null, i3 = t4.base, o3 = ["ML__center"];
              if (t4.paddedAboveBelow && o3.push("ML__label_padding"), t4.below && t4.above) {
                let n2 = e4.metrics.bigOpSpacing5 + t4.below.height + t4.below.depth + i3.depth + 0;
                r3 = new gt({ bottom: n2, children: [e4.metrics.bigOpSpacing5, { box: t4.below, classes: o3 }, { box: i3, classes: ["ML__center"] }, a3, { box: t4.above, classes: o3 }, e4.metrics.bigOpSpacing5] });
              } else t4.below ? r3 = new gt({ top: i3.height - 0, children: [e4.metrics.bigOpSpacing5, { box: t4.below, classes: o3 }, { box: i3, classes: ["ML__center"] }] }) : t4.above && (r3 = new gt({ bottom: i3.depth + 0, children: [{ box: i3, classes: ["ML__center"] }, a3, { box: t4.above, classes: o3 }, e4.metrics.bigOpSpacing5] }));
              return new dt(r3, { type: t4.type });
            }(e3, { base: t3, above: r2, below: i2, type: "mbin" === this.boxType || "mrel" === this.boxType ? this.boxType : "mord", paddedAboveBelow: this.paddedLabels });
            return o2 ? (o2 = "over-under" === this.subsupPlacement ? this.attachLimits(e3, { base: o2, type: o2.type }) : this.attachSupsub(e3, { base: o2 }), this.caret && (o2.caret = this.caret), this.bind(e3, o2)) : null;
          }
        }, ta = class extends Et {
          constructor(e3, t3, a2) {
            var r2, i2, o2;
            super("group", t3, { command: null == a2 ? void 0 : a2.command, mode: null != (r2 = null == a2 ? void 0 : a2.mode) ? r2 : "math", serialize: null == a2 ? void 0 : a2.serialize, style: null == a2 ? void 0 : a2.style }), this.body = e3, this.mathstyleName = null == a2 ? void 0 : a2.mathstyleName, this.latexOpen = null == a2 ? void 0 : a2.latexOpen, this.latexClose = null == a2 ? void 0 : a2.latexClose, this.cssId = null == a2 ? void 0 : a2.cssId, this.htmlData = null == a2 ? void 0 : a2.htmlData, this.htmlStyle = null == a2 ? void 0 : a2.htmlStyle, this.customClass = null == a2 ? void 0 : a2.customClass, this.boxType = null == a2 ? void 0 : a2.boxType, this.skipBoundary = true, this.captureSelection = null != (i2 = null == a2 ? void 0 : a2.captureSelection) && i2, this.changeMode = null != (o2 = null == a2 ? void 0 : a2.changeMode) && o2, this.displayContainsHighlight = false, e3 && 1 === e3.length && "," === e3[0].command && (this.captureSelection = true);
          }
          static fromJson(e3, t3) {
            return new ta(e3.body, t3, e3);
          }
          toJson() {
            let e3 = {};
            return this.mathstyleName && (e3.mathstyleName = this.mathstyleName), this.latexOpen && (e3.latexOpen = this.latexOpen), this.latexClose && (e3.latexClose = this.latexClose), this.cssId && (e3.cssId = this.cssId), this.htmlData && (e3.htmlData = this.htmlData), this.htmlStyle && (e3.htmlStyle = this.htmlStyle), this.customClass && (e3.customClass = this.customClass), this.boxType && (e3.boxType = this.boxType), this.captureSelection && (e3.captureSelection = true), this.changeMode && (e3.changeMode = true), _(_({}, super.toJson()), e3);
          }
          render(e3) {
            let t3 = new Ye(e3, this.style, this.mathstyleName), a2 = Et.createBox(t3, this.body, { type: this.boxType, classes: this.customClass, mode: this.mode, style: { backgroundColor: this.style.backgroundColor }, newList: !this.boxType });
            return a2 ? (this.cssId && (a2.cssId = this.cssId), this.htmlData && (a2.htmlData = this.htmlData), this.htmlStyle && (a2.htmlStyle = this.htmlStyle), this.caret && (a2.caret = this.caret), this.bind(e3, a2)) : null;
          }
          serialize(e3) {
            let t3 = this.bodyToLatex(e3);
            return "string" == typeof this.latexOpen && (t3 = this.latexOpen + t3 + this.latexClose), this.htmlData && (t3 = `\\htmlData{${this.htmlData}}{${t3}}`), this.htmlStyle && (t3 = `\\htmlStyle{${this.htmlStyle}}{${t3}}`), this.customClass && (t3 = `\\class{${this.customClass}}{${t3}}`), this.cssId && (t3 = `\\cssId{${this.cssId}}{${t3}}`), t3;
          }
        }, aa = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("spacing", a2, { command: e3, style: t3 }), this.width = r2;
          }
          static fromJson(e3, t3) {
            return new aa(e3.command, e3.style, t3, e3.width);
          }
          toJson() {
            let e3 = {};
            return this.width && (e3.width = this.width), _(_({}, super.toJson()), e3);
          }
          render(e3) {
            var t3;
            let a2;
            if (this.width) a2 = new dt(null, { classes: "mspace" }), a2.left = Ge(this.width.glue);
            else {
              let e4 = null != (t3 = { "\\qquad": "qquad", "\\quad": "quad", "\\enspace": "enspace", "\\;": "thickspace", "\\:": "mediumspace", "\\,": "thinspace", "\\!": "negativethinspace" }[this.command]) ? t3 : "mediumspace";
              a2 = new dt(null, { classes: e4 });
            }
            return a2 = this.bind(e3, a2), this.caret && (a2.caret = this.caret), a2;
          }
          serialize(e3) {
            var t3;
            let a2 = null != (t3 = this.command) ? t3 : "";
            return "\\hspace" === this.command || "\\hspace*" === this.command ? Number.isFinite(this.width) ? a2 += `{${this.width}em'}` : a2 += "{0pt}" : Number.isFinite(this.width) && (a2 += ` ${this.width}em`), a2;
          }
        }, ra = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("leftright", a2, { style: r2.style, displayContainsHighlight: true }), this.variant = e3, this.body = t3, this.leftDelim = r2.leftDelim, this.rightDelim = r2.rightDelim;
          }
          static fromJson(e3, t3) {
            var a2;
            return new ra(null != (a2 = e3.variant) ? a2 : "", e3.body, t3, e3);
          }
          toJson() {
            let e3 = super.toJson();
            return this.variant && (e3.variant = this.variant), this.leftDelim && (e3.leftDelim = this.leftDelim), this.rightDelim && (e3.rightDelim = this.rightDelim), e3;
          }
          serialize(e3) {
            var t3, a2;
            let r2 = this.matchingRightDelim();
            return "left...right" === this.variant ? Ct(["\\left" + (null != (t3 = this.leftDelim) ? t3 : "."), this.bodyToLatex(e3), "\\right" + r2]) : "mleft...mright" === this.variant ? Ct(["\\mleft" + (null != (a2 = this.leftDelim) ? a2 : "."), this.bodyToLatex(e3), "\\mright" + r2]) : Ct([this.leftDelim && "." !== this.leftDelim ? this.leftDelim : "", this.bodyToLatex(e3), r2]);
          }
          matchingRightDelim() {
            var e3, t3;
            if (this.rightDelim && "?" !== this.rightDelim) return this.rightDelim;
            let a2 = null != (e3 = this.leftDelim) ? e3 : ".";
            return null != (t3 = Pt[a2]) ? t3 : a2;
          }
          render(e3) {
            var t3, a2, r2;
            let i2 = new Ye(e3, this.style), o2 = new Ye(e3, this.style, "textstyle"), n2 = null != (t3 = Et.createBox(i2, this.body, { newList: true })) ? t3 : new dt(null, { newList: true }), s2 = n2.height / o2.scalingFactor, l2 = n2.depth / o2.scalingFactor, d2 = [];
            if (this.leftDelim && d2.push(this.bind(o2, Yt("mopen", this.leftDelim, s2, l2, o2, { classes: "ML__open" + (this.containsCaret ? " ML__contains-caret" : ""), mode: this.mode, style: this.style }))), n2) {
              if (n2.children) for (let e4 = 0; e4 < n2.children.length; e4++) {
                let t4 = n2.children[e4];
                if (t4.delim) {
                  let a3 = t4.caret;
                  n2.children[e4] = this.bind(i2, Yt("minner", t4.delim, s2, l2, i2)), n2.children[e4].caret = a3;
                }
              }
              d2.push(n2);
            }
            if (this.rightDelim) {
              let e4 = this.containsCaret ? " ML__contains-caret" : "", t4 = this.rightDelim;
              "?" === t4 && (this.context.smartFence ? (t4 = this.matchingRightDelim(), e4 += " ML__smart-fence__close") : t4 = "."), d2.push(this.bind(o2, Yt("mclose", t4, s2, l2, o2, { classes: e4 + " ML__close", mode: this.mode, style: this.style })));
            }
            let c2 = null != (r2 = "mleft...mright" === this.variant || (null == (a2 = this.leftSibling) ? void 0 : a2.isFunction)) && r2, u2 = new dt(d2, { type: c2 ? "mclose" : "minner", classes: "left-right" });
            return this.caret && (u2.caret = this.caret), this.bind(i2, u2.wrap(i2));
          }
        }, ia = class extends Et {
          constructor(e3, t3) {
            super("msubsup", e3, { style: null == t3 ? void 0 : t3.style });
          }
          static fromJson(e3, t3) {
            let a2 = new ia(t3, e3);
            for (let t4 of Tt) e3[t4] && a2.setChildren(e3[t4], t4);
            return a2;
          }
          toJson() {
            return super.toJson();
          }
          render(e3) {
            var t3;
            let a2 = this.leftSibling, r2 = new Ye(e3, { isPhantom: true }), i2 = null != (t3 = a2.render(r2)) ? t3 : new dt(null), o2 = new dt(null, { height: i2.height, depth: i2.depth });
            return this.attachSupsub(e3, { base: o2, isCharacterBox: a2.isCharacterBox(), type: "supsub" });
          }
          serialize(e3) {
            return this.supsubToLatex(e3);
          }
        }, oa = class extends Et {
          constructor(e3, t3) {
            var a2;
            let r2 = (null == t3 ? void 0 : t3.value) || e3.placeholderSymbol;
            super("placeholder", e3, { mode: null != (a2 = null == t3 ? void 0 : t3.mode) ? a2 : "math", style: null == t3 ? void 0 : t3.style, value: r2, command: "\\placeholder" }), this.captureSelection = true, this.placeholderId = null == t3 ? void 0 : t3.placeholderId, null != t3 && t3.default && (this.defaultValue = null == t3 ? void 0 : t3.default);
          }
          static fromJson(e3, t3) {
            return new oa(t3, e3);
          }
          toJson() {
            let e3 = super.toJson();
            return this.placeholderId && (e3.placeholderId = this.placeholderId), this.value === this.context.placeholderSymbol && delete e3.value, this.defaultValue && (e3.defaultValue = this.defaultValue.map((e4) => e4.toJson())), e3;
          }
          render(e3) {
            if ("function" == typeof e3.renderPlaceholder) return e3.renderPlaceholder(e3, this);
            let t3 = "";
            return this.caret && (t3 += "ML__placeholder-selected "), this.isSelected && (t3 += " ML__selected "), this.createBox(e3, { classes: t3 });
          }
          serialize(e3) {
            var t3;
            let a2 = null != (t3 = this.value) ? t3 : "";
            return a2 === this.context.placeholderSymbol && (a2 = ""), `\\placeholder${this.placeholderId ? `[${this.placeholderId}]` : ""}${this.defaultValue ? `[${Et.serialize(this.defaultValue, e3)}]` : ""}{${a2}}`;
          }
        }, na = class extends Et {
          constructor(e3, t3) {
            super("error", t3, { value: e3, command: e3, mode: "math" }), this.verbatimLatex = e3;
          }
          static fromJson(e3, t3) {
            return new na(e3.command, t3);
          }
          toJson() {
            return super.toJson();
          }
          render(e3) {
            let t3 = this.createBox(e3, { classes: "ML__error" });
            return this.caret && (t3.caret = this.caret), t3;
          }
        }, sa = class extends Et {
          constructor(e3, t3, a2) {
            var r2, i2;
            super("macro", t3, { command: e3 }), this.body = a2.body, void 0 === a2.captureSelection ? a2.args ? this.captureSelection = false : this.captureSelection = true : this.captureSelection = a2.captureSelection, this.macroArgs = null != (r2 = a2.args) ? r2 : "", this.expand = null != (i2 = a2.expand) && i2;
          }
          static fromJson(e3, t3) {
            return new sa(e3.command, t3, e3);
          }
          toJson() {
            let e3 = super.toJson();
            return this.expand && (e3.expand = true), void 0 !== this.captureSelection && (e3.captureSelection = this.captureSelection), this.macroArgs && (e3.args = this.macroArgs), e3;
          }
          serialize(e3) {
            return e3.expandMacro && this.expand ? this.bodyToLatex(e3) : this.command + this.macroArgs;
          }
          render(e3) {
            let t3 = Et.createBox(e3, this.body);
            return t3 ? (this.caret && (t3.caret = this.caret), this.bind(e3, t3)) : null;
          }
        }, la = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("text", r2, { command: e3, mode: "text", displayContainsHighlight: true }), this.value = t3, this.verbatimLatex = t3, this.applyStyle(a2);
          }
          static fromJson(e3, t3) {
            return new la(e3.command, e3.value, e3.style, t3);
          }
          toJson() {
            return super.toJson();
          }
          render(e3) {
            let t3 = this.createBox(e3);
            return this.caret && (t3.caret = this.caret), t3;
          }
          serialize(e3) {
            var t3;
            return null != (t3 = this.verbatimLatex) ? t3 : re("text", this.value.codePointAt(0));
          }
        };
        function da(e3) {
          return !/^<({|}|\$|\$\$|space)>$/.test(e3);
        }
        var ca = class {
          constructor(e3, t3, a2) {
            var r2, i2, o2, n2, s2, l2;
            this.index = 0, this.endCount = 0, this.tokens = e3, this.context = t3, this.errors = [], this.args = null != (r2 = a2.args) ? r2 : null, this.smartFence = null != (i2 = a2.smartFence) ? i2 : t3.smartFence, this._currentParsingContext = { parent: void 0, mathlist: [], style: null != (o2 = a2.style) ? o2 : {}, parseMode: null != (n2 = a2.parseMode) ? n2 : "math", mathstyle: null != (s2 = a2.mathstyle) ? s2 : "displaystyle", registers: null != (l2 = a2.registers) ? l2 : t3.registers, tabular: false };
          }
          get currentContext() {
            return this._currentParsingContext;
          }
          get rootContext() {
            let e3 = this._currentParsingContext;
            for (; e3.parent; ) e3 = e3.parent;
            return e3;
          }
          beginContext(e3) {
            var t3, a2, r2;
            let i2 = { parent: this.currentContext, mathlist: [], style: _({}, this.currentContext.style), parseMode: null != (t3 = null == e3 ? void 0 : e3.mode) ? t3 : this.currentContext.parseMode, mathstyle: null != (a2 = null == e3 ? void 0 : e3.mathstyle) ? a2 : this.currentContext.mathstyle, registers: null, tabular: null != (r2 = null == e3 ? void 0 : e3.tabular) && r2 };
            this._currentParsingContext = i2;
          }
          endContext() {
            this._currentParsingContext = this._currentParsingContext.parent;
          }
          onError(e3) {
            this.errors.push(_({ before: At(this.tokens.slice(this.index, this.index + 10)), after: At(this.tokens.slice(Math.max(0, this.index - 10), this.index)) }, e3));
          }
          get mathlist() {
            return this.currentContext.mathlist;
          }
          set mathlist(e3) {
            this.currentContext.mathlist = e3;
          }
          get parseMode() {
            return this.currentContext.parseMode;
          }
          set parseMode(e3) {
            this.currentContext.parseMode = e3;
          }
          get tabularMode() {
            return this.currentContext.tabular;
          }
          get style() {
            let e3 = this.currentContext;
            for (; e3; ) {
              if (e3.style) return e3.style;
              e3 = e3.parent;
            }
            return {};
          }
          set style(e3) {
            this.currentContext.style = e3;
          }
          getRegister(e3) {
            var t3, a2, r2;
            if (e3.startsWith("global ")) return null != (a2 = null == (t3 = this.rootContext.registers) ? void 0 : t3[e3.slice(7)]) ? a2 : 0;
            let i2 = this.currentContext;
            for (; i2; ) {
              if (null != (r2 = i2.registers) && r2[e3]) return i2.registers[e3];
              i2 = i2.parent;
            }
            return 0;
          }
          setRegister(e3, t3) {
            var a2;
            if (e3.startsWith("global ")) {
              e3 = e3.slice(7);
              let r2 = this.currentContext;
              for (; r2; ) null != (a2 = r2.registers) && a2[e3] && delete r2.registers[e3], r2 = r2.parent;
              this.rootContext.registers[e3] = t3;
            } else this.currentContext.registers || (this.currentContext.registers = {}), this.currentContext.registers[e3] = t3;
          }
          end() {
            return this.endCount++, this.index >= this.tokens.length || this.endCount > 1e3;
          }
          get() {
            return this.endCount = 0, this.index < this.tokens.length ? this.tokens[this.index++] : "";
          }
          peek() {
            return this.tokens[this.index];
          }
          match(e3) {
            return this.tokens[this.index] === e3 && (this.index++, true);
          }
          lastSubsupAtom() {
            let e3;
            return this.mathlist.length > 0 && (e3 = this.mathlist[this.mathlist.length - 1], "msubsup" === e3.type || void 0 !== e3.subsupPlacement) || (e3 = new ia(this.context, { style: this.style }), this.mathlist.push(e3)), e3;
          }
          hasPattern(e3) {
            return e3.test(this.tokens[this.index]);
          }
          hasInfixCommand() {
            var e3;
            let { index: t3 } = this;
            if (t3 < this.tokens.length && this.tokens[t3].startsWith("\\")) {
              let a2 = this.context.getDefinition(this.tokens[t3], this.parseMode);
              return !(!a2 || "symbol" === a2.definitionType || a2.ifMode && !a2.ifMode.includes(this.parseMode)) && null != (e3 = a2.infix) && e3;
            }
            return false;
          }
          matchColumnSeparator() {
            let { index: e3 } = this;
            return !(!this.tabularMode || "&" !== this.tokens[e3] || (this.index++, 0));
          }
          matchRowSeparator() {
            let { index: e3 } = this;
            return !(!this.tabularMode || "\\\\" !== this.tokens[e3] && "\\cr" !== this.tokens[e3] || (this.index++, 0));
          }
          placeholder() {
            var e3;
            let t3 = null == (e3 = this.args) ? void 0 : e3.call(this, "?");
            return t3 ? ua(t3, this.context, { parseMode: this.parseMode, mathstyle: "textstyle" }) : [new oa(this.context, { mode: this.parseMode, style: this.style })];
          }
          matchWhitespace() {
            let e3 = false;
            for (; this.match("<space>"); ) e3 = true;
            return e3;
          }
          skipUntilToken(e3) {
            let t3 = this.tokens[this.index];
            for (; t3 && t3 !== e3; ) t3 = this.tokens[++this.index];
            t3 === e3 && this.index++;
          }
          skipFiller() {
            let e3 = false;
            do {
              let t3 = this.matchWhitespace(), a2 = this.match("\\relax");
              e3 = !t3 && !a2;
            } while (!e3);
          }
          matchKeyword(e3) {
            let t3 = this.index, a2 = this.end(), r2 = "";
            for (; !a2; ) {
              let t4 = this.get();
              da(t4) ? (r2 += t4, a2 = this.end() || r2.length >= e3.length) : a2 = true;
            }
            let i2 = e3.toUpperCase() === r2.toUpperCase();
            return i2 || (this.index = t3), i2;
          }
          scanString() {
            let e3 = "";
            for (; !this.end(); ) if (this.match("<space>")) e3 += " ";
            else {
              let t3 = this.peek();
              if ("]" === t3) break;
              if (da(t3)) e3 += this.get();
              else {
                if (!t3.startsWith("\\")) break;
                this.onError({ code: "unbalanced-braces" }), e3 += this.get();
              }
            }
            return e3;
          }
          scanBalancedString() {
            let e3 = "", t3 = this.end(), a2 = 1;
            for (; !t3; ) {
              if (this.match("<space>")) e3 += " ";
              else {
                let t4 = this.get();
                "<{>" === t4 ? (e3 += "{", a2 += 1) : "<}>" === t4 ? (a2 -= 1, a2 > 0 ? e3 += "}" : this.index -= 1) : e3 += "<$>" === t4 ? "$" : "<$$>" === t4 ? "$$" : t4;
              }
              t3 = 0 === a2 || this.end();
            }
            return e3;
          }
          matchLiteralArg() {
            var e3;
            let t3 = "";
            if (this.match("<{>")) {
              let a2 = 1;
              for (; a2 > 0 && !this.end(); ) {
                let r2 = this.get();
                "<}>" === r2 ? (a2 -= 1, a2 > 0 && (t3 += "}")) : "<{>" === r2 ? (a2 += 1, t3 += "{") : t3 += null != (e3 = { "<space>": " ", "<$$>": "$$", "<$>": "$" }[r2]) ? e3 : r2;
              }
            }
            return t3;
          }
          scanNumber(e3 = true) {
            var t3, a2;
            let r2 = false, i2 = this.peek();
            for (; "<space>" === i2 || "+" === i2 || "-" === i2; ) this.get(), "-" === i2 && (r2 = !r2), i2 = this.peek();
            e3 = Boolean(e3);
            let o2 = 10, n2 = /\d/;
            if (this.match("'")) o2 = 8, n2 = /[0-7]/, e3 = true;
            else if (this.match('"') || this.match("x")) o2 = 16, n2 = /[\dA-F]/, e3 = true;
            else if (this.match("`")) return i2 = this.get(), i2 ? i2.startsWith("\\") && 2 === i2.length ? (r2 ? -1 : 1) * (null != (t3 = i2.codePointAt(1)) ? t3 : 0) : (r2 ? -1 : 1) * (null != (a2 = i2.codePointAt(0)) ? a2 : 0) : null;
            let s2 = "";
            for (; this.hasPattern(n2); ) s2 += this.get();
            if (!e3 && (this.match(".") || this.match(","))) for (s2 += "."; this.hasPattern(n2); ) s2 += this.get();
            let l2 = e3 ? Number.parseInt(s2, o2) : Number.parseFloat(s2);
            return Number.isNaN(l2) ? null : r2 ? -l2 : l2;
          }
          scanDimen() {
            var e3, t3, a2;
            let r2, i2 = this.scanNumber(false);
            if (null === i2) {
              if (null == (e3 = this.peek()) || !e3.startsWith("\\")) return null;
              i2 = 1;
            }
            return this.matchWhitespace(), this.matchKeyword("pt") ? r2 = { dimension: i2, unit: "pt" } : this.matchKeyword("mm") ? r2 = { dimension: i2, unit: "mm" } : this.matchKeyword("cm") ? r2 = { dimension: i2, unit: "cm" } : this.matchKeyword("ex") ? r2 = { dimension: i2, unit: "ex" } : this.matchKeyword("px") ? r2 = { dimension: i2, unit: "px" } : this.matchKeyword("em") ? r2 = { dimension: i2, unit: "em" } : this.matchKeyword("bp") ? r2 = { dimension: i2, unit: "bp" } : this.matchKeyword("dd") ? r2 = { dimension: i2, unit: "dd" } : this.matchKeyword("pc") ? r2 = { dimension: i2, unit: "pc" } : this.matchKeyword("in") ? r2 = { dimension: i2, unit: "in" } : this.matchKeyword("mu") ? r2 = { dimension: i2, unit: "mu" } : null != (t3 = this.peek()) && t3.startsWith("\\") ? (r2 = null != (a2 = ha(this.getRegister(this.get().slice(1)), this.context)) ? a2 : { dimension: 0 }, r2.dimension *= i2) : (this.match("\\relax") || this.onError({ code: "missing-unit" }), r2 = { dimension: i2, unit: "pt" }), r2;
          }
          scanGlue() {
            let e3 = this.scanDimen();
            if (null === e3) return null;
            let t3 = { glue: e3 };
            return this.matchWhitespace(), this.match("\\relax") || (this.matchKeyword("plus") && this.scanDimen(), this.matchWhitespace(), this.match("\\relax")) || (this.matchWhitespace(), this.matchKeyword("minus") && this.scanDimen()), t3;
          }
          scanColspec() {
            this.matchWhitespace();
            let e3 = [];
            for (; !this.end() && "<}>" !== this.peek() && "]" !== this.peek(); ) {
              let t3 = this.get();
              "c" === t3 || "r" === t3 || "l" === t3 ? e3.push({ align: t3 }) : "|" === t3 ? e3.push({ separator: "solid" }) : ":" === t3 ? e3.push({ separator: "dashed" }) : "@" === t3 && (this.match("<{>") && (this.beginContext({ mode: "math" }), e3.push({ gap: this.parse((e4) => "<}>" === e4) }), this.endContext()), this.match("<}>") || this.onError({ code: "unbalanced-braces" }));
            }
            return e3;
          }
          parseModeSet() {
            let e3 = "";
            if (this.match("\\(") && (e3 = "\\)"), !e3 && this.match("\\[") && (e3 = "\\]"), !e3) return null;
            this.beginContext({ mode: "math", mathstyle: "\\)" === e3 ? "textstyle" : "displaystyle" });
            let t3 = new ta(this.parse((t4) => t4 === e3), this.context, { mathstyleName: "\\)" === e3 ? "textstyle" : "displaystyle", latexOpen: "\\]" === e3 ? "\\[" : "\\(", latexClose: e3, boxType: "mord" });
            return this.match(e3) || this.onError({ code: "unbalanced-mode-shift" }), this.endContext(), t3.hasEmptyBranch("body") ? null : t3;
          }
          parseModeShift() {
            let e3 = "";
            if (this.match("<$>") && (e3 = "<$>"), !e3 && this.match("<$$>") && (e3 = "<$$>"), !e3) return null;
            this.beginContext({ mode: "math", mathstyle: "textstyle" });
            let t3 = new ta(this.parse((t4) => t4 === e3), this.context, { mathstyleName: "<$>" === e3 ? "textstyle" : "displaystyle", latexOpen: "<$>" === e3 ? "$ " : "$$ ", latexClose: "<$>" === e3 ? " $" : " $$" });
            return this.match(e3) || this.onError({ code: "unbalanced-mode-shift" }), this.endContext(), t3.hasEmptyBranch("body") ? null : t3;
          }
          parseEnvironment() {
            if (!this.match("\\begin")) return null;
            let e3 = this.parseArgument("string");
            if (!e3) return null;
            let t3 = function(e4) {
              var t4;
              return null != (t4 = U[e4]) ? t4 : null;
            }(e3);
            if (!t3) return this.onError({ code: "unknown-environment", arg: e3 }), null;
            let a2 = [];
            if (t3.params) for (let r3 of t3.params) if (r3.isOptional) a2.push(this.parseOptionalArgument(r3.type));
            else {
              let t4 = this.parseArgument(r3.type);
              t4 || this.onError({ code: "missing-argument", arg: e3 }), a2.push(t4);
            }
            this.beginContext({ tabular: t3.tabular });
            let r2 = [], i2 = [], o2 = [], n2 = false;
            do {
              if (this.end() && (this.onError({ code: "unbalanced-environment", arg: e3 }), n2 = true), !n2 && this.match("\\end") && (this.parseArgument("string") !== e3 && this.onError({ code: "unbalanced-environment", arg: e3 }), n2 = true), !n2) if (this.matchColumnSeparator()) o2.push(this.mathlist), this.mathlist = [];
              else if (this.matchRowSeparator()) {
                o2.push(this.mathlist), this.mathlist = [];
                let e4 = null;
                this.matchWhitespace(), this.match("[") && (e4 = this.scanDimen(), this.matchWhitespace(), this.match("]")), i2.push(null != e4 ? e4 : { dimension: 0 }), r2.push(o2), o2 = [];
              } else this.mathlist.push(...this.parse((e4) => "<}>" === e4 || "&" === e4 || "\\end" === e4 || "\\cr" === e4 || "\\\\" === e4));
            } while (!n2);
            return o2.push(this.mathlist), o2.length > 0 && r2.push(o2), this.endContext(), t3.createAtom(this.context, e3, r2, i2, a2);
          }
          parse(e3) {
            this.beginContext(), e3 || (e3 = (e4) => "<}>" === e4);
            let t3, a2 = "", r2 = null, i2 = [], o2 = null, n2 = this.mathlist;
            for (this.mathlist = []; !this.end() && !e3(this.peek()); ) this.hasInfixCommand() && !a2 ? (a2 = this.get(), r2 = this.context.getDefinition(a2, "math"), r2 && (i2 = this.parseArguments(r2)[1]), o2 = this.mathlist, this.mathlist = []) : this.parseToken();
            return a2 ? (i2.unshift(this.mathlist), this.mathlist = n2, o2 && i2.unshift(o2), t3 = [r2.createAtom(a2, i2, this.style, this.context)]) : (t3 = this.mathlist, this.mathlist = n2), this.endContext(), t3;
          }
          parseGroup() {
            if (!this.match("<{>")) return null;
            let e3 = new ta(this.parse((e4) => "<}>" === e4), this.context, { mode: this.parseMode, latexOpen: "{", latexClose: "}" });
            return this.match("<}>") || this.onError({ code: "unbalanced-braces" }), e3;
          }
          scanSmartFence() {
            if (this.matchWhitespace(), !this.match("(")) return null;
            this.beginContext();
            let e3 = 1;
            for (; !this.end() && 0 !== e3; ) this.match("(") && (e3 += 1), this.match(")") && (e3 -= 1), 0 !== e3 && this.parseToken();
            0 === e3 && this.match(")");
            let t3 = new ra("", this.mathlist, this.context, { leftDelim: "(", rightDelim: 0 === e3 ? ")" : "?" });
            return this.endContext(), t3;
          }
          scanDelim() {
            this.matchWhitespace();
            let e3 = this.get();
            if (!e3) return this.onError({ code: "unexpected-end-of-string" }), null;
            let t3 = ".";
            (e3.startsWith("\\") || da(e3)) && (t3 = e3);
            let a2 = this.context.getDefinition(t3, "math");
            return a2 ? "function" === a2.definitionType && a2.ifMode && !a2.ifMode.includes(this.parseMode) ? (this.onError({ code: "unexpected-delimiter", arg: t3 }), null) : "symbol" === a2.definitionType && ("mopen" === a2.type || "mclose" === a2.type) || /^(\.|\?|\||<|>|\\vert|\\Vert|\\\||\\surd|\\uparrow|\\downarrow|\\Uparrow|\\Downarrow|\\updownarrow|\\Updownarrow|\\mid|\\mvert|\\mVert)$/.test(t3) ? t3 : (this.onError({ code: "unexpected-delimiter", arg: t3 }), null) : (this.onError({ code: "unknown-command", arg: t3 }), null);
          }
          parseLeftRight() {
            var e3;
            if (this.match("\\right") || this.match("\\mright")) return this.onError({ code: "unbalanced-braces" }), null;
            let t3 = "\\right";
            if (!this.match("\\left")) {
              if (!this.match("\\mleft")) return null;
              t3 = "\\mright";
            }
            let a2 = this.scanDelim();
            if (!a2) return null;
            for (this.beginContext(); !this.end() && !this.match(t3); ) this.parseToken();
            let r2 = this.mathlist;
            this.endContext();
            let i2 = null != (e3 = this.scanDelim()) ? e3 : ".";
            return new ra("\\right" === t3 ? "left...right" : "mleft...mright", r2, this.context, { leftDelim: a2, rightDelim: i2, style: this.style });
          }
          parseSupSub() {
            if ("math" !== this.parseMode) return false;
            let e3 = this.peek();
            if ("^" !== e3 && "_" !== e3 && "'" !== e3) return false;
            for (; "^" === e3 || "_" === e3 || "'" === e3; ) {
              if (this.match("'")) this.match("'") ? this.lastSubsupAtom().addChild(new Et("mord", this.context, { command: "\\doubleprime", mode: "math", value: "′′" }), "superscript") : this.lastSubsupAtom().addChild(new Et("mord", this.context, { command: "\\prime", mode: "math", value: "′" }), "superscript");
              else if (this.match("^") || this.match("_")) {
                let t3 = this.parseArgument("math");
                t3 ? this.lastSubsupAtom().addChildren(t3, "_" === e3 ? "subscript" : "superscript") : this.lastSubsupAtom().createBranch("_" === e3 ? "subscript" : "superscript");
              }
              e3 = this.peek();
            }
            return true;
          }
          parseLimits() {
            let e3 = this.match("\\limits"), t3 = !e3 && this.match("\\nolimits"), a2 = !t3 && !e3 && this.match("\\displaylimits");
            if (!e3 && !t3 && !a2) return false;
            let r2 = this.mathlist.length > 0 ? this.mathlist[this.mathlist.length - 1] : null;
            return !(null === r2 || "mop" !== r2.type || (e3 ? (r2.subsupPlacement = "over-under", r2.explicitSubsupPlacement = true, 0) : t3 ? (r2.subsupPlacement = "adjacent", r2.explicitSubsupPlacement = true, 0) : !a2 || (r2.subsupPlacement = "auto", r2.explicitSubsupPlacement = true, 0)));
          }
          parseArguments(e3) {
            if (null == e3 || !e3.params) return [void 0, []];
            let t3, a2 = [], r2 = e3.infix ? 2 : 0;
            for (; r2 < e3.params.length; ) {
              let i2 = e3.params[r2];
              if ("rest" === i2.type) a2.push(this.parse((e4) => "<}>" === e4 || "&" === e4 || "\\end" === e4 || "\\cr" === e4 || "\\\\" === e4));
              else if (i2.isOptional) a2.push(this.parseOptionalArgument(i2.type));
              else if (i2.type.endsWith("*")) t3 = i2.type.slice(0, -1);
              else {
                let e4 = this.parseArgument(i2.type);
                if (null !== e4) a2.push(e4);
                else switch (this.onError({ code: "missing-argument" }), i2.type) {
                  case "number":
                    a2.push(0);
                    break;
                  case "dimen":
                    a2.push({ dimension: 0, unit: "pt" });
                    break;
                  case "glue":
                    a2.push({ glue: { dimension: 0, unit: "pt" } });
                    break;
                  case "string":
                  case "balanced-string":
                    a2.push("");
                    break;
                  case "delim":
                    a2.push(".");
                    break;
                  case "colspec":
                    a2.push("llllllllll");
                    break;
                  default:
                    a2.push(this.placeholder());
                }
              }
              r2 += 1;
            }
            return [t3, a2];
          }
          parseArgument(e3) {
            var t3, a2;
            this.skipFiller(), "auto" === e3 && (e3 = this.parseMode);
            let r2 = null, i2 = "<{>" === this.peek();
            if (!i2) {
              if ("delim" === e3) return null != (t3 = this.scanDelim()) ? t3 : ".";
              if ("text" === e3 || "math" === e3) {
                this.beginContext();
                let e4 = this.parseSimpleToken();
                return this.endContext(), e4;
              }
            }
            if (i2 && this.get(), "text" === e3 || "math" === e3) {
              this.beginContext({ mode: e3 });
              do {
                this.mathlist.push(...this.parse());
              } while (!this.match("<}>") && !this.end());
            } else if (this.beginContext(), "string" === e3 ? r2 = this.scanString() : "balanced-string" === e3 ? r2 = this.scanBalancedString() : "number" === e3 ? r2 = this.scanNumber() : "colspec" === e3 ? r2 = this.scanColspec() : "dimen" === e3 ? r2 = this.scanDimen() : "glue" === e3 ? r2 = this.scanGlue() : "delim" === e3 && (r2 = null != (a2 = this.scanDelim()) ? a2 : "."), i2 && this.skipUntilToken("<}>"), null === r2) return this.endContext(), null;
            let o2 = this.mathlist;
            return this.endContext(), null != r2 ? r2 : o2;
          }
          parseOptionalArgument(e3) {
            var t3, a2;
            if (e3 = "auto" === e3 ? this.parseMode : e3, this.matchWhitespace(), !this.match("[")) return null;
            let r2 = null;
            for (; !this.end() && !this.match("]"); ) if ("string" === e3) r2 = this.scanString();
            else if ("number" === e3) r2 = this.scanNumber();
            else if ("dimen" === e3) r2 = this.scanDimen();
            else if ("glue" === e3) r2 = this.scanGlue();
            else if ("colspec" === e3) r2 = this.scanColspec();
            else if ("bbox" === e3) {
              let e4 = this.scanString().toLowerCase().trim().split(/,(?![^(]*\)(?:(?:[^(]*\)){2})*[^"]*$)/), i2 = {};
              for (let r3 of e4) {
                let e5 = null == (a2 = (t3 = this.context).backgroundColorMap) ? void 0 : a2.call(t3, r3);
                if (e5) i2.backgroundcolor = e5;
                else {
                  let e6 = r3.match(/^\s*([\d.]+)\s*([a-z]{2})/);
                  if (e6) i2.padding = e6[0];
                  else {
                    let e7 = r3.match(/^\s*border\s*:\s*(.*)/);
                    e7 && (i2.border = e7[1]);
                  }
                }
              }
              r2 = i2;
            } else "math" === e3 && (this.beginContext({ mode: "math" }), r2 = this.mathlist.concat(this.parse((e4) => "]" === e4)), this.endContext());
            return r2;
          }
          parseCommand(e3) {
            var t3, a2, r2, i2, o2, n2, s2;
            if ("\\placeholder" === e3) {
              let e4 = this.parseOptionalArgument("string"), a3 = this.parseOptionalArgument("math"), r3 = null != (t3 = this.parseArgument("string")) ? t3 : void 0;
              return [new oa(this.context, { mode: this.parseMode, placeholderId: e4, value: r3, default: a3, style: this.style })];
            }
            let l2 = null;
            if ("\\char" === e3) {
              let e4 = this.index, t4 = Math.floor(null != (a2 = this.scanNumber(true)) ? a2 : Number.NaN);
              (!Number.isFinite(t4) || t4 < 0 || t4 > 1114111) && (t4 = 10067);
              let r3 = "\\char" + At(this.tokens.slice(e4, this.index));
              return l2 = new Et("math" === this.parseMode ? "mord" : "text", this.context, { command: "\\char", mode: this.parseMode, value: String.fromCodePoint(t4), serialize: () => r3 }), l2.verbatimLatex = r3, [l2];
            }
            if ("\\hskip" === e3 || "\\kern" === e3) {
              let t4 = this.scanGlue();
              return t4 ? [new aa(e3, this.style, this.context, t4)] : null;
            }
            if (l2 = this.scanMacro(e3), l2) return [l2];
            let d2 = this.context.getDefinition(e3, this.parseMode);
            if (!d2) return this.onError({ code: "unknown-command", arg: e3 }), [new na(e3, this.context)];
            let c2 = this.index;
            if ("symbol" === d2.definitionType) {
              let t4 = _({}, this.style);
              d2.variant && (t4.variant = d2.variant), l2 = new Et(null != (r2 = d2.type) ? r2 : "mop", this.context, { command: e3, style: t4, value: String.fromCodePoint(d2.codepoint), mode: this.parseMode });
            } else {
              if (d2.ifMode && !d2.ifMode.includes(this.parseMode)) return [];
              let t4 = this.parseMode;
              d2.applyMode && (this.parseMode = d2.applyMode);
              let [a3, r3] = this.parseArguments(d2);
              if (this.parseMode = t4, !r3) return null;
              if (d2.applyMode && !d2.applyStyle && !d2.createAtom) return r3[0];
              if (d2.infix) return this.onError({ code: "too-many-infix-commands", arg: e3 }), null;
              if ("function" == typeof d2.createAtom) l2 = d2.createAtom(e3, r3, this.style, this.context), a3 && (l2.body = null != (i2 = this.parseArgument(a3)) ? i2 : void 0);
              else if ("function" == typeof d2.applyStyle) {
                let t5 = d2.applyStyle(e3, r3, this.context), i3 = this.parseMode;
                if (d2.applyMode && (this.parseMode = d2.applyMode), a3) {
                  let e4 = this.style;
                  this.style = _(_({}, this.style), t5);
                  let r4 = this.parseArgument(a3);
                  return this.style = e4, this.parseMode = i3, r4;
                }
                this.style = _(_({}, this.style), t5), this.parseMode = i3;
              } else l2 = new Et("mop", this.context, { command: null != (o2 = d2.command) ? o2 : e3, style: _({}, this.style), value: e3, mode: null != (n2 = d2.applyMode) ? n2 : this.parseMode });
            }
            if (l2 instanceof Et && void 0 === l2.verbatimLatex && !/^\\(llap|rlap|class|cssId|htmlData)$/.test(e3) && (l2.verbatimLatex = (null != (s2 = l2.command) ? s2 : "") + At(this.tokens.slice(c2, this.index)), 0 === l2.verbatimLatex.length && (l2.verbatimLatex = void 0), l2.isFunction && this.smartFence)) {
              let e4 = this.scanSmartFence();
              if (e4) return [l2, e4];
            }
            return l2 ? [l2] : null;
          }
          parseLiteral(e3) {
            let t3 = rt.createAtom(this.parseMode, e3, this.context, _({}, this.style));
            if (!t3) return null;
            if (t3.isFunction && this.smartFence) {
              let e4 = this.scanSmartFence();
              if (e4) return [t3, e4];
            }
            return [t3];
          }
          parseSimpleToken() {
            let e3 = this.get();
            return e3 ? "<space>" === e3 ? "text" === this.parseMode ? [new la(" ", " ", this.style, this.context)] : null : e3.startsWith("\\") ? this.parseCommand(e3) : da(e3) ? this.parseLiteral(e3) : ("<}>" === e3 ? this.onError({ latex: "", code: "unbalanced-braces" }) : this.onError({ latex: "", code: "unexpected-token", arg: e3 }), null) : null;
          }
          scanMacro(e3) {
            var t3;
            let a2 = this.context.getMacro(e3);
            if (!a2) return null;
            let r2 = this.index, i2 = a2.args, o2 = { "?": null == (t3 = this.args) ? void 0 : t3.call(this, "?") };
            for (let e4 = 1; e4 <= i2; e4++) o2[e4] = this.matchLiteralArg();
            return new sa(e3, this.context, { expand: a2.expand, captureSelection: a2.captureSelection, args: At(this.tokens.slice(r2, this.index)), body: ua(a2.def, this.context, { parseMode: this.parseMode, args: (e4) => o2[e4], mathstyle: this.currentContext.mathstyle }) });
          }
          parseToken() {
            var e3, t3, a2, r2;
            let i2 = null != (r2 = null != (a2 = null != (t3 = null != (e3 = this.parseEnvironment()) ? e3 : this.parseModeShift()) ? t3 : this.parseModeSet()) ? a2 : this.parseGroup()) ? r2 : this.parseLeftRight();
            if (null === i2) {
              if (this.parseSupSub() || this.parseLimits()) return true;
              i2 = this.parseSimpleToken();
            }
            return M(i2) ? this.mathlist.push(...i2) : i2 && this.mathlist.push(i2), null !== i2;
          }
        };
        function ua(e3, t3, a2) {
          var r2, i2, o2;
          let n2 = null != (r2 = null == a2 ? void 0 : a2.args) ? r2 : null, s2 = new ca(Lt(e3, n2), t3, { args: n2, mathstyle: null != (i2 = null == a2 ? void 0 : a2.mathstyle) ? i2 : "displaystyle", parseMode: null != (o2 = null == a2 ? void 0 : a2.parseMode) ? o2 : "math" }), l2 = [];
          for (; !s2.end(); ) l2.push(...s2.parse());
          return l2;
        }
        function pa(e3, t3, a2) {
          return "object" == typeof e3 && "glue" in e3 ? e3 : "object" == typeof e3 && "dimension" in e3 ? { glue: e3 } : "number" == typeof e3 ? { glue: { dimension: e3 } } : new ca(Lt(e3), t3, { registers: a2 }).scanGlue();
        }
        function ha(e3, t3, a2) {
          return "number" == typeof e3 ? { dimension: e3, unit: "pt" } : ("object" == typeof e3 && "glue" in e3 && (e3 = e3.glue), "object" == typeof e3 && "dimension" in e3 ? e3 : new ca(Lt(e3), t3, { registers: a2 }).scanDimen());
        }
        var ma = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("box", a2, { command: e3, serialize: r2.serialize, style: r2.style }), this.body = t3, this.framecolor = r2.framecolor, this.verbatimFramecolor = r2.verbatimBackgroundcolor, this.backgroundcolor = r2.backgroundcolor, this.verbatimBackgroundcolor = r2.verbatimBackgroundcolor, this.padding = r2.padding, this.border = r2.border;
          }
          static fromJson(e3, t3) {
            return new ma(e3.command, e3.body, t3, e3);
          }
          toJson() {
            return S(_({}, super.toJson()), { framecolor: this.framecolor, verbatimFramecolor: this.verbatimFramecolor, backgroundcolor: this.backgroundcolor, verbatimBackgroundcolor: this.verbatimBackgroundcolor, padding: this.padding, border: this.border });
          }
          render(e3) {
            let t3 = new Ye(e3, this.style), a2 = Ge(t3.getRegisterAsDimension("fboxsep")), r2 = void 0 === this.padding ? a2 : Ge(ha(this.padding, S(_({}, this.context), { registers: e3.registers }))), i2 = Et.createBox(e3, this.body);
            if (!i2) return null;
            i2.setStyle("vertical-align", -i2.height, "em");
            let o2 = new dt(i2, { type: "mord" }), n2 = new dt(null, { classes: "ML__box" });
            n2.height = o2.height + r2, n2.depth = o2.depth + r2, n2.setStyle("box-sizing", "border-box"), n2.setStyle("position", "absolute"), n2.setStyle("height", o2.height + o2.depth + 2 * r2, "em"), 0 === r2 ? n2.setStyle("width", "100%") : (n2.setStyle("width", `calc(100% + ${2 * r2}em)`), n2.setStyle("top", a2, "em"), n2.setStyle("left", -r2, "em")), this.backgroundcolor && n2.setStyle("background-color", this.backgroundcolor), this.framecolor && n2.setStyle("border", `${Ge(t3.getRegisterAsDimension("fboxrule"))}em solid ${this.framecolor}`), this.border && n2.setStyle("border", this.border), o2.setStyle("display", "inline-block"), o2.setStyle("height", i2.height + i2.depth, "em"), o2.setStyle("vertical-align", -r2, "em");
            let s2 = new dt([n2, o2]);
            return s2.setStyle("position", "relative"), s2.setStyle("display", "inline-block"), s2.setStyle("line-height", 0), s2.height = o2.height + r2, s2.depth = o2.depth + r2, s2.left = r2, s2.right = r2, s2.setStyle("height", o2.height + r2, "em"), s2.setStyle("top", o2.depth - o2.height, "em"), s2.setStyle("vertical-align", o2.depth + r2, "em"), this.caret && (s2.caret = this.caret), this.attachSupsub(e3, { base: s2 });
          }
        }, fa = class extends Et {
          constructor(e3, t3, a2, r2, i2 = {}) {
            var o2, n2;
            super("array", e3), this.environmentName = t3, this.rowGaps = r2, i2.mathstyleName && (this.mathstyleName = i2.mathstyleName), i2.columns && (0 === i2.columns.length ? this.colFormat = [{ align: "l" }] : this.colFormat = i2.columns), this.colFormat || (this.colFormat = [{ align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }]), this.array = function(e4, t4, a3, r3) {
              let i3 = 0;
              for (let e5 of r3) "align" in e5 && (i3 += 1);
              let o3 = 0, n3 = [];
              for (let r4 of a3) {
                let a4 = 0;
                for (o3 = Math.max(o3, Math.min(r4.length, i3)); a4 < r4.length; ) {
                  let o4 = [], s3 = Math.min(r4.length, a4 + i3);
                  for (; a4 < s3; ) 0 === r4[a4].length ? o4.push([new Et("first", e4, { mode: t4.mode })]) : "first" !== r4[a4][0].type ? o4.push([new Et("first", e4, { mode: t4.mode }), ...r4[a4]]) : o4.push(r4[a4]), a4 += 1;
                  n3.push(o4);
                }
              }
              1 === n3[n3.length - 1].length && 0 === n3[n3.length - 1][0].length && n3.pop();
              let s2 = [];
              for (let a4 of n3) {
                if (a4.length !== o3) for (let r4 = a4.length; r4 < o3; r4++) a4.push([new Et("first", e4, { mode: t4.mode }), new oa(e4)]);
                s2.push(a4);
              }
              let l2 = 0, d2 = 0;
              for (let e5 of s2) {
                d2 = 0;
                for (let a4 of e5) {
                  for (let e6 of a4) e6.parent = t4, e6.treeBranch = [l2, d2];
                  d2 += 1;
                }
                l2 += 1;
              }
              return t4.isDirty = true, s2;
            }(e3, this, a2, this.colFormat), i2.leftDelim && (this.leftDelim = i2.leftDelim), i2.rightDelim && (this.rightDelim = i2.rightDelim), void 0 !== i2.jot && (this.jot = i2.jot), i2.arraycolsep && (this.arraycolsep = i2.arraycolsep), this.colSeparationType = i2.colSeparationType, this.arraystretch = null != (o2 = i2.arraystretch) ? o2 : 1, this.minColumns = null != (n2 = i2.minColumns) ? n2 : 1;
          }
          static fromJson(e3, t3) {
            return new fa(t3, e3.environmentName, e3.array, e3.rowGaps, e3);
          }
          toJson() {
            let e3 = S(_({}, super.toJson()), { environmentName: this.environmentName, array: this.array.map((e4) => e4.map((e5) => e5.map((e6) => e6.toJson()))), rowGaps: this.rowGaps, columns: this.colFormat, colSeparationType: this.colSeparationType });
            return 1 !== this.arraystretch && (e3.arraystretch = this.arraystretch), this.arraycolsep && (e3.arraycolsep = this.arraycolsep), this.leftDelim && (e3.leftDelim = this.leftDelim), this.rightDelim && (e3.rightDelim = this.rightDelim), void 0 !== this.jot && (e3.jot = this.jot), e3;
          }
          branch(e3) {
            var t3;
            if (Bt(e3)) return null != (t3 = this.array[e3[0]][e3[1]]) ? t3 : void 0;
          }
          get branches() {
            let e3 = super.branches;
            return this.array.forEach((t3, a2) => {
              this.array[a2].forEach((t4, r2) => {
                this.array[a2][r2] && e3.push([a2, r2]);
              });
            }), e3;
          }
          createBranch(e3) {
            var t3;
            return Bt(e3) ? (this.isDirty = true, null != (t3 = this.branch(e3)) ? t3 : []) : [];
          }
          get rowCount() {
            return this.array.length;
          }
          get colCount() {
            return this.array[0].length;
          }
          get maxColumns() {
            return this.colFormat.filter((e3) => Boolean(e3.align)).length;
          }
          removeBranch(e3) {
            if (zt(e3)) return super.removeBranch(e3);
            let t3 = this.branch(e3);
            return this.array[e3[0]][e3[1]] = void 0, t3.forEach((e4) => {
              e4.parent = void 0, e4.treeBranch = void 0;
            }), t3.shift(), this.isDirty = true, t3;
          }
          get hasChildren() {
            return this.children.length > 0;
          }
          get children() {
            let e3 = [];
            for (let t3 of this.array) for (let a2 of t3) if (a2) for (let t4 of a2) e3.push(...t4.children), e3.push(t4);
            return [...e3, ...super.children];
          }
          render(e3) {
            var t3, a2, r2, i2, o2;
            let n2 = new Ye(e3, this.style, this.mathstyleName), s2 = n2.getRegisterAsEm("arrayrulewidth"), l2 = n2.getRegisterAsEm("arraycolsep"), d2 = n2.getRegisterAsEm("doublerulesep"), c2 = null != (t3 = this.arraystretch) ? t3 : 1, u2 = "number" == typeof this.arraycolsep ? this.arraycolsep : l2;
            "small" === this.colSeparationType && (u2 = new Ye(e3, void 0, "scriptstyle").scalingFactor / e3.scalingFactor * 0.2778);
            let p2 = 1.2 * c2, h2 = 0.7 * p2, m2 = 0.3 * p2, f2 = 0, y2 = [], b2 = 0, g2 = this.array.length;
            for (let e4 = 0; e4 < g2; ++e4) {
              let t4 = this.array[e4];
              b2 = Math.max(b2, t4.length);
              let i3 = new Ye(n2, this.style, this.mathstyleName), o3 = h2 / i3.scalingFactor, s3 = m2 / i3.scalingFactor, l3 = { cells: [], height: 0, depth: 0, pos: 0 };
              for (let e5 of t4) {
                let t5 = null != (a2 = Et.createBox(i3, e5, { newList: true })) ? a2 : new dt(null, { newList: true });
                s3 = Math.max(s3, t5.depth), o3 = Math.max(o3, t5.height), l3.cells.push(t5);
              }
              let d3 = null != (r2 = Ge(this.rowGaps[e4])) ? r2 : 0;
              d3 > 0 && (d3 += m2, s3 = Math.max(s3, d3), d3 = 0), void 0 !== this.jot && (s3 += this.jot), l3.height = o3, l3.depth = s3, f2 += o3, l3.pos = f2, f2 += s3 + d3, y2.push(l3);
            }
            let v2 = f2 / 2 + Ie, k2 = [];
            for (let e4 = 0; e4 < b2; e4++) {
              let t4 = [];
              for (let a3 of y2) {
                let r3 = a3.cells[e4];
                r3.depth = a3.depth, r3.height = a3.height, t4.push({ box: r3, shift: a3.pos - v2 });
              }
              t4.length > 0 && k2.push(new gt({ individualShift: t4 }));
            }
            let x2 = [], w2 = false, _2 = false, S2 = 0, M2 = !this.leftDelim, { colFormat: L2 } = this;
            for (let t4 of L2) {
              if ("align" in t4 && S2 >= k2.length) break;
              if ("align" in t4) w2 ? x2.push(ba(2 * u2)) : (_2 || M2) && x2.push(ba(u2)), x2.push(new dt(k2[S2], { classes: "col-align-" + t4.align })), S2++, w2 = true, _2 = false, M2 = false;
              else if ("gap" in t4) {
                if ("number" == typeof t4.gap) x2.push(ba(t4.gap));
                else {
                  let a3 = ga(e3, y2, v2, t4.gap);
                  a3 && x2.push(a3);
                }
                w2 = false, _2 = false, M2 = false;
              } else if ("separator" in t4) {
                let e4 = new dt(null, { classes: "vertical-separator" });
                e4.setStyle("height", f2, "em"), e4.setStyle("border-right", `${s2}em ${t4.separator} currentColor`), e4.setStyle("vertical-align", -(f2 - v2), "em");
                let a3 = 0;
                _2 ? a3 = d2 - s2 : w2 && (a3 = u2 - s2), e4.left = a3, x2.push(e4), w2 = false, _2 = true, M2 = false;
              }
            }
            w2 && !this.rightDelim && x2.push(ba(u2));
            let C2 = new dt(x2, { classes: "mtable" });
            if (!(this.leftDelim && "." !== this.leftDelim || this.rightDelim && "." !== this.rightDelim)) return this.caret && (C2.caret = this.caret), C2;
            let A2 = C2.height, D2 = C2.depth, T2 = this.bind(e3, new dt([this.bind(e3, Yt("mopen", null != (i2 = this.leftDelim) ? i2 : ".", A2, D2, n2)), C2, this.bind(e3, Yt("mclose", null != (o2 = this.rightDelim) ? o2 : ".", A2, D2, n2))], { type: "mord" }));
            return T2 ? (this.caret && (T2.caret = this.caret), this.attachSupsub(e3, { base: T2 })) : null;
          }
          serialize(e3) {
            let t3 = "\\begin{" + this.environmentName + "}";
            if ("array" === this.environmentName) {
              if (t3 += "{", void 0 !== this.colFormat) for (let e4 of this.colFormat) "align" in e4 ? t3 += e4.align : "separator" in e4 && "solid" === e4.separator ? t3 += "|" : "separator" in e4 && "dashed" === e4.separator && (t3 += ":");
              t3 += "}";
            }
            for (let a2 = 0; a2 < this.array.length; a2++) {
              for (let r2 = 0; r2 < this.array[a2].length; r2++) r2 > 0 && (t3 += " & "), t3 = Ct([t3, Et.serialize(this.array[a2][r2], e3)]);
              a2 < this.array.length - 1 && (t3 += " \\\\ ");
            }
            return t3 += "\\end{" + this.environmentName + "}", t3;
          }
          getCell(e3, t3) {
            return this.array[e3][t3];
          }
          setCell(e3, t3, a2) {
            for (let a3 of this.array[e3][t3]) a3.parent = void 0, a3.treeBranch = void 0;
            let r2 = a2;
            (0 === a2.length || "first" !== a2[0].type) && (r2 = [new Et("first", this.context, { mode: this.mode }), ...a2]), this.array[e3][t3] = r2;
            for (let a3 of r2) a3.parent = this, a3.treeBranch = [e3, t3];
            this.isDirty = true;
          }
          addRowBefore(e3) {
            let t3 = [];
            for (let e4 = 0; e4 < this.colCount; e4++) t3.push(ya(this));
            this.array.splice(e3, 0, t3);
            for (let t4 = e3; t4 < this.rowCount; t4++) for (let e4 = 0; e4 < this.colCount; e4++) {
              let a2 = this.array[t4][e4];
              if (a2) for (let r2 of a2) r2.treeBranch = [t4, e4];
            }
            this.isDirty = true;
          }
          addRowAfter(e3) {
            let t3 = [];
            for (let e4 = 0; e4 < this.colCount; e4++) t3.push(ya(this));
            this.array.splice(e3 + 1, 0, t3);
            for (let t4 = e3 + 1; t4 < this.rowCount; t4++) for (let e4 = 0; e4 < this.colCount; e4++) {
              let a2 = this.array[t4][e4];
              if (a2) for (let r2 of a2) r2.treeBranch = [t4, e4];
            }
            this.isDirty = true;
          }
          removeRow(e3) {
            let t3 = this.array.splice(e3, 1);
            for (let e4 of t3) for (let t4 of e4) if (t4) for (let e5 of t4) e5.parent = void 0, e5.treeBranch = void 0;
            for (let t4 = e3; t4 < this.rowCount; t4++) for (let e4 = 0; e4 < this.colCount; e4++) {
              let a2 = this.array[t4][e4];
              if (a2) for (let r2 of a2) r2.treeBranch = [t4, e4];
            }
            this.isDirty = true;
          }
          addColumnBefore(e3) {
            for (let t3 of this.array) t3.splice(e3, 0, ya(this));
            for (let t3 = 0; t3 < this.rowCount; t3++) for (let a2 = e3; a2 < this.colCount; a2++) {
              let e4 = this.array[t3][a2];
              if (e4) for (let r2 of e4) r2.treeBranch = [t3, a2];
            }
            this.isDirty = true;
          }
          addColumnAfter(e3) {
            for (let t3 of this.array) t3.splice(e3 + 1, 0, ya(this));
            for (let t3 = 0; t3 < this.rowCount; t3++) for (let a2 = e3 + 1; a2 < this.colCount; a2++) {
              let e4 = this.array[t3][a2];
              if (e4) for (let r2 of e4) r2.treeBranch = [t3, a2];
            }
            this.isDirty = true;
          }
          addColumn() {
            this.addColumnAfter(this.colCount - 1);
          }
          removeColumn(e3) {
            for (let t3 of this.array) {
              let a2 = t3.splice(e3, 1);
              for (let e4 of a2) if (e4) for (let t4 of e4) t4.parent = void 0, t4.treeBranch = void 0;
            }
            for (let t3 = 0; t3 < this.rowCount; t3++) for (let a2 = e3; a2 < this.colCount; a2++) {
              let e4 = this.array[t3][a2];
              if (e4) for (let r2 of e4) r2.treeBranch = [t3, a2];
            }
            this.isDirty = true;
          }
          get cells() {
            let e3 = [];
            for (let t3 of this.array) for (let a2 of t3) a2 && e3.push(a2);
            return e3;
          }
        };
        function ya(e3) {
          let t3 = new Et("first", e3.context, { mode: e3.mode });
          t3.parent = e3;
          let a2 = new oa(e3.context, { mode: e3.mode });
          return a2.parent = e3, [t3, a2];
        }
        function ba(e3) {
          let t3 = new dt(null, { classes: "arraycolsep" });
          return t3.width = e3, t3;
        }
        function ga(e3, t3, a2, r2) {
          if (!r2) return null;
          let i2 = [];
          for (let o2 of t3) {
            let t4 = Et.createBox(e3, r2, { newList: true });
            t4 && (t4.depth = o2.depth, t4.height = o2.height, i2.push({ box: t4, shift: o2.pos - a2 }));
          }
          return new gt({ individualShift: i2 }).wrap(e3);
        }
        var va = class extends Et {
          constructor(e3, t3, a2) {
            var r2;
            super("composition", t3, { mode: null != (r2 = null == a2 ? void 0 : a2.mode) ? r2 : "math", value: e3 });
          }
          static fromJson(e3, t3) {
            return new va(e3.value, t3, e3);
          }
          toJson() {
            return super.toJson();
          }
          get computedStyle() {
            return {};
          }
          render(e3) {
            let t3 = new dt(this.value, { classes: "ML__composition", type: "composition" });
            return this.bind(e3, t3), this.caret && (t3.caret = this.caret), t3;
          }
          serialize(e3) {
            return "";
          }
        }, ka = class extends Et {
          constructor(e3, t3, a2) {
            super("chem", a2, { command: e3, mode: "math" });
            let r2 = _a.go(xa.go(t3, "\\pu" === e3 ? "pu" : "ce"), false);
            this.body = ua(r2, a2), this.verbatimLatex = e3 + "{" + t3 + "}", this.arg = t3, this.captureSelection = true;
          }
          static fromJson(e3, t3) {
            return new ka(e3.command, e3.arg, t3);
          }
          toJson() {
            return S(_({}, super.toJson()), { arg: this.arg });
          }
          render(e3) {
            let t3 = Et.createBox(e3, this.body, { type: "chem", newList: true });
            return this.caret && (t3.caret = this.caret), this.bind(e3, t3);
          }
          serialize(e3) {
            return this.verbatimLatex;
          }
        };
        pe(["ce", "pu"], "{chemformula:balanced-string}", { createAtom: (e3, t3, a2, r2) => new ka(e3, t3[0], r2) });
        var xa = { go: function(e3, t3) {
          if (!e3) return [];
          void 0 === t3 && (t3 = "ce");
          var a2 = "0", r2 = { parenthesisLevel: 0 };
          e3 = (e3 = (e3 = e3.replace(/\n/g, " ")).replace(/[\u2212\u2013\u2014\u2010]/g, "-")).replace(/[\u2026]/g, "...");
          for (var i2, o2 = 10, n2 = []; ; ) {
            i2 !== e3 ? (o2 = 10, i2 = e3) : o2--;
            var s2 = xa.stateMachines[t3], l2 = s2.transitions[a2] || s2.transitions["*"];
            e: for (var d2 = 0; d2 < l2.length; d2++) {
              var c2 = xa.patterns.match_(l2[d2].pattern, e3);
              if (c2) {
                for (var u2 = l2[d2].task, p2 = 0; p2 < u2.action_.length; p2++) {
                  var h2;
                  if (s2.actions[u2.action_[p2].type_]) h2 = s2.actions[u2.action_[p2].type_](r2, c2.match_, u2.action_[p2].option);
                  else {
                    if (!xa.actions[u2.action_[p2].type_]) throw ["MhchemBugA", "mhchem bug A. Please report. (" + u2.action_[p2].type_ + ")"];
                    h2 = xa.actions[u2.action_[p2].type_](r2, c2.match_, u2.action_[p2].option);
                  }
                  xa.concatArray(n2, h2);
                }
                if (a2 = u2.nextState || a2, !(e3.length > 0)) return n2;
                if (u2.revisit || (e3 = c2.remainder), !u2.toContinue) break e;
              }
            }
            if (o2 <= 0) throw ["MhchemBugU", "mhchem bug U. Please report."];
          }
        }, concatArray: function(e3, t3) {
          if (t3) if (Array.isArray(t3)) for (var a2 = 0; a2 < t3.length; a2++) e3.push(t3[a2]);
          else e3.push(t3);
        }, patterns: { patterns: { empty: /^$/, else: /^./, else2: /^./, space: /^\s/, "space A": /^\s(?=[A-Z\\$])/, space$: /^\s$/, "a-z": /^[a-z]/, x: /^x/, x$: /^x$/, i$: /^i$/, letters: /^(?:[a-zA-Z\u03B1-\u03C9\u0391-\u03A9?@]|(?:\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))))+/, "\\greek": /^\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))/, "one lowercase latin letter $": /^(?:([a-z])(?:$|[^a-zA-Z]))$/, "$one lowercase latin letter$ $": /^\$(?:([a-z])(?:$|[^a-zA-Z]))\$$/, "one lowercase greek letter $": /^(?:\$?[\u03B1-\u03C9]\$?|\$?\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\s*\$?)(?:\s+|\{\}|(?![a-zA-Z]))$/, digits: /^[0-9]+/, "-9.,9": /^[+\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))/, "-9.,9 no missing 0": /^[+\-]?[0-9]+(?:[.,][0-9]+)?/, "(-)(9.,9)(e)(99)": function(e3) {
          var t3 = e3.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))?(\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))\))?(?:([eE]|\s*(\*|x|\\times|\u00D7)\s*10\^)([+\-]?[0-9]+|\{[+\-]?[0-9]+\}))?/);
          return t3 && t3[0] ? { match_: t3.splice(1), remainder: e3.substr(t3[0].length) } : null;
        }, "(-)(9)^(-9)": function(e3) {
          var t3 = e3.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+)?)\^([+\-]?[0-9]+|\{[+\-]?[0-9]+\})/);
          return t3 && t3[0] ? { match_: t3.splice(1), remainder: e3.substr(t3[0].length) } : null;
        }, "state of aggregation $": function(e3) {
          var t3 = xa.patterns.findObserveGroups(e3, "", /^\([a-z]{1,3}(?=[\),])/, ")", "");
          if (t3 && t3.remainder.match(/^($|[\s,;\)\]\}])/)) return t3;
          var a2 = e3.match(/^(?:\((?:\\ca\s?)?\$[amothc]\$\))/);
          return a2 ? { match_: a2[0], remainder: e3.substr(a2[0].length) } : null;
        }, "_{(state of aggregation)}$": /^_\{(\([a-z]{1,3}\))\}/, "{[(": /^(?:\\\{|\[|\()/, ")]}": /^(?:\)|\]|\\\})/, ", ": /^[,;]\s*/, ",": /^[,;]/, ".": /^[.]/, ". ": /^([.\u22C5\u00B7\u2022])\s*/, "...": /^\.\.\.(?=$|[^.])/, "* ": /^([*])\s*/, "^{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "^{", "", "", "}");
        }, "^($...$)": function(e3) {
          return xa.patterns.findObserveGroups(e3, "^", "$", "$", "");
        }, "^a": /^\^([0-9]+|[^\\_])/, "^\\x{}{}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "^", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
        }, "^\\x{}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "^", /^\\[a-zA-Z]+\{/, "}", "");
        }, "^\\x": /^\^(\\[a-zA-Z]+)\s*/, "^(-1)": /^\^(-?\d+)/, "'": /^'/, "_{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "_{", "", "", "}");
        }, "_($...$)": function(e3) {
          return xa.patterns.findObserveGroups(e3, "_", "$", "$", "");
        }, _9: /^_([+\-]?[0-9]+|[^\\])/, "_\\x{}{}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "_", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
        }, "_\\x{}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "_", /^\\[a-zA-Z]+\{/, "}", "");
        }, "_\\x": /^_(\\[a-zA-Z]+)\s*/, "^_": /^(?:\^(?=_)|\_(?=\^)|[\^_]$)/, "{}": /^\{\}/, "{...}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "", "{", "}", "");
        }, "{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "{", "", "", "}");
        }, "$...$": function(e3) {
          return xa.patterns.findObserveGroups(e3, "", "$", "$", "");
        }, "${(...)}$": function(e3) {
          return xa.patterns.findObserveGroups(e3, "${", "", "", "}$");
        }, "$(...)$": function(e3) {
          return xa.patterns.findObserveGroups(e3, "$", "", "", "$");
        }, "=<>": /^[=<>]/, "#": /^[#\u2261]/, "+": /^\+/, "-$": /^-(?=[\s_},;\]/]|$|\([a-z]+\))/, "-9": /^-(?=[0-9])/, "- orbital overlap": /^-(?=(?:[spd]|sp)(?:$|[\s,;\)\]\}]))/, "-": /^-/, "pm-operator": /^(?:\\pm|\$\\pm\$|\+-|\+\/-)/, operator: /^(?:\+|(?:[\-=<>]|<<|>>|\\approx|\$\\approx\$)(?=\s|$|-?[0-9]))/, arrowUpDown: /^(?:v|\(v\)|\^|\(\^\))(?=$|[\s,;\)\]\}])/, "\\bond{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\bond{", "", "", "}");
        }, "->": /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\u2192\u27F6\u21CC])/, CMT: /^[CMT](?=\[)/, "[(...)]": function(e3) {
          return xa.patterns.findObserveGroups(e3, "[", "", "", "]");
        }, "1st-level escape": /^(&|\\\\|\\hline)\s*/, "\\,": /^(?:\\[,\ ;:])/, "\\x{}{}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
        }, "\\x{}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "", /^\\[a-zA-Z]+\{/, "}", "");
        }, "\\ca": /^\\ca(?:\s+|(?![a-zA-Z]))/, "\\x": /^(?:\\[a-zA-Z]+\s*|\\[_&{}%])/, orbital: /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/, others: /^[\/~|]/, "\\frac{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\frac{", "", "", "}", "{", "", "", "}");
        }, "\\overset{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\overset{", "", "", "}", "{", "", "", "}");
        }, "\\underset{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\underset{", "", "", "}", "{", "", "", "}");
        }, "\\underbrace{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\underbrace{", "", "", "}_", "{", "", "", "}");
        }, "\\color{(...)}0": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\color{", "", "", "}");
        }, "\\color{(...)}{(...)}1": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\color{", "", "", "}", "{", "", "", "}");
        }, "\\color(...){(...)}2": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\color", "\\", "", /^(?=\{)/, "{", "", "", "}");
        }, "\\ce{(...)}": function(e3) {
          return xa.patterns.findObserveGroups(e3, "\\ce{", "", "", "}");
        }, oxidation$: /^(?:[+-][IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/, "d-oxidation$": /^(?:[+-]?\s?[IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/, "roman numeral": /^[IVX]+/, "1/2$": /^[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+(?:\$[a-z]\$|[a-z])?$/, amount: function(e3) {
          var t3;
          if (t3 = e3.match(/^(?:(?:(?:\([+\-]?[0-9]+\/[0-9]+\)|[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+|[+\-]?[0-9]+[.,][0-9]+|[+\-]?\.[0-9]+|[+\-]?[0-9]+)(?:[a-z](?=\s*[A-Z]))?)|[+\-]?[a-z](?=\s*[A-Z])|\+(?!\s))/)) return { match_: t3[0], remainder: e3.substr(t3[0].length) };
          var a2 = xa.patterns.findObserveGroups(e3, "", "$", "$", "");
          return a2 && (t3 = a2.match_.match(/^\$(?:\(?[+\-]?(?:[0-9]*[a-z]?[+\-])?[0-9]*[a-z](?:[+\-][0-9]*[a-z]?)?\)?|\+|-)\$$/)) ? { match_: t3[0], remainder: e3.substr(t3[0].length) } : null;
        }, amount2: function(e3) {
          return this.amount(e3);
        }, "(KV letters),": /^(?:[A-Z][a-z]{0,2}|i)(?=,)/, formula$: function(e3) {
          if (e3.match(/^\([a-z]+\)$/)) return null;
          var t3 = e3.match(/^(?:[a-z]|(?:[0-9\ \+\-\,\.\(\)]+[a-z])+[0-9\ \+\-\,\.\(\)]*|(?:[a-z][0-9\ \+\-\,\.\(\)]+)+[a-z]?)$/);
          return t3 ? { match_: t3[0], remainder: e3.substr(t3[0].length) } : null;
        }, uprightEntities: /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/, "/": /^\s*(\/)\s*/, "//": /^\s*(\/\/)\s*/, "*": /^\s*[*.]\s*/ }, findObserveGroups: function(e3, t3, a2, r2, i2, o2, n2, s2, l2, d2) {
          var c2 = function(e4, t4) {
            if ("string" == typeof t4) return 0 !== e4.indexOf(t4) ? null : t4;
            var a3 = e4.match(t4);
            return a3 ? a3[0] : null;
          }, u2 = c2(e3, t3);
          if (null === u2 || (e3 = e3.substr(u2.length), null === (u2 = c2(e3, a2)))) return null;
          var p2 = function(e4, t4, a3) {
            for (var r3 = 0; t4 < e4.length; ) {
              var i3 = e4.charAt(t4), o3 = c2(e4.substr(t4), a3);
              if (null !== o3 && 0 === r3) return { endMatchBegin: t4, endMatchEnd: t4 + o3.length };
              if ("{" === i3) r3++;
              else if ("}" === i3) {
                if (0 === r3) throw ["ExtraCloseMissingOpen", "Extra close brace or missing open brace"];
                r3--;
              }
              t4++;
            }
            return null;
          }(e3, u2.length, r2 || i2);
          if (null === p2) return null;
          var h2 = e3.substring(0, r2 ? p2.endMatchEnd : p2.endMatchBegin);
          if (o2 || n2) {
            var m2 = this.findObserveGroups(e3.substr(p2.endMatchEnd), o2, n2, s2, l2);
            if (null === m2) return null;
            var f2 = [h2, m2.match_];
            return { match_: d2 ? f2.join("") : f2, remainder: m2.remainder };
          }
          return { match_: h2, remainder: e3.substr(p2.endMatchEnd) };
        }, match_: function(e3, t3) {
          var a2 = xa.patterns.patterns[e3];
          if (void 0 === a2) throw ["MhchemBugP", "mhchem bug P. Please report. (" + e3 + ")"];
          if ("function" == typeof a2) return xa.patterns.patterns[e3](t3);
          var r2 = t3.match(a2);
          return r2 ? { match_: r2[2] ? [r2[1], r2[2]] : r2[1] ? r2[1] : r2[0], remainder: t3.substr(r2[0].length) } : null;
        } }, actions: { "a=": function(e3, t3) {
          e3.a = (e3.a || "") + t3;
        }, "b=": function(e3, t3) {
          e3.b = (e3.b || "") + t3;
        }, "p=": function(e3, t3) {
          e3.p = (e3.p || "") + t3;
        }, "o=": function(e3, t3) {
          e3.o = (e3.o || "") + t3;
        }, "q=": function(e3, t3) {
          e3.q = (e3.q || "") + t3;
        }, "d=": function(e3, t3) {
          e3.d = (e3.d || "") + t3;
        }, "rm=": function(e3, t3) {
          e3.rm = (e3.rm || "") + t3;
        }, "text=": function(e3, t3) {
          e3.text_ = (e3.text_ || "") + t3;
        }, insert: function(e3, t3, a2) {
          return { type_: a2 };
        }, "insert+p1": function(e3, t3, a2) {
          return { type_: a2, p1: t3 };
        }, "insert+p1+p2": function(e3, t3, a2) {
          return { type_: a2, p1: t3[0], p2: t3[1] };
        }, copy: function(e3, t3) {
          return t3;
        }, rm: function(e3, t3) {
          return { type_: "rm", p1: t3 || "" };
        }, text: function(e3, t3) {
          return xa.go(t3, "text");
        }, "{text}": function(e3, t3) {
          var a2 = ["{"];
          return xa.concatArray(a2, xa.go(t3, "text")), a2.push("}"), a2;
        }, "tex-math": function(e3, t3) {
          return xa.go(t3, "tex-math");
        }, "tex-math tight": function(e3, t3) {
          return xa.go(t3, "tex-math tight");
        }, bond: function(e3, t3, a2) {
          return { type_: "bond", kind_: a2 || t3 };
        }, "color0-output": function(e3, t3) {
          return { type_: "color0", color: t3[0] };
        }, ce: function(e3, t3) {
          return xa.go(t3);
        }, "1/2": function(e3, t3) {
          var a2 = [];
          t3.match(/^[+\-]/) && (a2.push(t3.substr(0, 1)), t3 = t3.substr(1));
          var r2 = t3.match(/^([0-9]+|\$[a-z]\$|[a-z])\/([0-9]+)(\$[a-z]\$|[a-z])?$/);
          return r2[1] = r2[1].replace(/\$/g, ""), a2.push({ type_: "frac", p1: r2[1], p2: r2[2] }), r2[3] && (r2[3] = r2[3].replace(/\$/g, ""), a2.push({ type_: "tex-math", p1: r2[3] })), a2;
        }, "9,9": function(e3, t3) {
          return xa.go(t3, "9,9");
        } }, createTransitions: function(e3) {
          var t3, a2, r2, i2, o2 = {};
          for (t3 in e3) for (a2 in e3[t3]) for (r2 = a2.split("|"), e3[t3][a2].stateArray = r2, i2 = 0; i2 < r2.length; i2++) o2[r2[i2]] = [];
          for (t3 in e3) for (a2 in e3[t3]) for (r2 = e3[t3][a2].stateArray || [], i2 = 0; i2 < r2.length; i2++) {
            var n2 = e3[t3][a2];
            if (n2.action_) {
              n2.action_ = [].concat(n2.action_);
              for (var s2 = 0; s2 < n2.action_.length; s2++) "string" == typeof n2.action_[s2] && (n2.action_[s2] = { type_: n2.action_[s2] });
            } else n2.action_ = [];
            for (var l2 = t3.split("|"), d2 = 0; d2 < l2.length; d2++) if ("*" === r2[i2]) for (var c2 in o2) o2[c2].push({ pattern: l2[d2], task: n2 });
            else o2[r2[i2]].push({ pattern: l2[d2], task: n2 });
          }
          return o2;
        }, stateMachines: {} };
        xa.stateMachines = { ce: { transitions: xa.createTransitions({ empty: { "*": { action_: "output" } }, else: { "0|1|2": { action_: "beginsWithBond=false", revisit: true, toContinue: true } }, oxidation$: { 0: { action_: "oxidation-output" } }, CMT: { r: { action_: "rdt=", nextState: "rt" }, rd: { action_: "rqt=", nextState: "rdt" } }, arrowUpDown: { "0|1|2|as": { action_: ["sb=false", "output", "operator"], nextState: "1" } }, uprightEntities: { "0|1|2": { action_: ["o=", "output"], nextState: "1" } }, orbital: { "0|1|2|3": { action_: "o=", nextState: "o" } }, "->": { "0|1|2|3": { action_: "r=", nextState: "r" }, "a|as": { action_: ["output", "r="], nextState: "r" }, "*": { action_: ["output", "r="], nextState: "r" } }, "+": { o: { action_: "d= kv", nextState: "d" }, "d|D": { action_: "d=", nextState: "d" }, q: { action_: "d=", nextState: "qd" }, "qd|qD": { action_: "d=", nextState: "qd" }, dq: { action_: ["output", "d="], nextState: "d" }, 3: { action_: ["sb=false", "output", "operator"], nextState: "0" } }, amount: { "0|2": { action_: "a=", nextState: "a" } }, "pm-operator": { "0|1|2|a|as": { action_: ["sb=false", "output", { type_: "operator", option: "\\pm" }], nextState: "0" } }, operator: { "0|1|2|a|as": { action_: ["sb=false", "output", "operator"], nextState: "0" } }, "-$": { "o|q": { action_: ["charge or bond", "output"], nextState: "qd" }, d: { action_: "d=", nextState: "d" }, D: { action_: ["output", { type_: "bond", option: "-" }], nextState: "3" }, q: { action_: "d=", nextState: "qd" }, qd: { action_: "d=", nextState: "qd" }, "qD|dq": { action_: ["output", { type_: "bond", option: "-" }], nextState: "3" } }, "-9": { "3|o": { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "3" } }, "- orbital overlap": { o: { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "2" }, d: { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "2" } }, "-": { "0|1|2": { action_: [{ type_: "output", option: 1 }, "beginsWithBond=true", { type_: "bond", option: "-" }], nextState: "3" }, 3: { action_: { type_: "bond", option: "-" } }, a: { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "2" }, as: { action_: [{ type_: "output", option: 2 }, { type_: "bond", option: "-" }], nextState: "3" }, b: { action_: "b=" }, o: { action_: { type_: "- after o/d", option: false }, nextState: "2" }, q: { action_: { type_: "- after o/d", option: false }, nextState: "2" }, "d|qd|dq": { action_: { type_: "- after o/d", option: true }, nextState: "2" }, "D|qD|p": { action_: ["output", { type_: "bond", option: "-" }], nextState: "3" } }, amount2: { "1|3": { action_: "a=", nextState: "a" } }, letters: { "0|1|2|3|a|as|b|p|bp|o": { action_: "o=", nextState: "o" }, "q|dq": { action_: ["output", "o="], nextState: "o" }, "d|D|qd|qD": { action_: "o after d", nextState: "o" } }, digits: { o: { action_: "q=", nextState: "q" }, "d|D": { action_: "q=", nextState: "dq" }, q: { action_: ["output", "o="], nextState: "o" }, a: { action_: "o=", nextState: "o" } }, "space A": { "b|p|bp": {} }, space: { a: { nextState: "as" }, 0: { action_: "sb=false" }, "1|2": { action_: "sb=true" }, "r|rt|rd|rdt|rdq": { action_: "output", nextState: "0" }, "*": { action_: ["output", "sb=true"], nextState: "1" } }, "1st-level escape": { "1|2": { action_: ["output", { type_: "insert+p1", option: "1st-level escape" }] }, "*": { action_: ["output", { type_: "insert+p1", option: "1st-level escape" }], nextState: "0" } }, "[(...)]": { "r|rt": { action_: "rd=", nextState: "rd" }, "rd|rdt": { action_: "rq=", nextState: "rdq" } }, "...": { "o|d|D|dq|qd|qD": { action_: ["output", { type_: "bond", option: "..." }], nextState: "3" }, "*": { action_: [{ type_: "output", option: 1 }, { type_: "insert", option: "ellipsis" }], nextState: "1" } }, ". |* ": { "*": { action_: ["output", { type_: "insert", option: "addition compound" }], nextState: "1" } }, "state of aggregation $": { "*": { action_: ["output", "state of aggregation"], nextState: "1" } }, "{[(": { "a|as|o": { action_: ["o=", "output", "parenthesisLevel++"], nextState: "2" }, "0|1|2|3": { action_: ["o=", "output", "parenthesisLevel++"], nextState: "2" }, "*": { action_: ["output", "o=", "output", "parenthesisLevel++"], nextState: "2" } }, ")]}": { "0|1|2|3|b|p|bp|o": { action_: ["o=", "parenthesisLevel--"], nextState: "o" }, "a|as|d|D|q|qd|qD|dq": { action_: ["output", "o=", "parenthesisLevel--"], nextState: "o" } }, ", ": { "*": { action_: ["output", "comma"], nextState: "0" } }, "^_": { "*": {} }, "^{(...)}|^($...$)": { "0|1|2|as": { action_: "b=", nextState: "b" }, p: { action_: "b=", nextState: "bp" }, "3|o": { action_: "d= kv", nextState: "D" }, q: { action_: "d=", nextState: "qD" }, "d|D|qd|qD|dq": { action_: ["output", "d="], nextState: "D" } }, "^a|^\\x{}{}|^\\x{}|^\\x|'": { "0|1|2|as": { action_: "b=", nextState: "b" }, p: { action_: "b=", nextState: "bp" }, "3|o": { action_: "d= kv", nextState: "d" }, q: { action_: "d=", nextState: "qd" }, "d|qd|D|qD": { action_: "d=" }, dq: { action_: ["output", "d="], nextState: "d" } }, "_{(state of aggregation)}$": { "d|D|q|qd|qD|dq": { action_: ["output", "q="], nextState: "q" } }, "_{(...)}|_($...$)|_9|_\\x{}{}|_\\x{}|_\\x": { "0|1|2|as": { action_: "p=", nextState: "p" }, b: { action_: "p=", nextState: "bp" }, "3|o": { action_: "q=", nextState: "q" }, "d|D": { action_: "q=", nextState: "dq" }, "q|qd|qD|dq": { action_: ["output", "q="], nextState: "q" } }, "=<>": { "0|1|2|3|a|as|o|q|d|D|qd|qD|dq": { action_: [{ type_: "output", option: 2 }, "bond"], nextState: "3" } }, "#": { "0|1|2|3|a|as|o": { action_: [{ type_: "output", option: 2 }, { type_: "bond", option: "#" }], nextState: "3" } }, "{}": { "*": { action_: { type_: "output", option: 1 }, nextState: "1" } }, "{...}": { "0|1|2|3|a|as|b|p|bp": { action_: "o=", nextState: "o" }, "o|d|D|q|qd|qD|dq": { action_: ["output", "o="], nextState: "o" } }, "$...$": { a: { action_: "a=" }, "0|1|2|3|as|b|p|bp|o": { action_: "o=", nextState: "o" }, "as|o": { action_: "o=" }, "q|d|D|qd|qD|dq": { action_: ["output", "o="], nextState: "o" } }, "\\bond{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "bond"], nextState: "3" } }, "\\frac{(...)}": { "*": { action_: [{ type_: "output", option: 1 }, "frac-output"], nextState: "3" } }, "\\overset{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "overset-output"], nextState: "3" } }, "\\underset{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "underset-output"], nextState: "3" } }, "\\underbrace{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "underbrace-output"], nextState: "3" } }, "\\color{(...)}{(...)}1|\\color(...){(...)}2": { "*": { action_: [{ type_: "output", option: 2 }, "color-output"], nextState: "3" } }, "\\color{(...)}0": { "*": { action_: [{ type_: "output", option: 2 }, "color0-output"] } }, "\\ce{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "ce"], nextState: "3" } }, "\\,": { "*": { action_: [{ type_: "output", option: 1 }, "copy"], nextState: "1" } }, "\\x{}{}|\\x{}|\\x": { "0|1|2|3|a|as|b|p|bp|o|c0": { action_: ["o=", "output"], nextState: "3" }, "*": { action_: ["output", "o=", "output"], nextState: "3" } }, others: { "*": { action_: [{ type_: "output", option: 1 }, "copy"], nextState: "3" } }, else2: { a: { action_: "a to o", nextState: "o", revisit: true }, as: { action_: ["output", "sb=true"], nextState: "1", revisit: true }, "r|rt|rd|rdt|rdq": { action_: ["output"], nextState: "0", revisit: true }, "*": { action_: ["output", "copy"], nextState: "3" } } }), actions: { "o after d": function(e3, t3) {
          var a2;
          if ((e3.d || "").match(/^[0-9]+$/)) {
            var r2 = e3.d;
            e3.d = void 0, a2 = this.output(e3), e3.b = r2;
          } else a2 = this.output(e3);
          return xa.actions["o="](e3, t3), a2;
        }, "d= kv": function(e3, t3) {
          e3.d = t3, e3.dType = "kv";
        }, "charge or bond": function(e3, t3) {
          if (e3.beginsWithBond) {
            var a2 = [];
            return xa.concatArray(a2, this.output(e3)), xa.concatArray(a2, xa.actions.bond(e3, t3, "-")), a2;
          }
          e3.d = t3;
        }, "- after o/d": function(e3, t3, a2) {
          var r2 = xa.patterns.match_("orbital", e3.o || ""), i2 = xa.patterns.match_("one lowercase greek letter $", e3.o || ""), o2 = xa.patterns.match_("one lowercase latin letter $", e3.o || ""), n2 = xa.patterns.match_("$one lowercase latin letter$ $", e3.o || ""), s2 = "-" === t3 && (r2 && "" === r2.remainder || i2 || o2 || n2);
          s2 && !e3.a && !e3.b && !e3.p && !e3.d && !e3.q && !r2 && o2 && (e3.o = "$" + e3.o + "$");
          var l2 = [];
          return s2 ? (xa.concatArray(l2, this.output(e3)), l2.push({ type_: "hyphen" })) : (r2 = xa.patterns.match_("digits", e3.d || ""), a2 && r2 && "" === r2.remainder ? (xa.concatArray(l2, xa.actions["d="](e3, t3)), xa.concatArray(l2, this.output(e3))) : (xa.concatArray(l2, this.output(e3)), xa.concatArray(l2, xa.actions.bond(e3, t3, "-")))), l2;
        }, "a to o": function(e3) {
          e3.o = e3.a, e3.a = void 0;
        }, "sb=true": function(e3) {
          e3.sb = true;
        }, "sb=false": function(e3) {
          e3.sb = false;
        }, "beginsWithBond=true": function(e3) {
          e3.beginsWithBond = true;
        }, "beginsWithBond=false": function(e3) {
          e3.beginsWithBond = false;
        }, "parenthesisLevel++": function(e3) {
          e3.parenthesisLevel++;
        }, "parenthesisLevel--": function(e3) {
          e3.parenthesisLevel--;
        }, "state of aggregation": function(e3, t3) {
          return { type_: "state of aggregation", p1: xa.go(t3, "o") };
        }, comma: function(e3, t3) {
          var a2 = t3.replace(/\s*$/, "");
          return a2 !== t3 && 0 === e3.parenthesisLevel ? { type_: "comma enumeration L", p1: a2 } : { type_: "comma enumeration M", p1: a2 };
        }, output: function(e3, t3, a2) {
          var r2, i2, o2;
          for (var n2 in e3.r ? (i2 = "M" === e3.rdt ? xa.go(e3.rd, "tex-math") : "T" === e3.rdt ? [{ type_: "text", p1: e3.rd || "" }] : xa.go(e3.rd), o2 = "M" === e3.rqt ? xa.go(e3.rq, "tex-math") : "T" === e3.rqt ? [{ type_: "text", p1: e3.rq || "" }] : xa.go(e3.rq), r2 = { type_: "arrow", r: e3.r, rd: i2, rq: o2 }) : (r2 = [], !e3.a && !e3.b && !e3.p && !e3.o && !e3.q && !e3.d && !a2 || (e3.sb && r2.push({ type_: "entitySkip" }), e3.o || e3.q || e3.d || e3.b || e3.p || 2 === a2 ? e3.o || e3.q || e3.d || !e3.b && !e3.p ? e3.o && "kv" === e3.dType && xa.patterns.match_("d-oxidation$", e3.d || "") ? e3.dType = "oxidation" : e3.o && "kv" === e3.dType && !e3.q && (e3.dType = void 0) : (e3.o = e3.a, e3.d = e3.b, e3.q = e3.p, e3.a = e3.b = e3.p = void 0) : (e3.o = e3.a, e3.a = void 0), r2.push({ type_: "chemfive", a: xa.go(e3.a, "a"), b: xa.go(e3.b, "bd"), p: xa.go(e3.p, "pq"), o: xa.go(e3.o, "o"), q: xa.go(e3.q, "pq"), d: xa.go(e3.d, "oxidation" === e3.dType ? "oxidation" : "bd"), dType: e3.dType }))), e3) "parenthesisLevel" !== n2 && "beginsWithBond" !== n2 && delete e3[n2];
          return r2;
        }, "oxidation-output": function(e3, t3) {
          var a2 = ["{"];
          return xa.concatArray(a2, xa.go(t3, "oxidation")), a2.push("}"), a2;
        }, "frac-output": function(e3, t3) {
          return { type_: "frac-ce", p1: xa.go(t3[0]), p2: xa.go(t3[1]) };
        }, "overset-output": function(e3, t3) {
          return { type_: "overset", p1: xa.go(t3[0]), p2: xa.go(t3[1]) };
        }, "underset-output": function(e3, t3) {
          return { type_: "underset", p1: xa.go(t3[0]), p2: xa.go(t3[1]) };
        }, "underbrace-output": function(e3, t3) {
          return { type_: "underbrace", p1: xa.go(t3[0]), p2: xa.go(t3[1]) };
        }, "color-output": function(e3, t3) {
          return { type_: "color", color1: t3[0], color2: xa.go(t3[1]) };
        }, "r=": function(e3, t3) {
          e3.r = t3;
        }, "rdt=": function(e3, t3) {
          e3.rdt = t3;
        }, "rd=": function(e3, t3) {
          e3.rd = t3;
        }, "rqt=": function(e3, t3) {
          e3.rqt = t3;
        }, "rq=": function(e3, t3) {
          e3.rq = t3;
        }, operator: function(e3, t3, a2) {
          return { type_: "operator", kind_: a2 || t3 };
        } } }, a: { transitions: xa.createTransitions({ empty: { "*": {} }, "1/2$": { 0: { action_: "1/2" } }, else: { 0: { nextState: "1", revisit: true } }, "$(...)$": { "*": { action_: "tex-math tight", nextState: "1" } }, ",": { "*": { action_: { type_: "insert", option: "commaDecimal" } } }, else2: { "*": { action_: "copy" } } }), actions: {} }, o: { transitions: xa.createTransitions({ empty: { "*": {} }, "1/2$": { 0: { action_: "1/2" } }, else: { 0: { nextState: "1", revisit: true } }, letters: { "*": { action_: "rm" } }, "\\ca": { "*": { action_: { type_: "insert", option: "circa" } } }, "\\x{}{}|\\x{}|\\x": { "*": { action_: "copy" } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "{(...)}": { "*": { action_: "{text}" } }, else2: { "*": { action_: "copy" } } }), actions: {} }, text: { transitions: xa.createTransitions({ empty: { "*": { action_: "output" } }, "{...}": { "*": { action_: "text=" } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "\\greek": { "*": { action_: ["output", "rm"] } }, "\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: ["output", "copy"] } }, else: { "*": { action_: "text=" } } }), actions: { output: function(e3) {
          if (e3.text_) {
            var t3 = { type_: "text", p1: e3.text_ };
            for (var a2 in e3) delete e3[a2];
            return t3;
          }
        } } }, pq: { transitions: xa.createTransitions({ empty: { "*": {} }, "state of aggregation $": { "*": { action_: "state of aggregation" } }, i$: { 0: { nextState: "!f", revisit: true } }, "(KV letters),": { 0: { action_: "rm", nextState: "0" } }, formula$: { 0: { nextState: "f", revisit: true } }, "1/2$": { 0: { action_: "1/2" } }, else: { 0: { nextState: "!f", revisit: true } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "{(...)}": { "*": { action_: "text" } }, "a-z": { f: { action_: "tex-math" } }, letters: { "*": { action_: "rm" } }, "-9.,9": { "*": { action_: "9,9" } }, ",": { "*": { action_: { type_: "insert+p1", option: "comma enumeration S" } } }, "\\color{(...)}{(...)}1|\\color(...){(...)}2": { "*": { action_: "color-output" } }, "\\color{(...)}0": { "*": { action_: "color0-output" } }, "\\ce{(...)}": { "*": { action_: "ce" } }, "\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "copy" } }, else2: { "*": { action_: "copy" } } }), actions: { "state of aggregation": function(e3, t3) {
          return { type_: "state of aggregation subscript", p1: xa.go(t3, "o") };
        }, "color-output": function(e3, t3) {
          return { type_: "color", color1: t3[0], color2: xa.go(t3[1], "pq") };
        } } }, bd: { transitions: xa.createTransitions({ empty: { "*": {} }, x$: { 0: { nextState: "!f", revisit: true } }, formula$: { 0: { nextState: "f", revisit: true } }, else: { 0: { nextState: "!f", revisit: true } }, "-9.,9 no missing 0": { "*": { action_: "9,9" } }, ".": { "*": { action_: { type_: "insert", option: "electron dot" } } }, "a-z": { f: { action_: "tex-math" } }, x: { "*": { action_: { type_: "insert", option: "KV x" } } }, letters: { "*": { action_: "rm" } }, "'": { "*": { action_: { type_: "insert", option: "prime" } } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "{(...)}": { "*": { action_: "text" } }, "\\color{(...)}{(...)}1|\\color(...){(...)}2": { "*": { action_: "color-output" } }, "\\color{(...)}0": { "*": { action_: "color0-output" } }, "\\ce{(...)}": { "*": { action_: "ce" } }, "\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "copy" } }, else2: { "*": { action_: "copy" } } }), actions: { "color-output": function(e3, t3) {
          return { type_: "color", color1: t3[0], color2: xa.go(t3[1], "bd") };
        } } }, oxidation: { transitions: xa.createTransitions({ empty: { "*": {} }, "roman numeral": { "*": { action_: "roman-numeral" } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, else: { "*": { action_: "copy" } } }), actions: { "roman-numeral": function(e3, t3) {
          return { type_: "roman numeral", p1: t3 || "" };
        } } }, "tex-math": { transitions: xa.createTransitions({ empty: { "*": { action_: "output" } }, "\\ce{(...)}": { "*": { action_: ["output", "ce"] } }, "{...}|\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "o=" } }, else: { "*": { action_: "o=" } } }), actions: { output: function(e3) {
          if (e3.o) {
            var t3 = { type_: "tex-math", p1: e3.o };
            for (var a2 in e3) delete e3[a2];
            return t3;
          }
        } } }, "tex-math tight": { transitions: xa.createTransitions({ empty: { "*": { action_: "output" } }, "\\ce{(...)}": { "*": { action_: ["output", "ce"] } }, "{...}|\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "o=" } }, "-|+": { "*": { action_: "tight operator" } }, else: { "*": { action_: "o=" } } }), actions: { "tight operator": function(e3, t3) {
          e3.o = (e3.o || "") + "{" + t3 + "}";
        }, output: function(e3) {
          if (e3.o) {
            var t3 = { type_: "tex-math", p1: e3.o };
            for (var a2 in e3) delete e3[a2];
            return t3;
          }
        } } }, "9,9": { transitions: xa.createTransitions({ empty: { "*": {} }, ",": { "*": { action_: "comma" } }, else: { "*": { action_: "copy" } } }), actions: { comma: function() {
          return { type_: "commaDecimal" };
        } } }, pu: { transitions: xa.createTransitions({ empty: { "*": { action_: "output" } }, space$: { "*": { action_: ["output", "space"] } }, "{[(|)]}": { "0|a": { action_: "copy" } }, "(-)(9)^(-9)": { 0: { action_: "number^", nextState: "a" } }, "(-)(9.,9)(e)(99)": { 0: { action_: "enumber", nextState: "a" } }, space: { "0|a": {} }, "pm-operator": { "0|a": { action_: { type_: "operator", option: "\\pm" }, nextState: "0" } }, operator: { "0|a": { action_: "copy", nextState: "0" } }, "//": { d: { action_: "o=", nextState: "/" } }, "/": { d: { action_: "o=", nextState: "/" } }, "{...}|else": { "0|d": { action_: "d=", nextState: "d" }, a: { action_: ["space", "d="], nextState: "d" }, "/|q": { action_: "q=", nextState: "q" } } }), actions: { enumber: function(e3, t3) {
          var a2 = [];
          return "+-" === t3[0] || "+/-" === t3[0] ? a2.push("\\pm ") : t3[0] && a2.push(t3[0]), t3[1] && (xa.concatArray(a2, xa.go(t3[1], "pu-9,9")), t3[2] && (t3[2].match(/[,.]/) ? xa.concatArray(a2, xa.go(t3[2], "pu-9,9")) : a2.push(t3[2])), t3[3] = t3[4] || t3[3], t3[3] && (t3[3] = t3[3].trim(), "e" === t3[3] || "*" === t3[3].substr(0, 1) ? a2.push({ type_: "cdot" }) : a2.push({ type_: "times" }))), t3[3] && a2.push("10^{" + t3[5] + "}"), a2;
        }, "number^": function(e3, t3) {
          var a2 = [];
          return "+-" === t3[0] || "+/-" === t3[0] ? a2.push("\\pm ") : t3[0] && a2.push(t3[0]), xa.concatArray(a2, xa.go(t3[1], "pu-9,9")), a2.push("^{" + t3[2] + "}"), a2;
        }, operator: function(e3, t3, a2) {
          return { type_: "operator", kind_: a2 || t3 };
        }, space: function() {
          return { type_: "pu-space-1" };
        }, output: function(e3) {
          var t3, a2 = xa.patterns.match_("{(...)}", e3.d || "");
          a2 && "" === a2.remainder && (e3.d = a2.match_);
          var r2 = xa.patterns.match_("{(...)}", e3.q || "");
          if (r2 && "" === r2.remainder && (e3.q = r2.match_), e3.d && (e3.d = e3.d.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C"), e3.d = e3.d.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F")), e3.q) {
            e3.q = e3.q.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C"), e3.q = e3.q.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
            var i2 = { d: xa.go(e3.d, "pu"), q: xa.go(e3.q, "pu") };
            "//" === e3.o ? t3 = { type_: "pu-frac", p1: i2.d, p2: i2.q } : (t3 = i2.d, i2.d.length > 1 || i2.q.length > 1 ? t3.push({ type_: " / " }) : t3.push({ type_: "/" }), xa.concatArray(t3, i2.q));
          } else t3 = xa.go(e3.d, "pu-2");
          for (var o2 in e3) delete e3[o2];
          return t3;
        } } }, "pu-2": { transitions: xa.createTransitions({ empty: { "*": { action_: "output" } }, "*": { "*": { action_: ["output", "cdot"], nextState: "0" } }, "\\x": { "*": { action_: "rm=" } }, space: { "*": { action_: ["output", "space"], nextState: "0" } }, "^{(...)}|^(-1)": { 1: { action_: "^(-1)" } }, "-9.,9": { 0: { action_: "rm=", nextState: "0" }, 1: { action_: "^(-1)", nextState: "0" } }, "{...}|else": { "*": { action_: "rm=", nextState: "1" } } }), actions: { cdot: function() {
          return { type_: "tight cdot" };
        }, "^(-1)": function(e3, t3) {
          e3.rm += "^{" + t3 + "}";
        }, space: function() {
          return { type_: "pu-space-2" };
        }, output: function(e3) {
          var t3 = [];
          if (e3.rm) {
            var a2 = xa.patterns.match_("{(...)}", e3.rm || "");
            t3 = a2 && "" === a2.remainder ? xa.go(a2.match_, "pu") : { type_: "rm", p1: e3.rm };
          }
          for (var r2 in e3) delete e3[r2];
          return t3;
        } } }, "pu-9,9": { transitions: xa.createTransitions({ empty: { 0: { action_: "output-0" }, o: { action_: "output-o" } }, ",": { 0: { action_: ["output-0", "comma"], nextState: "o" } }, ".": { 0: { action_: ["output-0", "copy"], nextState: "o" } }, else: { "*": { action_: "text=" } } }), actions: { comma: function() {
          return { type_: "commaDecimal" };
        }, "output-0": function(e3) {
          var t3 = [];
          if (e3.text_ = e3.text_ || "", e3.text_.length > 4) {
            var a2 = e3.text_.length % 3;
            0 === a2 && (a2 = 3);
            for (var r2 = e3.text_.length - 3; r2 > 0; r2 -= 3) t3.push(e3.text_.substr(r2, 3)), t3.push({ type_: "1000 separator" });
            t3.push(e3.text_.substr(0, a2)), t3.reverse();
          } else t3.push(e3.text_);
          for (var i2 in e3) delete e3[i2];
          return t3;
        }, "output-o": function(e3) {
          var t3 = [];
          if (e3.text_ = e3.text_ || "", e3.text_.length > 4) {
            for (var a2 = e3.text_.length - 3, r2 = 0; r2 < a2; r2 += 3) t3.push(e3.text_.substr(r2, 3)), t3.push({ type_: "1000 separator" });
            t3.push(e3.text_.substr(r2));
          } else t3.push(e3.text_);
          for (var i2 in e3) delete e3[i2];
          return t3;
        } } } };
        var wa, _a = { go: function(e3, t3) {
          if (!e3) return "";
          for (var a2 = "", r2 = false, i2 = 0; i2 < e3.length; i2++) {
            var o2 = e3[i2];
            "string" == typeof o2 ? a2 += o2 : (a2 += _a._go2(o2), "1st-level escape" === o2.type_ && (r2 = true));
          }
          return !t3 && !r2 && a2 && (a2 = "{" + a2 + "}"), a2;
        }, _goInner: function(e3) {
          return e3 && _a.go(e3, true);
        }, _go2: function(e3) {
          var t3;
          switch (e3.type_) {
            case "chemfive":
              t3 = "";
              var a2 = { a: _a._goInner(e3.a), b: _a._goInner(e3.b), p: _a._goInner(e3.p), o: _a._goInner(e3.o), q: _a._goInner(e3.q), d: _a._goInner(e3.d) };
              a2.a && (a2.a.match(/^[+\-]/) && (a2.a = "{" + a2.a + "}"), t3 += a2.a + "\\,"), (a2.b || a2.p) && (t3 += "{\\vphantom{X}}", t3 += "^{\\hphantom{" + (a2.b || "") + "}}_{\\hphantom{" + (a2.p || "") + "}}", t3 += "{\\vphantom{X}}", t3 += "^{\\smash[t]{\\vphantom{2}}\\mathllap{" + (a2.b || "") + "}}", t3 += "_{\\vphantom{2}\\mathllap{\\smash[t]{" + (a2.p || "") + "}}}"), a2.o && (a2.o.match(/^[+\-]/) && (a2.o = "{" + a2.o + "}"), t3 += a2.o), "kv" === e3.dType ? ((a2.d || a2.q) && (t3 += "{\\vphantom{X}}"), a2.d && (t3 += "^{" + a2.d + "}"), a2.q && (t3 += "_{\\smash[t]{" + a2.q + "}}")) : "oxidation" === e3.dType ? (a2.d && (t3 += "{\\vphantom{X}}", t3 += "^{" + a2.d + "}"), a2.q && (t3 += "{\\vphantom{X}}", t3 += "_{\\smash[t]{" + a2.q + "}}")) : (a2.q && (t3 += "{\\vphantom{X}}", t3 += "_{\\smash[t]{" + a2.q + "}}"), a2.d && (t3 += "{\\vphantom{X}}", t3 += "^{" + a2.d + "}"));
              break;
            case "rm":
            case "roman numeral":
              t3 = "\\mathrm{" + e3.p1 + "}";
              break;
            case "text":
              e3.p1.match(/[\^_]/) ? (e3.p1 = e3.p1.replace(" ", "~").replace("-", "\\text{-}"), t3 = "\\mathrm{" + e3.p1 + "}") : t3 = "\\text{" + e3.p1 + "}";
              break;
            case "state of aggregation":
              t3 = "\\mskip2mu " + _a._goInner(e3.p1);
              break;
            case "state of aggregation subscript":
              t3 = "\\mskip1mu " + _a._goInner(e3.p1);
              break;
            case "bond":
              if (!(t3 = _a._getBond(e3.kind_))) throw ["MhchemErrorBond", "mhchem Error. Unknown bond type (" + e3.kind_ + ")"];
              break;
            case "frac":
              var r2 = "\\frac{" + e3.p1 + "}{" + e3.p2 + "}";
              t3 = "\\mathchoice{\\textstyle" + r2 + "}{" + r2 + "}{" + r2 + "}{" + r2 + "}";
              break;
            case "pu-frac":
              var i2 = "\\frac{" + _a._goInner(e3.p1) + "}{" + _a._goInner(e3.p2) + "}";
              t3 = "\\mathchoice{\\textstyle" + i2 + "}{" + i2 + "}{" + i2 + "}{" + i2 + "}";
              break;
            case "tex-math":
            case "1st-level escape":
              t3 = e3.p1 + " ";
              break;
            case "frac-ce":
              t3 = "\\frac{" + _a._goInner(e3.p1) + "}{" + _a._goInner(e3.p2) + "}";
              break;
            case "overset":
              t3 = "\\overset{" + _a._goInner(e3.p1) + "}{" + _a._goInner(e3.p2) + "}";
              break;
            case "underset":
              t3 = "\\underset{" + _a._goInner(e3.p1) + "}{" + _a._goInner(e3.p2) + "}";
              break;
            case "underbrace":
              t3 = "\\underbrace{" + _a._goInner(e3.p1) + "}_{" + _a._goInner(e3.p2) + "}";
              break;
            case "color":
              t3 = "{\\color{" + e3.color1 + "}{" + _a._goInner(e3.color2) + "}}";
              break;
            case "color0":
              t3 = "\\color{" + e3.color + "}";
              break;
            case "arrow":
              var o2 = { rd: _a._goInner(e3.rd), rq: _a._goInner(e3.rq) }, n2 = "\\x" + _a._getArrow(e3.r);
              o2.rq && (n2 += "[{" + o2.rq + "}]"), t3 = n2 += o2.rd ? "{" + o2.rd + "}" : "{}";
              break;
            case "operator":
              t3 = _a._getOperator(e3.kind_);
              break;
            case "space":
              t3 = " ";
              break;
            case "entitySkip":
            case "pu-space-1":
              t3 = "~";
              break;
            case "pu-space-2":
              t3 = "\\mkern3mu ";
              break;
            case "1000 separator":
              t3 = "\\mkern2mu ";
              break;
            case "commaDecimal":
              t3 = "{,}";
              break;
            case "comma enumeration L":
              t3 = "{" + e3.p1 + "}\\mkern6mu ";
              break;
            case "comma enumeration M":
              t3 = "{" + e3.p1 + "}\\mkern3mu ";
              break;
            case "comma enumeration S":
              t3 = "{" + e3.p1 + "}\\mkern1mu ";
              break;
            case "hyphen":
              t3 = "\\text{-}";
              break;
            case "addition compound":
              t3 = "\\,{\\cdot}\\,";
              break;
            case "electron dot":
              t3 = "\\mkern1mu \\bullet\\mkern1mu ";
              break;
            case "KV x":
              t3 = "{\\times}";
              break;
            case "prime":
              t3 = "\\prime ";
              break;
            case "cdot":
              t3 = "\\cdot ";
              break;
            case "tight cdot":
              t3 = "\\mkern1mu{\\cdot}\\mkern1mu ";
              break;
            case "times":
              t3 = "\\times ";
              break;
            case "circa":
              t3 = "{\\sim}";
              break;
            case "^":
              t3 = "uparrow";
              break;
            case "v":
              t3 = "downarrow";
              break;
            case "ellipsis":
              t3 = "\\ldots ";
              break;
            case "/":
              t3 = "/";
              break;
            case " / ":
              t3 = "\\,/\\,";
              break;
            default:
              throw ["MhchemBugT", "mhchem bug T. Please report."];
          }
          return t3;
        }, _getArrow: function(e3) {
          switch (e3) {
            case "->":
            case "→":
            case "⟶":
              return "rightarrow";
            case "<-":
              return "leftarrow";
            case "<->":
              return "leftrightarrow";
            case "<-->":
              return "rightleftarrows";
            case "<=>":
            case "⇌":
              return "rightleftharpoons";
            case "<=>>":
              return "rightequilibrium";
            case "<<=>":
              return "leftequilibrium";
            default:
              throw ["MhchemBugT", "mhchem bug T. Please report."];
          }
        }, _getBond: function(e3) {
          switch (e3) {
            case "-":
            case "1":
              return "{-}";
            case "=":
            case "2":
              return "{=}";
            case "#":
            case "3":
              return "{\\equiv}";
            case "~":
              return "{\\tripledash}";
            case "~-":
              return "{\\mathrlap{\\raisebox{-.1em}{$-$}}\\raisebox{.1em}{$\\tripledash$}}";
            case "~=":
            case "~--":
              return "{\\mathrlap{\\raisebox{-.2em}{$-$}}\\mathrlap{\\raisebox{.2em}{$\\tripledash$}}-}";
            case "-~-":
              return "{\\mathrlap{\\raisebox{-.2em}{$-$}}\\mathrlap{\\raisebox{.2em}{$-$}}\\tripledash}";
            case "...":
              return "{{\\cdot}{\\cdot}{\\cdot}}";
            case "....":
              return "{{\\cdot}{\\cdot}{\\cdot}{\\cdot}}";
            case "->":
              return "{\\rightarrow}";
            case "<-":
              return "{\\leftarrow}";
            case "<":
              return "{<}";
            case ">":
              return "{>}";
            default:
              throw ["MhchemBugT", "mhchem bug T. Please report."];
          }
        }, _getOperator: function(e3) {
          switch (e3) {
            case "+":
              return " {}+{} ";
            case "-":
              return " {}-{} ";
            case "=":
              return " {}={} ";
            case "<":
              return " {}<{} ";
            case ">":
              return " {}>{} ";
            case "<<":
              return " {}\\ll{} ";
            case ">>":
              return " {}\\gg{} ";
            case "\\pm":
              return " {}\\pm{} ";
            case "\\approx":
            case "$\\approx$":
              return " {}\\approx{} ";
            case "v":
            case "(v)":
              return " \\downarrow{} ";
            case "^":
            case "(^)":
              return " \\uparrow{} ";
            default:
              throw ["MhchemBugT", "mhchem bug T. Please report."];
          }
        } }, Sa = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("delim", a2, { command: e3, style: null == r2 ? void 0 : r2.style }), this.value = t3, this.size = null == r2 ? void 0 : r2.size;
          }
          static fromJson(e3, t3) {
            return new Sa(e3.command, e3.delim, t3, e3);
          }
          toJson() {
            return S(_({}, super.toJson()), { delim: this.value, size: this.size });
          }
          render(e3) {
            let t3 = new dt(null);
            return t3.delim = this.value, t3;
          }
          serialize(e3) {
            return 1 === this.value.length ? this.command + this.value : `${this.command}{${this.value}}`;
          }
        }, Ma = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("sizeddelim", a2, { command: e3, style: r2.style }), this.value = t3, this.delimClass = r2.delimClass, this.size = r2.size;
          }
          static fromJson(e3, t3) {
            return new Ma(e3.command, e3.delim, t3, e3);
          }
          toJson() {
            return S(_({}, super.toJson()), { delim: this.value, size: this.size, delimClass: this.delimClass });
          }
          render(e3) {
            let t3 = function(e4, t4, a2, r2) {
              var i2;
              return void 0 === e4 || "." === e4 ? Qt(a2, null != (i2 = r2.type) ? i2 : "minner", r2.classes) : ("<" === e4 || "\\lt" === e4 || "⟨" === e4 ? e4 = "\\langle" : (">" === e4 || "\\gt" === e4 || "⟩" === e4) && (e4 = "\\rangle"), jt.has(e4) || Ht.has(e4) ? Rt(e4, t4, false, a2, r2) : Vt.has(e4) ? It(e4, Wt[t4], false, a2, r2) : null);
            }(this.value, this.size, e3, { classes: this.delimClass });
            return t3 ? (t3 = this.bind(e3, t3), this.caret && (t3.caret = this.caret), t3) : null;
          }
          serialize(e3) {
            return 1 === this.value.length ? this.command + this.value : `${this.command}{${this.value}}`;
          }
        }, La = class extends Et {
          constructor(e3, t3, a2, r2, i2) {
            super("enclose", r2, { command: e3, style: i2.style }), this.body = t3, this.backgroundcolor = i2.backgroundcolor, a2.updiagonalarrow && (a2.updiagonalstrike = false), a2.box && (a2.left = false, a2.right = false, a2.bottom = false, a2.top = false), this.notation = a2, this.shadow = i2.shadow, this.strokeWidth = i2.strokeWidth, this.strokeStyle = i2.strokeStyle, this.svgStrokeStyle = i2.svgStrokeStyle, this.strokeColor = i2.strokeColor, this.borderStyle = i2.borderStyle, this.padding = i2.padding, this.captureSelection = true;
          }
          static fromJson(e3, t3) {
            return new La(e3.command, e3.body, e3.notation, t3, e3);
          }
          toJson() {
            let e3 = {};
            return this.notation.downdiagonalstrike && (e3.downdiagonalstrike = true), this.notation.updiagonalstrike && (e3.downdiagonalstrike = true), this.notation.verticalstrike && (e3.downdiagonalstrike = true), this.notation.horizontalstrike && (e3.downdiagonalstrike = true), this.notation.updiagonalarrow && (e3.downdiagonalstrike = true), this.notation.right && (e3.downdiagonalstrike = true), this.notation.bottom && (e3.downdiagonalstrike = true), this.notation.left && (e3.downdiagonalstrike = true), this.notation.top && (e3.downdiagonalstrike = true), this.notation.circle && (e3.downdiagonalstrike = true), this.notation.roundedbox && (e3.downdiagonalstrike = true), this.notation.madruwb && (e3.downdiagonalstrike = true), this.notation.actuarial && (e3.downdiagonalstrike = true), this.notation.box && (e3.downdiagonalstrike = true), S(_({}, super.toJson()), { notation: e3, shadow: this.shadow, strokeWidth: this.strokeWidth, strokeStyle: this.strokeStyle, svgStrokeStyle: this.svgStrokeStyle, strokeColor: this.strokeColor, borderStyle: this.borderStyle, padding: this.padding });
          }
          serialize(e3) {
            var t3;
            let a2 = null != (t3 = this.command) ? t3 : "";
            if ("\\enclose" === this.command) {
              a2 += "{" + Object.keys(this.notation).join(" ") + "}";
              let e4 = "", t4 = "";
              this.backgroundcolor && "transparent" !== this.backgroundcolor && (e4 += t4 + 'mathbackground="' + this.backgroundcolor + '"', t4 = ","), this.shadow && "auto" !== this.shadow && (e4 += t4 + 'shadow="' + this.shadow + '"', t4 = ","), this.strokeWidth || "solid" !== this.strokeStyle ? (e4 += t4 + this.borderStyle, t4 = ",") : this.strokeColor && "currentColor" !== this.strokeColor && (e4 += t4 + 'mathcolor="' + this.strokeColor + '"', t4 = ","), e4 && (a2 += `[${e4}]`);
            }
            return a2 += `{${this.bodyToLatex(e3)}}`, a2;
          }
          render(e3) {
            var t3;
            let a2 = new Ye(e3, this.style), r2 = Et.createBox(a2, this.body);
            if (!r2) return null;
            let i2 = null != (t3 = Ge(this.padding && "auto" !== this.padding ? ha(this.padding, S(_({}, this.context), { registers: e3.registers })) : a2.getRegisterAsDimension("fboxsep"))) ? t3 : 0, o2 = function(e4) {
              if (!e4) return "1px";
              let t4 = e4.match(/([0-9][a-zA-Z\%]+)/);
              return null === t4 ? "1px" : t4[1];
            }(this.borderStyle), n2 = new dt(null, { classes: "ML__notation" });
            n2.setStyle("box-sizing", "border-box"), n2.setStyle("top", `calc(-${o2} / 2 - ${i2}em)`), n2.setStyle("left", `calc(-${o2} / 2 - ${i2}em)`), n2.setStyle("height", `calc(100% + ${2 * i2}em + 2 * ${o2})`), n2.height = r2.height + i2, n2.depth = r2.depth + i2, n2.setStyle("width", `calc(100% + ${2 * i2}em + 2 * ${o2})`), this.backgroundcolor && n2.setStyle("background-color", this.backgroundcolor), this.notation.box && n2.setStyle("border", this.borderStyle), this.notation.actuarial && (n2.setStyle("border-top", this.borderStyle), n2.setStyle("border-right", this.borderStyle)), this.notation.madruwb && (n2.setStyle("border-bottom", this.borderStyle), n2.setStyle("border-right", this.borderStyle)), this.notation.roundedbox && (n2.setStyle("border-radius", "8px"), n2.setStyle("border", this.borderStyle)), this.notation.circle && (n2.setStyle("border-radius", "50%"), n2.setStyle("border", this.borderStyle)), this.notation.top && n2.setStyle("border-top", this.borderStyle), this.notation.left && n2.setStyle("border-left", this.borderStyle), this.notation.right && n2.setStyle("border-right", this.borderStyle), this.notation.bottom && n2.setStyle("border-bottom", this.borderStyle);
            let s2 = "";
            if (this.notation.horizontalstrike && (s2 += '<line x1="3%"  y1="50%" x2="97%" y2="50%"', s2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, s2 += ' stroke-linecap="round"', this.svgStrokeStyle && (s2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), s2 += "/>"), this.notation.verticalstrike && (s2 += '<line x1="50%"  y1="3%" x2="50%" y2="97%"', s2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, s2 += ' stroke-linecap="round"', this.svgStrokeStyle && (s2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), s2 += "/>"), this.notation.updiagonalstrike && (s2 += '<line x1="3%"  y1="97%" x2="97%" y2="3%"', s2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, s2 += ' stroke-linecap="round"', this.svgStrokeStyle && (s2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), s2 += "/>"), this.notation.downdiagonalstrike && (s2 += '<line x1="3%"  y1="3%" x2="97%" y2="97%"', s2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, s2 += ' stroke-linecap="round"', this.svgStrokeStyle && (s2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), s2 += "/>"), s2) {
              let e4;
              "none" !== this.shadow && (e4 = "auto" === this.shadow ? "filter: drop-shadow(0 0 .5px rgba(255, 255, 255, .7)) drop-shadow(1px 1px 2px #333)" : "filter: drop-shadow(" + this.shadow + ")"), function(e5, t4, a3) {
                e5.svgOverlay = t4, e5.svgStyle = a3;
              }(n2, s2, e4);
            }
            let l2 = new dt([n2, r2]);
            return l2.setStyle("position", "relative"), l2.setStyle("display", "inline"), l2.height = r2.height + i2, l2.depth = r2.depth + i2, l2.left = i2, l2.right = i2, this.caret && (l2.caret = this.caret), l2.wrap(a2);
          }
        }, Ca = class extends Et {
          constructor(e3, t3, a2, r2, i2) {
            var o2, n2;
            super("genfrac", r2, { style: i2.style, command: e3, serialize: i2.serialize, displayContainsHighlight: true }), this.above = t3, this.below = a2, this.hasBarLine = null == (o2 = null == i2 ? void 0 : i2.hasBarLine) || o2, this.continuousFraction = null != (n2 = null == i2 ? void 0 : i2.continuousFraction) && n2, this.numerPrefix = null == i2 ? void 0 : i2.numerPrefix, this.denomPrefix = null == i2 ? void 0 : i2.denomPrefix, this.mathstyleName = null == i2 ? void 0 : i2.mathstyleName, this.leftDelim = null == i2 ? void 0 : i2.leftDelim, this.rightDelim = null == i2 ? void 0 : i2.rightDelim;
          }
          static fromJson(e3, t3) {
            return new Ca(e3.command, e3.above, e3.below, t3, e3);
          }
          toJson() {
            let e3 = {};
            return this.continuousFraction && (e3.continuousFraction = true), this.numerPrefix && (e3.numerPrefix = this.numerPrefix), this.denomPrefix && (e3.denomPrefix = this.denomPrefix), this.leftDelim && (e3.leftDelim = this.leftDelim), this.rightDelim && (e3.rightDelim = this.rightDelim), this.hasBarLine || (e3.hasBarLine = false), this.mathstyleName && (e3.mathstyleName = this.mathstyleName), _(_({}, super.toJson()), e3);
          }
          serialize(e3) {
            return this.command + `{${this.aboveToLatex(e3)}}{${this.belowToLatex(e3)}}`;
          }
          get children() {
            if (this._children) return this._children;
            let e3 = [];
            if ("numerator-denominator" === this.context.fractionNavigationOrder) {
              for (let t3 of this.above) e3.push(...t3.children), e3.push(t3);
              for (let t3 of this.below) e3.push(...t3.children), e3.push(t3);
            } else {
              for (let t3 of this.below) e3.push(...t3.children), e3.push(t3);
              for (let t3 of this.above) e3.push(...t3.children), e3.push(t3);
            }
            return this._children = e3, e3;
          }
          render(e3) {
            var t3, a2;
            let r2, i2, o2 = new Ye(e3, this.style, this.mathstyleName), n2 = o2.metrics, s2 = new Ye(o2, this.style, this.continuousFraction ? "" : "numerator"), l2 = this.numerPrefix ? new dt([new dt(this.numerPrefix), Et.createBox(s2, this.above)], { isTight: s2.isTight, newList: true }) : null != (t3 = Et.createBox(s2, this.above, { newList: true })) ? t3 : new dt(null, { newList: true }), d2 = new Ye(o2, this.style, this.continuousFraction ? "" : "denominator"), c2 = this.denomPrefix ? new dt([new dt(this.denomPrefix), Et.createBox(d2, this.below, { newList: true })]) : null != (a2 = Et.createBox(d2, this.below, { newList: true })) ? a2 : new dt(null, { newList: true }), u2 = this.hasBarLine ? n2.defaultRuleThickness : 0, p2 = 0;
            o2.isDisplayStyle ? (r2 = n2.num1, p2 = u2 > 0 ? 3 * u2 : 7 * u2, i2 = n2.denom1) : (u2 > 0 ? (r2 = n2.num2, p2 = u2) : (r2 = n2.num3, p2 = 3 * u2), i2 = n2.denom2);
            let h2 = [];
            this.isSelected && h2.push("ML__selected");
            let m2, f2 = l2.depth, y2 = c2.height;
            if (u2 <= 0) {
              let e4 = r2 - f2 - (y2 - i2);
              e4 < p2 && (r2 += (p2 - e4) / 2, i2 += (p2 - e4) / 2), m2 = new gt({ individualShift: [{ box: l2, shift: -r2, classes: [...h2, "ML__center"] }, { box: c2, shift: i2, classes: [...h2, "ML__center"] }] }).wrap(o2);
            } else {
              let e4 = Ie + u2 / 2, t4 = Ie - u2 / 2;
              r2 < p2 + f2 + e4 && (r2 = p2 + f2 + e4), i2 < p2 + y2 - t4 && (i2 = p2 + y2 - t4);
              let a3 = new dt(null, { classes: "ML__frac-line", mode: this.mode, style: this.style });
              a3.height = u2 / 2, a3.depth = u2 / 2, m2 = new gt({ individualShift: [{ box: c2, shift: i2, classes: [...h2, "ML__center"] }, { box: a3, shift: u2 / 2 - t4, classes: h2 }, { box: l2, shift: -r2, classes: [...h2, "ML__center"] }] }).wrap(o2);
            }
            let b2 = o2.isDisplayStyle ? n2.delim1 : n2.delim2, g2 = this.isSelected ? " ML__selected" : "", v2 = this.leftDelim ? this.bind(e3, Zt("mopen", this.leftDelim, b2, true, e3, { style: this.style, mode: this.mode, classes: g2 })) : Qt(o2, "mopen"), k2 = null;
            k2 = this.continuousFraction ? new dt(null, { type: "mclose" }) : this.rightDelim ? this.bind(e3, Zt("mclose", this.rightDelim, b2, true, e3, { style: this.style, mode: this.mode, classes: g2 })) : Qt(o2, "mclose");
            let x2 = this.bind(e3, new dt([v2, m2, k2], { isTight: o2.isTight, type: "mord", classes: "mfrac" }));
            return x2 ? (this.caret && (x2.caret = this.caret), this.attachSupsub(e3, { base: x2 })) : null;
          }
        }, Aa = class extends Et {
          constructor(e3, t3, a2) {
            var r2;
            super("latex", t3, { value: e3, mode: "latex" }), this.isSuggestion = null != (r2 = null == a2 ? void 0 : a2.isSuggestion) && r2, this.isError = false, this.verbatimLatex = e3;
          }
          static fromJson(e3, t3) {
            let a2 = new Aa(e3.command, t3);
            return e3.isSuggestion && (a2.isSuggestion = true), e3.isError && (a2.isError = true), a2;
          }
          toJson() {
            let e3 = {};
            return this.isSuggestion && (e3.isSuggestion = true), this.isError && (e3.isError = true), _(_({}, super.toJson()), e3);
          }
          get computedStyle() {
            return {};
          }
          render(e3) {
            let t3 = new dt(this.value, { classes: this.isSuggestion ? "ML__suggestion" : this.isError ? "ML__error" : "", type: "latex", maxFontSize: 1 });
            return t3 ? (this.caret && (t3.caret = this.caret), this.bind(e3, t3)) : null;
          }
        }, Da = class extends Et {
          constructor(e3, t3) {
            super("latexgroup", t3, { mode: "latex" }), this.body = [...e3].map((e4) => new Aa(e4, t3)), this.skipBoundary = false;
          }
          static fromJson(e3, t3) {
            return new Da("", t3);
          }
          toJson() {
            return super.toJson();
          }
          render(e3) {
            let t3 = Et.createBox(e3, this.body, { newList: true });
            return t3 ? (this.caret && (t3.caret = this.caret), this.bind(e3, t3)) : null;
          }
          serialize(e3) {
            var t3, a2;
            return null != (a2 = null == (t3 = this.body) ? void 0 : t3.map((e4) => e4.value).join("")) ? a2 : "";
          }
        }, Ta = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("line", a2, { command: e3, style: r2.style }), this.skipBoundary = true, this.body = t3, this.position = r2.position;
          }
          static fromJson(e3, t3) {
            return new Ta(e3.command, e3.body, t3, e3);
          }
          toJson() {
            return S(_({}, super.toJson()), { position: this.position });
          }
          render(e3) {
            let t3 = new Ye(e3, this.style, "cramp"), a2 = Et.createBox(t3, this.body);
            if (!a2) return null;
            let r2, i2 = t3.metrics.defaultRuleThickness / t3.scalingFactor, o2 = new dt(null, { classes: this.position + "-line" });
            return o2.height = i2, o2.maxFontSize = 1.125 * i2 * t3.scalingFactor, r2 = "overline" === this.position ? new gt({ shift: 0, children: [{ box: a2 }, 3 * i2, { box: o2 }, i2] }) : new gt({ top: a2.height, children: [i2, { box: o2 }, 3 * i2, { box: a2 }] }), this.caret && (r2.caret = this.caret), new dt(r2, { classes: this.position, type: "mord" });
          }
        }, za = class extends Et {
          constructor(e3, t3, a2, r2) {
            var i2, o2, n2, s2;
            super(null != (i2 = r2.type) ? i2 : "mop", a2, { command: e3, style: r2.style, isFunction: null == r2 ? void 0 : r2.isFunction }), "string" == typeof t3 ? this.value = t3 : this.body = t3, this.captureSelection = null != (o2 = r2.captureSelection) && o2, this.hasArgument = null != (n2 = r2.hasArgument) && n2, this.variant = null == r2 ? void 0 : r2.variant, this.variantStyle = null == r2 ? void 0 : r2.variantStyle, this.subsupPlacement = null == r2 ? void 0 : r2.limits, this.isExtensibleSymbol = null != (s2 = null == r2 ? void 0 : r2.isExtensibleSymbol) && s2;
          }
          static fromJson(e3, t3) {
            return new za(e3.command, e3.body ? e3.body : e3.value, t3, e3);
          }
          toJson() {
            let e3 = super.toJson();
            return this.hasArgument && (e3.hasArgument = true), this.variant && (e3.variant = this.variant), this.variantStyle && (e3.variantStyle = this.variantStyle), this.subsupPlacement && (e3.limits = this.subsupPlacement), this.isExtensibleSymbol && (e3.isExtensibleSymbol = true), this.value && (e3.symbol = this.value), e3;
          }
          render(e3) {
            var t3;
            let a2, r2 = 0, i2 = 0;
            if (this.isExtensibleSymbol) {
              let t4 = e3.isDisplayStyle && "\\smallint" !== this.value;
              if (a2 = new dt(this.value, { fontFamily: t4 ? "Size2-Regular" : "Size1-Regular", classes: "op-symbol " + (t4 ? "large-op" : "small-op"), type: "mop", maxFontSize: e3.scalingFactor }), !a2) return null;
              a2.right = a2.italic, r2 = (a2.height - a2.depth) / 2 - Ie * e3.scalingFactor, i2 = a2.italic, a2.setStyle("color", this.style.color), a2.setStyle("background-color", this.style.backgroundColor);
            } else if (this.body) {
              if (a2 = Et.createBox(e3, this.body, { newList: true }), !a2) return null;
              a2.setStyle("color", this.style.color), a2.setStyle("background-color", this.style.backgroundColor);
            } else a2 = new dt(this.value, { type: "mop", mode: "math", maxFontSize: e3.scalingFactor, style: { color: this.style.color, backgroundColor: this.style.backgroundColor, letterShapeStyle: e3.letterShapeStyle, variant: this.variant, variantStyle: this.variantStyle } });
            this.isExtensibleSymbol && a2.setTop(r2);
            let o2 = a2;
            if (this.superscript || this.subscript) {
              let n2 = null != (t3 = this.subsupPlacement) ? t3 : "auto";
              o2 = "over-under" === n2 || "auto" === n2 && e3.isDisplayStyle ? this.attachLimits(e3, { base: a2, baseShift: r2, slant: i2 }) : this.attachSupsub(e3, { base: a2 });
            }
            return this.caret && (o2.caret = this.caret), new dt(this.bind(e3, o2), { type: "mop", classes: "op-group" + (this.isSelected ? " ML__selected" : "") });
          }
          serialize(e3) {
            if ("​" === this.value) return this.supsubToLatex(e3);
            let t3 = [];
            return t3.push(this.command), this.hasArgument && t3.push(`{${this.bodyToLatex(e3)}}`), this.explicitSubsupPlacement && ("over-under" === this.subsupPlacement && t3.push("\\limits"), "adjacent" === this.subsupPlacement && t3.push("\\nolimits"), "auto" === this.subsupPlacement && t3.push("\\displaylimits")), t3.push(this.supsubToLatex(e3)), Ct(t3);
          }
        }, Ba = class extends Et {
          constructor(e3, t3, a2, r2) {
            var i2, o2;
            super("overlap", a2, { command: e3, style: null == r2 ? void 0 : r2.style }), this.skipBoundary = true, this.body = "string" == typeof t3 ? [new Et("mord", a2, { value: t3 })] : t3, this.align = null != (i2 = null == r2 ? void 0 : r2.align) ? i2 : "left", this.boxType = null != (o2 = null == r2 ? void 0 : r2.boxType) ? o2 : "mord";
          }
          static fromJson(e3, t3) {
            return new Ba(e3.command, e3.body, t3, e3);
          }
          toJson() {
            let e3 = {};
            return this.align && (e3.align = this.align), this.boxType && (e3.boxType = this.boxType), _(_({}, super.toJson()), e3);
          }
          render(e3) {
            let t3 = Et.createBox(e3, this.body, { classes: "inner" });
            return t3 ? (this.caret && (t3.caret = this.caret), this.bind(e3, new dt([t3, new dt(null, { classes: "fix" })], { classes: "left" === this.align ? "llap" : "rlap", type: this.boxType }))) : null;
          }
        }, Ka = class extends Et {
          constructor(e3, t3, a2, r2) {
            var i2, o2, n2, s2;
            super("phantom", a2, { command: e3, style: r2.style }), this.captureSelection = true, this.body = t3, this.isInvisible = null != (i2 = r2.isInvisible) && i2, this.smashDepth = null != (o2 = r2.smashDepth) && o2, this.smashHeight = null != (n2 = r2.smashHeight) && n2, this.smashWidth = null != (s2 = r2.smashWidth) && s2;
          }
          static fromJson(e3, t3) {
            return new Ka(e3.command, e3.body, t3, e3);
          }
          toJson() {
            let e3 = {};
            return this.isInvisible && (e3.isInvisible = true), this.smashDepth && (e3.smashDepth = true), this.smashHeight && (e3.smashHeight = true), this.smashWidth && (e3.smashWidth = true), _(_({}, super.toJson()), e3);
          }
          render(e3) {
            let t3 = new Ye(e3, { isPhantom: true });
            if (!this.smashDepth && !this.smashHeight && !this.smashWidth) return Et.createBox(t3, this.body, { classes: "inner" });
            let a2 = Et.createBox(this.isInvisible ? t3 : e3, this.body);
            if (!a2) return null;
            if (this.smashWidth) {
              let t4 = new dt(null, { classes: "fix" });
              return new dt([a2, t4], { classes: "rlap" }).wrap(e3);
            }
            if (!this.smashHeight && !this.smashDepth) return a2;
            if (this.smashHeight && (a2.height = 0), this.smashDepth && (a2.depth = 0), a2.children) for (let e4 of a2.children) this.smashHeight && (e4.height = 0), this.smashDepth && (e4.depth = 0);
            return new gt({ firstBaseline: [{ box: a2 }] }, { type: "mord" }).wrap(e3);
          }
        }, Ea = class extends Et {
          constructor(e3, t3, a2) {
            var r2;
            super("rule", t3, { command: e3, style: a2.style }), this.shift = null != (r2 = a2.shift) ? r2 : { dimension: 0 }, this.height = a2.height, this.width = a2.width;
          }
          static fromJson(e3, t3) {
            return new Ea(e3.command, t3, e3);
          }
          toJson() {
            let e3 = { height: this.height, width: this.width };
            return this.shift && (e3.shift = this.shift), _(_({}, super.toJson()), e3);
          }
          render(e3) {
            let t3 = new Ye(e3, this.style, "textstyle"), a2 = Ge(this.shift), r2 = Ge(this.width), i2 = Ge(this.height), o2 = new dt(null, { classes: "rule", type: "mord" });
            return o2.setStyle("border-right-width", r2, "em"), o2.setStyle("border-top-width", i2, "em"), o2.setStyle("border-color", this.style.color), o2.setStyle("vertical-align", a2, "em"), this.isSelected && o2.setStyle("opacity", "50%"), o2.width = r2, o2.height = i2 + a2, o2.depth = -a2, this.bind(e3, o2), this.caret && (o2.caret = this.caret), o2.wrap(t3);
          }
          serialize(e3) {
            var t3;
            let a2 = null != (t3 = this.command) ? t3 : "";
            return this.shift && (a2 += `[${Ze(this.shift)}]`), a2 += `{${Ze(this.width)}}{${Ze(this.height)}}`, a2;
          }
        }, $a = class extends Et {
          constructor(e3, t3, a2) {
            var r2;
            super("surd", t3, { command: e3, mode: null != (r2 = a2.mode) ? r2 : "math", style: a2.style, displayContainsHighlight: true }), this.body = a2.body, this.above = a2.index;
          }
          static fromJson(e3, t3) {
            return new $a(e3.command, t3, S(_({}, e3), { index: e3.above }));
          }
          toJson() {
            return super.toJson();
          }
          serialize(e3) {
            let t3 = "";
            return this.above && (t3 += `[${this.aboveToLatex(e3)}]`), t3 += `{${this.bodyToLatex(e3)}}`, this.command + t3;
          }
          render(e3) {
            var t3;
            let a2 = new Ye(e3, this.style, "cramp"), r2 = null != (t3 = Et.createBox(a2, this.body, { style: this.style, newList: true })) ? t3 : new dt(null), i2 = a2.scalingFactor, o2 = a2.metrics.defaultRuleThickness / i2, n2 = e3.isDisplayStyle ? je : o2, s2 = new dt(null, { classes: "ML__sqrt-line", style: this.style, height: o2 }), l2 = i2 * (o2 + n2 / 4), d2 = Math.max(2 * i2 * n2, r2.height + r2.depth) + l2 + o2, c2 = new Ye(e3, this.style), u2 = this.isSelected ? " ML__selected" : "", p2 = this.bind(c2, new dt(Zt("", "\\surd", d2, false, c2, { classes: u2 }), { classes: "ML__sqrt-sign" + u2, style: this.style }));
            if (!p2) return null;
            let h2 = p2.height + p2.depth - o2;
            h2 > r2.height + r2.depth + l2 && (l2 = (l2 + h2 - (r2.height + r2.depth)) / 2), p2.setTop(p2.height - r2.height - l2);
            let m2 = this.bind(e3, new gt({ firstBaseline: [{ box: new dt(r2) }, l2 - 2 * o2, { box: s2 }, o2] }).wrap(e3)), f2 = Et.createBox(new Ye(e3, this.style, "scriptscriptstyle"), this.above, { style: this.style, newList: true });
            if (!f2) {
              let t4 = new dt([p2, m2], { classes: this.containsCaret ? "ML__contains-caret" : "", type: "mord" });
              return this.caret && (t4.caret = this.caret), this.bind(e3, t4.wrap(e3));
            }
            let y2 = new gt({ shift: -0.6 * (Math.max(p2.height, m2.height) - Math.max(p2.depth, m2.depth)), children: [{ box: f2 }] }), b2 = new dt([new dt(y2, { classes: "ML__sqrt-index" }), p2, m2], { type: "mord", classes: this.containsCaret ? "ML__contains-caret" : "" });
            return b2.height = p2.height, b2.depth = p2.depth, this.caret && (b2.caret = this.caret), this.bind(e3, b2.wrap(e3));
          }
        }, qa = { "p@": "1pt ", "z@": "0pt", maxdimen: "16383.99999pt", hfuzz: "0.1pt", vfuzz: "0.1pt", overfullrule: "5pt", hsize: "6.5in", vsize: "8.9in", parindent: "20pt", maxdepth: "4pt", splitmaxdepth: "\\maxdimen", boxmaxdepth: "\\maxdimen", delimitershortfall: "5pt", nulldelimiterspace: "1.2pt", scriptspace: "0.5pt", topskip: "10pt", splittopskip: "10pt", normalbaselineskip: "12pt", normallineskip: "1pt", normallineskiplimit: "0pt", jot: "3pt", doublerulesep: "2pt", arrayrulewidth: "0.4pt", arraycolsep: "5pt", fboxsep: "3pt", fboxrule: "0.4pt" }, Oa = { "z@skip": "0pt plust0pt minus0pt", hideskip: "-1000pt plust 1fill", "@flushglue": "0pt plust 1fill", parskip: "0pt plus 1pt", abovedisplayskip: "12pt plus 3pt minus 9pt", abovedisplayshortskip: "0pt plus 3pt", belowdisplayskip: "12pt plus 3pt minus 9pt", belowdisplayshortskip: "7pt plus 3pt minus 4pt", parfillskip: "0pt plus 1fil", thinmuskip: "3mu", medmuskip: "4mu plus 2mu minus 4mu", thickmuskip: "5mu plus 5mu", smallskipamount: "3pt plus1pt minus1pt", medskipamount: "6pt plus2pt minus2pt", bigskipamount: "12pt plus4pt minus4pt" }, Pa = { pretolerance: 100, tolerance: 200, hbadness: 1e3, vbadness: 1e3, linepenalty: 10, hyphenpenalty: 50, exhyphenpenalty: 50, binoppenalty: 700, relpenalty: 500, clubpenalty: 150, widowpenalty: 150, displaywidowpenalty: 50, brokenpenalty: 100, predisplaypenalty: 1e4, doublehyphendemerits: 1e4, finalhyphendemerits: 5e3, adjdemerits: 1e4, tracinglostchars: 1, uchyph: 1, delimiterfactor: 901, defaulthyphenchar: "\\-", defaultskewchar: -1, newlinechar: -1, showboxbreadth: 5, showboxdepth: 3, errorcontextlines: 5, interdisplaylinepenalty: 100, interfootnotelinepenalty: 100, baselineSkip: 1.2, arraystretch: "", month: (/* @__PURE__ */ new Date()).getMonth() + 1, day: (/* @__PURE__ */ new Date()).getDate(), year: (/* @__PURE__ */ new Date()).getFullYear() };
        function Na(e3) {
          var t3, a2;
          if (wa) return wa;
          wa = _({}, Pa);
          for (let a3 of Object.keys(qa)) wa[a3] = null != (t3 = ha(qa[a3], e3, wa)) ? t3 : 0;
          for (let t4 of Object.keys(Oa)) wa[t4] = null != (a2 = pa(Oa[t4], e3, wa)) ? a2 : 0;
          return wa;
        }
        function Fa() {
          let e3 = { registers: {}, smartFence: false, fractionNavigationOrder: "numerator-denominator", placeholderSymbol: "▢", letterShapeStyle: B.locale.startsWith("fr") ? "french" : "tex", colorMap: F, backgroundColorMap: R, getDefinition: Ra, getMacro: (e4) => Ia(e4, he()) };
          return S(_({}, e3), { registers: Na(e3) });
        }
        function Ra(e3, t3 = "math") {
          if (!e3 || 0 === e3.length) return null;
          let a2 = null;
          if (e3.startsWith("\\")) {
            if (a2 = X[e3], a2) return a2;
            "math" === t3 ? a2 = H[e3] : G[e3] && (a2 = { definitionType: "symbol", type: "mord", codepoint: G[e3] });
          } else if ("math" === t3) {
            if (a2 = H[e3], !a2 && 1 === e3.length) {
              let t4 = re("math", e3.codePointAt(0));
              return t4.startsWith("\\") ? S(_({}, Ra(t4, "math")), { command: t4 }) : null;
            }
          } else G[e3] ? a2 = { definitionType: "symbol", type: "mord", codepoint: G[e3] } : "text" === t3 && (a2 = { definitionType: "symbol", type: "mord", codepoint: e3.codePointAt(0) });
          return a2 && "symbol" === a2.definitionType && "mord" === a2.type && (102 === a2.codepoint || 103 === a2.codepoint || 104 === a2.codepoint) && (a2.isFunction = true), null != a2 ? a2 : null;
        }
        function Ia(e3, t3) {
          return e3.startsWith("\\") ? t3[e3.slice(1)] : null;
        }
        var ja = class extends Et {
          constructor(e3, t3, a2, r2) {
            super("tooltip", a2, { command: null == r2 ? void 0 : r2.command, mode: "math", serialize: null == r2 ? void 0 : r2.serialize, style: null == r2 ? void 0 : r2.style, displayContainsHighlight: true }), this.body = e3;
            let i2 = Fa();
            this.tooltip = new Et("root", i2, { style: {} }), this.tooltip.body = t3, this.skipBoundary = true, this.captureSelection = false;
          }
          static fromJson(e3, t3) {
            return new ja(e3.body, Va(e3.tooltip, t3), t3, e3);
          }
          toJson() {
            var e3;
            let t3 = null == (e3 = this.tooltip.body) ? void 0 : e3.filter((e4) => "first" !== e4.type).map((e4) => e4.toJson());
            return S(_({}, super.toJson()), { tooltip: t3 });
          }
          render(e3) {
            let t3 = Et.createBox(e3, this.body, { style: this.style });
            if (!t3) return null;
            let a2 = ut(mt(new dt(this.tooltip.render(new Ye({ registers: e3.registers }, { fontSize: 5 }, "displaystyle")), { classes: "ML__tooltip-content" }))), r2 = new dt([a2, t3], { classes: "ML__tooltip-container" });
            return this.caret && (r2.caret = this.caret), this.bind(e3, r2);
          }
          serialize(e3) {
            return `${this.command}{${this.bodyToLatex(e3)}}{${Et.serialize(this.tooltip.body, e3)}}`;
          }
        };
        function Va(e3, t3) {
          if (M(e3)) return e3.map((e4) => Va(e4, t3));
          e3 = _({}, e3);
          for (let a3 of Tt) e3[a3] && (e3[a3] = Va(e3[a3], t3));
          e3.array && (e3.array = Va(e3.array, t3));
          let a2, r2 = e3.type;
          "accent" === r2 && (a2 = Ot.fromJson(e3, t3)), "array" === r2 && (a2 = fa.fromJson(e3, t3)), "box" === r2 && (a2 = ma.fromJson(e3, t3)), "composition" === r2 && (a2 = va.fromJson(e3, t3)), "chem" === r2 && (a2 = ka.fromJson(e3, t3)), "choice" === r2 && (a2 = Ha.fromJson(e3, t3)), "delim" === r2 && (a2 = Sa.fromJson(e3, t3)), "enclose" === r2 && (a2 = La.fromJson(e3, t3)), "error" === r2 && (a2 = na.fromJson(e3, t3)), "genfrac" === r2 && (a2 = Ca.fromJson(e3, t3)), "group" === r2 && (a2 = ta.fromJson(e3, t3)), "latex" === r2 && (a2 = Aa.fromJson(e3, t3)), "latexgroup" === r2 && (a2 = Da.fromJson(e3, t3)), "leftright" === r2 && (a2 = ra.fromJson(e3, t3)), "line" === r2 && (a2 = Ta.fromJson(e3, t3)), "macro" === r2 && (a2 = sa.fromJson(e3, t3)), "msubsup" === r2 && (a2 = ia.fromJson(e3, t3)), "overlap" === r2 && (a2 = Ba.fromJson(e3, t3)), "overunder" === r2 && (a2 = ea.fromJson(e3, t3)), "placeholder" === r2 && (e3.defaultValue && (e3.defaultValue = Va(e3.defaultValue, t3)), a2 = oa.fromJson(e3, t3)), "phantom" === r2 && (a2 = Ka.fromJson(e3, t3)), "rule" === r2 && (a2 = Ea.fromJson(e3, t3)), "sizeddelim" === r2 && (a2 = Ma.fromJson(e3, t3)), "spacing" === r2 && (a2 = aa.fromJson(e3, t3)), "surd" === r2 && (a2 = $a.fromJson(e3, t3)), "text" === r2 && (a2 = la.fromJson(e3, t3)), "tooltip" === r2 && (a2 = ja.fromJson(e3, t3)), "mop" === r2 && (a2 = za.fromJson(e3, t3)), a2 || (a2 = Et.fromJson(e3, t3));
          for (let t4 of Tt) e3[t4] && a2.setChildren(e3[t4], t4);
          return void 0 !== e3.verbatimLatex && (a2.verbatimLatex = e3.verbatimLatex), e3.subsupPlacement && (a2.subsupPlacement = e3.subsupPlacement), e3.explicitSubsupPlacement && (a2.explicitSubsupPlacement = true), e3.isFunction && (a2.isFunction = true), e3.isExtensibleSymbol && (a2.isExtensibleSymbol = true), e3.skipBoundary && (a2.skipBoundary = true), e3.captureSelection && (a2.captureSelection = true), a2;
        }
        var Ha = class extends Et {
          constructor(e3, t3) {
            super("choice", t3), this.choices = e3, this.skipBoundary = true;
          }
          static fromJson(e3, t3) {
            return new Ha([Va(e3.choices[0], t3), Va(e3.choices[1], t3), Va(e3.choices[2], t3), Va(e3.choices[3], t3)], t3);
          }
          toJson() {
            let e3 = [];
            for (let t3 of this.choices) e3.push(t3.filter((e4) => "first" !== e4.type).map((e4) => e4.toJson()));
            return S(_({}, super.toJson()), { choices: e3 });
          }
          render(e3) {
            let t3 = Et.createBox(e3, this.choices[Math.floor(e3.mathstyle.id / 2)]);
            return t3 ? (this.caret && (t3.caret = this.caret), this.bind(e3, t3)) : null;
          }
          serialize(e3) {
            return `\\mathchoice{${Et.serialize(this.choices[0], e3)}}{${Et.serialize(this.choices[1], e3)}}{${Et.serialize(this.choices[2], e3)}}{${Et.serialize(this.choices[3], e3)}}`;
          }
        };
        pe("mathtip", "{:math}{:math}", { createAtom: (e3, t3, a2, r2) => new ja(t3[0], t3[1], r2, { command: e3, content: "math", style: a2 }) }), pe("texttip", "{:math}{:text}", { createAtom: (e3, t3, a2, r2) => new ja(t3[0], t3[1], r2, { command: e3, content: "text", style: a2 }) }), pe("error", "{:math}", { createAtom: (e3, t3, a2, r2) => new ta(t3[0], r2, { mode: "math", command: "\\error", customClass: "ML__error", style: a2, serialize: (e4, t4) => `\\error{${e4.bodyToLatex(t4)}}` }) }), pe("ensuremath", "{:math}", { createAtom: (e3, t3, a2, r2) => new ta(t3[0], r2, { mode: "math", latexOpen: "\\ensuremath{", latexClose: "}", style: a2 }) }), pe("color", "{:string}", { applyStyle: (e3, t3, a2) => {
          var r2, i2;
          let o2 = t3[0];
          return { verbatimColor: t3[0], color: null != (i2 = null == (r2 = a2.colorMap) ? void 0 : r2.call(a2, o2)) ? i2 : o2 };
        } }), pe("textcolor", "{:string}{content:auto*}", { applyStyle: (e3, t3, a2) => {
          var r2, i2;
          let o2 = t3[0];
          return { verbatimColor: o2, color: null != (i2 = null == (r2 = a2.colorMap) ? void 0 : r2.call(a2, o2)) ? i2 : o2 };
        } }), pe("boxed", "{content:math}", { createAtom: (e3, t3, a2, r2) => new ma(e3, t3[0], r2, { framecolor: "black", style: a2 }) }), pe("colorbox", "{:string}{content:auto*}", { applyMode: "text", applyStyle: (e3, t3, a2) => {
          var r2, i2;
          let o2 = t3[0];
          return { verbatimBackgroundColor: t3[0], backgroundColor: null != (i2 = null == (r2 = a2.backgroundColorMap) ? void 0 : r2.call(a2, o2)) ? i2 : o2 };
        } }), pe("fcolorbox", "{frame-color:string}{background-color:string}{content:auto}", { applyMode: "text", createAtom: (e3, t3, a2, r2) => {
          var i2, o2, n2, s2;
          let l2 = t3[0], d2 = t3[1];
          return new ma(e3, t3[2], r2, { verbatimFramecolor: l2, framecolor: null != (o2 = null == (i2 = r2.colorMap) ? void 0 : i2.call(r2, l2)) ? o2 : l2, verbatimBackgroundcolor: t3[1], backgroundcolor: null != (s2 = null == (n2 = r2.backgroundColorMap) ? void 0 : n2.call(r2, d2)) ? s2 : d2, style: a2, serialize: (e4, t4) => {
            var a3, r3;
            return `${e4.command}{${null != (a3 = e4.verbatimFramecolor) ? a3 : e4.framecolor}{${null != (r3 = e4.verbatimBackgroundcolor) ? r3 : e4.backgroundcolor}}{${e4.bodyToLatex(t4)}}`;
          } });
        } }), pe("bbox", "[:bbox]{body:auto}", { createAtom: (e3, t3, a2, r2) => {
          if (t3[0]) {
            let i2 = t3[0];
            return new ma(e3, t3[1], r2, { padding: i2.padding, border: i2.border, backgroundcolor: i2.backgroundcolor, style: a2, serialize: (t4, a3) => {
              var r3;
              let i3 = e3;
              if (Number.isFinite(t4.padding) || void 0 !== t4.border || void 0 !== t4.backgroundcolor) {
                let e4 = [];
                t4.padding && e4.push(t4.padding), t4.border && e4.push(`border: ${t4.border}`), (t4.verbatimBackgroundcolor || t4.backgroundcolor) && e4.push(null != (r3 = t4.verbatimBackgroundcolor) ? r3 : t4.backgroundcolor), i3 += `[${e4.join(",")}]`;
              }
              return i3 + `{${t4.bodyToLatex(a3)}}`;
            } });
          }
          return new ma(e3, t3[1], r2, { style: a2 });
        } }), pe(["displaystyle", "textstyle", "scriptstyle", "scriptscriptstyle"], "{:rest}", { createAtom: (e3, t3, a2, r2) => new ta(t3[0], r2, { latexOpen: `{${e3} `, latexClose: "}", style: a2, mathstyleName: e3.slice(1) }) }), pe(["tiny", "scriptsize", "footnotesize", "small", "normalsize", "large", "Large", "LARGE", "huge", "Huge"], "", { applyStyle: (e3, t3) => ({ fontSize: { "\\tiny": 1, "\\scriptsize": 2, "\\footnotesize": 3, "\\small": 4, "\\normalsize": 5, "\\large": 6, "\\Large": 7, "\\LARGE": 8, "\\huge": 9, "\\Huge": 10 }[e3] }) }), pe("fontseries", "{:string}", { ifMode: "text", applyStyle: (e3, t3) => ({ fontSeries: t3[0] }) }), pe("fontshape", "{:string}", { ifMode: "text", applyStyle: (e3, t3) => ({ fontShape: t3[0] }) }), pe("fontfamily", "{:string}", { ifMode: "text", applyStyle: (e3, t3) => ({ fontFamily: t3[0] }) }), pe("selectfont", "", { ifMode: "text", applyStyle: (e3, t3) => ({}) }), pe("bf", "", { applyStyle: (e3, t3) => ({ fontSeries: "b", fontShape: "n", fontFamily: "cmr" }) }), pe(["boldsymbol", "bm"], "{:math*}", { applyMode: "math", createAtom: (e3, t3, a2, r2) => new ta(t3[0], r2, { latexOpen: `${e3}{`, latexClose: "}", style: a2, customClass: "ML__boldsymbol" }) }), pe("bold", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variantStyle: "bold" }) }), pe("bfseries", "", { applyMode: "text", applyStyle: (e3, t3) => ({ fontSeries: "b" }) }), pe("mdseries", "", { applyMode: "text", applyStyle: (e3, t3) => ({ fontSeries: "m" }) }), pe("upshape", "", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "n" }) }), pe("slshape", "", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "sl" }) }), pe("scshape", "", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "sc" }) }), pe("textbf", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontSeries: "b" }) }), pe("textmd", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontSeries: "m" }) }), pe("textup", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "n" }) }), pe("textnormal", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "n", fontSeries: "m" }) }), pe("textsl", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "sl" }) }), pe("textit", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "it" }) }), pe("textsc", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontShape: "sc" }) }), pe("textrm", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontFamily: "roman" }) }), pe("textsf", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontFamily: "sans-serif" }) }), pe("texttt", "{:text*}", { applyMode: "text", applyStyle: (e3, t3) => ({ fontFamily: "monospace" }) }), pe("mathbf", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variant: "normal", variantStyle: "bold" }) }), pe("mathit", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variant: "main", variantStyle: "italic" }) }), pe("mathnormal", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variant: "normal", variantStyle: "italic" }) }), pe("mathbfit", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variant: "main", variantStyle: "bolditalic" }) }), pe("mathrm", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variant: "normal", variantStyle: "up" }) }), pe("mathsf", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variant: "sans-serif", variantStyle: "up" }) }), pe("mathtt", "{:math*}", { applyMode: "math", applyStyle: (e3, t3) => ({ variant: "monospace", variantStyle: "up" }) }), pe("it", "", { applyStyle: (e3, t3) => ({ fontSeries: "m", fontShape: "it", fontFamily: "cmr", variantStyle: "italic" }) }), pe("rmfamily", "", { applyStyle: (e3, t3) => ({ fontFamily: "roman" }) }), pe("sffamily", "", { applyStyle: (e3, t3) => ({ fontFamily: "sans-serif" }) }), pe("ttfamily", "", { applyStyle: (e3, t3) => ({ fontFamily: "monospace" }) }), pe(["Bbb", "mathbb"], "{:math*}", { applyStyle: (e3, t3) => ({ variant: "double-struck", variantStyle: "up" }) }), pe(["frak", "mathfrak"], "{:math*}", { applyStyle: (e3, t3) => ({ variant: "fraktur", variantStyle: "up" }) }), pe("mathcal", "{:math*}", { applyStyle: (e3, t3) => ({ variant: "calligraphic", variantStyle: "up" }) }), pe("mathscr", "{:math*}", { applyStyle: (e3, t3) => ({ variant: "script", variantStyle: "up" }) }), pe("mbox", "{:text}", { ifMode: "math", createAtom: (e3, t3, a2, r2) => new ta(t3[0], r2, { changeMode: true, style: a2, mode: "text", command: e3, serialize: (e4, t4) => `\\mbox{${e4.bodyToLatex(S(_({}, t4), { skipModeCommand: true }))}}` }) }), pe("text", "{:text}", { ifMode: "math", applyMode: "text" }), pe("class", "{name:string}{content:auto*}", { createAtom: (e3, t3, a2, r2) => new ta(t3[1], r2, { customClass: t3[0], style: a2 }) }), pe("cssId", "{id:string}{content:auto}", { createAtom: (e3, t3, a2, r2) => new ta(t3[1], r2, { cssId: t3[0], style: a2 }) }), pe("htmlData", "{data:string}{content:auto}", { createAtom: (e3, t3, a2, r2) => new ta(t3[1], r2, { htmlData: t3[0], style: a2 }) }), pe("htmlStyle", "{data:string}{content:auto}", { createAtom: (e3, t3, a2, r2) => new ta(t3[1], r2, { htmlStyle: t3[0], style: a2 }) }), pe("em", "{:auto*}", { createAtom: (e3, t3, a2, r2) => new ta(t3[0], r2, { latexOpen: "\\em", latexClose: "", customClass: "ML__emph", style: a2 }) }), pe("emph", "{:auto}", { createAtom: (e3, t3, a2, r2) => new ta(t3[0], r2, { latexOpen: "\\emph{", latexClose: "}", customClass: "ML__emph", style: a2 }) });
        var Wa = { "\\bigl": { mclass: "mopen", size: 1 }, "\\Bigl": { mclass: "mopen", size: 2 }, "\\biggl": { mclass: "mopen", size: 3 }, "\\Biggl": { mclass: "mopen", size: 4 }, "\\bigr": { mclass: "mclose", size: 1 }, "\\Bigr": { mclass: "mclose", size: 2 }, "\\biggr": { mclass: "mclose", size: 3 }, "\\Biggr": { mclass: "mclose", size: 4 }, "\\bigm": { mclass: "mrel", size: 1 }, "\\Bigm": { mclass: "mrel", size: 2 }, "\\biggm": { mclass: "mrel", size: 3 }, "\\Biggm": { mclass: "mrel", size: 4 }, "\\big": { mclass: "mord", size: 1 }, "\\Big": { mclass: "mord", size: 2 }, "\\bigg": { mclass: "mord", size: 3 }, "\\Bigg": { mclass: "mord", size: 4 } };
        pe(["bigl", "Bigl", "biggl", "Biggl", "bigr", "Bigr", "biggr", "Biggr", "bigm", "Bigm", "biggm", "Biggm", "big", "Big", "bigg", "Bigg"], "{:delim}", { createAtom: (e3, t3, a2, r2) => new Ma(e3, t3[0], r2, { size: Wa[e3].size, delimClass: Wa[e3].mclass, style: a2 }) }), pe(["hspace", "hspace*"], "{width:glue}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new aa(e3, a2, r2, null != (i2 = t3[0]) ? i2 : { glue: { dimension: 0 } });
        } }), pe(["mkern", "kern"], "{width:glue}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new aa(e3, a2, r2, null != (i2 = t3[0]) ? i2 : { glue: { dimension: 0 } });
        } }), pe("mspace", "{width:glue}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new aa(e3, a2, r2, null != (i2 = t3[0]) ? i2 : { glue: { dimension: 0 } });
        } }), pe("mathop", "{:auto}", { createAtom: (e3, t3, a2, r2) => new za(e3, t3[0], r2, { type: "mop", captureSelection: true, limits: "over-under", isFunction: true, hasArgument: true, style: a2 }) }), pe("mathchoice", "{:math}{:math}{:math}{:math}", { createAtom: (e3, t3, a2, r2) => new Ha(t3, r2) }), pe(["mathbin", "mathrel", "mathopen", "mathclose", "mathpunct", "mathord", "mathinner"], "{:auto}", { createAtom: (e3, t3, a2, r2) => new za(e3, t3[0], r2, { type: { "\\mathbin": "mbin", "\\mathrel": "mrel", "\\mathopen": "mopen", "\\mathclose": "mclose", "\\mathpunct": "mpunct", "\\mathord": "mord", "\\mathinner": "minner" }[e3], captureSelection: true, hasArgument: true, style: a2 }) }), pe(["operatorname", "operatorname*"], "{operator:math}", { createAtom: (e3, t3, a2, r2) => {
          let i2 = new za(e3, t3[0], r2, { isFunction: true, hasArgument: true, limits: "\\operatorname" === e3 ? "adjacent" : "over-under", style: a2 });
          return i2.captureSelection = true, i2.body && i2.body.forEach((e4) => {
            var t4;
            "first" !== e4.type && (e4.type = "mord", e4.value = null != (t4 = { "∗": "*", "−": "-" }[e4.value]) ? t4 : e4.value, e4.isFunction = false, !e4.style.variant && !e4.style.variantStyle && (e4.style.variant = "main", e4.style.variantStyle = "up"));
          }), i2;
        } });
        var Xa = class extends Et {
          constructor(e3, t3, a2) {
            let r2 = Number.parseInt(e3);
            Number.isFinite(r2) || (r2 = 10067), super("mord", a2, { value: String.fromCodePoint(r2), style: t3 }), this.codepoint = r2;
          }
          serialize(e3) {
            return '\\unicode"' + ("000000" + this.codepoint.toString(16)).toUpperCase().slice(-6);
          }
        };
        function Ua(e3) {
          if (1 === e3.length) {
            let t3 = e3[0];
            if ("mbin" === t3.type) return "mbin";
            if ("mrel" === t3.type) return "mrel";
          }
          return "mord";
        }
        pe("unicode", "{charcode:number}", { createAtom: (e3, t3, a2, r2) => new Xa(t3[0], a2, r2) }), pe("rule", "[raise:dimen]{width:dimen}{thickness:dimen}", { createAtom: (e3, t3, a2, r2) => new Ea(e3, r2, { shift: t3[0], width: t3[1], height: t3[2], style: a2 }) }), pe("overline", "{:auto}", { createAtom: (e3, t3, a2, r2) => new Ta(e3, t3[0], r2, { position: "overline", style: a2 }) }), pe("underline", "{:auto}", { createAtom: (e3, t3, a2, r2) => new Ta(e3, t3[0], r2, { position: "underline", style: a2 }) }), pe("overset", "{above:auto}{base:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { above: t3[0], body: t3[1], skipBoundary: false, style: a2, boxType: Ua(t3[1]), serialize: (e4, t4) => `${e4.command}{${e4.aboveToLatex(t4)}}{${e4.bodyToLatex(t4)}}` }) }), pe("underset", "{below:auto}{base:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { below: t3[0], body: t3[1], skipBoundary: false, style: a2, boxType: Ua(t3[1]), serialize: (t4, a3) => `${e3}{${t4.belowToLatex(a3)}}{${t4.bodyToLatex(a3)}}` }) }), pe("overunderset", "{above:auto}{below:auto}{base:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { above: t3[0], below: t3[1], body: t3[2], skipBoundary: false, style: a2, boxType: Ua(t3[2]), serialize: (e4, t4) => `${e4.command}{${e4.aboveToLatex(t4)}}{${e4.bodyToLatex(t4)}}` }) }), pe(["stackrel", "stackbin"], "[below:auto]{above:auto}{base:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { body: t3[2], above: t3[1], below: t3[0], skipBoundary: false, style: a2, boxType: "\\stackrel" === e3 ? "mrel" : "mbin", serialize: (e4, t4) => `${e4.command}{${e4.aboveToLatex(t4)}}{${e4.bodyToLatex(t4)}}` }) }), pe("smash", "[:string]{:auto}", { createAtom: (e3, t3, a2, r2) => t3[0] ? new Ka(e3, t3[1], r2, { smashHeight: t3[0].includes("t"), smashDepth: t3[0].includes("b"), style: a2 }) : new Ka(e3, t3[1], r2, { smashHeight: true, smashDepth: true, style: a2 }) }), pe(["vphantom"], "{:auto*}", { createAtom: (e3, t3, a2, r2) => new Ka(e3, t3[1], r2, { isInvisible: true, smashWidth: true, style: a2 }) }), pe(["hphantom"], "{:auto*}", { createAtom: (e3, t3, a2, r2) => new Ka(e3, t3[1], r2, { isInvisible: true, smashHeight: true, smashDepth: true, style: a2 }) }), pe(["phantom"], "{:auto*}", { createAtom: (e3, t3, a2, r2) => new Ka(e3, t3[1], r2, { isInvisible: true, style: a2 }) }), pe("not", "{:math}", { createAtom: (e3, t3, a2, r2) => {
          if (t3.length < 1 || null === t3[0]) return new Et("mrel", r2, { command: e3, style: a2, value: "" });
          let i2 = t3[0];
          return new ta([new Ba(e3, "", r2, { align: "right", style: a2, boxType: "mrel" }), ...i2], r2, { boxType: "mrel", captureSelection: true, command: "\\not", serialize: (e4, t4) => {
            let a3 = Et.serialize(i2, t4);
            return 1 !== a3.length || /[a-zA-Z]/.test(a3) ? `\\not{${a3}}` : "\\not" + a3;
          } });
        } }), pe(["ne", "neq"], "", { createAtom: (e3, t3, a2, r2) => new ta([new Ba(e3, "", r2, { align: "right", style: a2, boxType: "mrel" }), new Et("mrel", r2, { style: a2, value: "=" })], r2, { boxType: "mrel", captureSelection: true, serialize: () => e3, command: e3 }) }), pe("rlap", "{:auto}", { createAtom: (e3, t3, a2, r2) => new Ba(e3, t3[0], r2, { align: "right", style: a2 }) }), pe("llap", "{:auto}", { createAtom: (e3, t3, a2, r2) => new Ba(e3, t3[0], r2, { style: a2 }) }), pe("mathllap", "{:auto}", { createAtom: (e3, t3, a2, r2) => new Ba(e3, t3[0], r2, { style: a2 }) }), pe("mathrlap", "{:auto}", { createAtom: (e3, t3, a2, r2) => new Ba(e3, t3[0], r2, { align: "right", style: a2 }) });
        var Ja = { acute: 714, grave: 715, dot: 729, ddot: 168, mathring: 730, tilde: 126, bar: 713, breve: 728, check: 711, hat: 94, vec: 8407 };
        function Ga(e3) {
          for (let t3 of e3) for (let e4 of t3) if (e4.length > 0) return false;
          return true;
        }
        pe(Object.keys(Ja), "{body:auto}", { createAtom: (e3, t3, a2, r2) => new Ot(e3, t3[0], r2, { accentChar: Ja[e3.slice(1)], style: a2 }) }), pe(["widehat", "widecheck", "widetilde"], "{body:auto}", { createAtom: (e3, t3, a2, r2) => {
          let i2 = de(t3[0]);
          return new Ot(e3, t3[0], r2, { style: a2, svgAccent: e3.slice(1) + (i2.length > 5 ? "4" : ["1", "1", "2", "2", "3", "3"][i2.length]) });
        } }), pe(["overarc", "overparen", "wideparen"], "{body:auto}", { createAtom: (e3, t3, a2, r2) => new Ot(e3, t3[0], r2, { style: a2, svgAccent: "overarc" }) }), pe(["underarc", "underparen"], "{body:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { body: t3[0], style: a2, svgBelow: "underarc" }) }), pe("utilde", "{body:auto}", { createAtom: (e3, t3, a2, r2) => {
          let i2 = de(t3[0]), o2 = "widetilde" + (i2.length > 5 ? "4" : ["1", "1", "2", "2", "3", "3"][i2.length]);
          return new ea(e3, r2, { body: t3[0], svgBelow: o2, style: a2, boxType: Ua(t3[0]) });
        } }), pe("^", "{:string}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new Et("mord", r2, { command: e3, isFunction: false, limits: "adjacent", style: a2, value: t3[0] && null != (i2 = { a: "â", e: "ê", i: "î", o: "ô", u: "û", A: "Â", E: "Ê", I: "Î", O: "Ô", U: "Û" }[t3[0]]) ? i2 : "^" });
        } }), pe("`", "{:string}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new Et("mord", r2, { command: e3, isFunction: false, limits: "adjacent", style: a2, value: t3[0] && null != (i2 = { a: "à", e: "è", i: "ì", o: "ò", u: "ù", A: "À", E: "È", I: "Ì", O: "Ò", U: "Ù" }[t3[0]]) ? i2 : "`" });
        } }), pe("'", "{:string}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new Et("mord", r2, { command: e3, isFunction: false, limits: "adjacent", style: a2, value: t3[0] && null != (i2 = { a: "á", e: "é", i: "í", o: "ó", u: "ú", A: "Á", E: "É", I: "Í", O: "Ó", U: "Ú" }[t3[0]]) ? i2 : "^" });
        } }), pe("~", "{:string}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new Et("mord", r2, { command: e3, isFunction: false, limits: "adjacent", style: a2, value: t3[0] && null != (i2 = { n: "ñ", N: "Ñ", a: "ã", o: "õ", A: "Ã", O: "Õ" }[t3[0]]) ? i2 : "´" });
        } }), pe("c", "{:string}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          return new Et("mord", r2, { command: e3, isFunction: false, limits: "adjacent", style: a2, value: t3[0] && null != (i2 = { c: "ç", C: "Ç" }[t3[0]]) ? i2 : "" });
        } }), pe("enclose", "{notation:string}[style:string]{body:auto}", { createAtom: (e3, t3, a2, r2) => {
          var i2;
          let o2 = { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", backgroundcolor: "transparent", padding: "auto", shadow: "auto", svgStrokeStyle: void 0, borderStyle: void 0, style: a2 };
          if (t3[1]) {
            let e4 = t3[1].split(/,(?![^(]*\)(?:(?:[^(]*\)){2})*[^"]*$)/);
            for (let t4 of e4) {
              let e5 = t4.match(/\s*(\S+)\s+(\S+)\s+(.*)/);
              if (e5) o2.strokeWidth = e5[1], o2.strokeStyle = e5[2], o2.strokeColor = e5[3];
              else {
                let e6 = t4.match(/\s*([a-z]*)\s*=\s*"(.*)"/);
                e6 && ("mathbackground" === e6[1] ? o2.backgroundcolor = e6[2] : "mathcolor" === e6[1] ? o2.strokeColor = e6[2] : "padding" === e6[1] ? o2.padding = e6[2] : "shadow" === e6[1] && (o2.shadow = e6[2]));
              }
            }
            "dashed" === o2.strokeStyle ? o2.svgStrokeStyle = "5,5" : "dotted" === o2.strokeStyle && (o2.svgStrokeStyle = "1,5");
          }
          o2.borderStyle = `${o2.strokeWidth} ${o2.strokeStyle} ${o2.strokeColor}`;
          let n2 = {};
          return (null != (i2 = t3[0]) ? i2 : "").split(/[, ]/).filter((e4) => e4.length > 0).forEach((e4) => {
            n2[e4.toLowerCase()] = true;
          }), new La(e3, t3[2], n2, r2, o2);
        } }), pe("cancel", "{body:auto}", { createAtom: (e3, t3, a2, r2) => new La(e3, t3[0], { updiagonalstrike: true }, r2, { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", borderStyle: "1px solid currentColor", backgroundcolor: "transparent", padding: "auto", shadow: "auto", style: a2 }) }), pe("bcancel", "{body:auto}", { createAtom: (e3, t3, a2, r2) => new La(e3, t3[0], { downdiagonalstrike: true }, r2, { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", borderStyle: "1px solid currentColor", backgroundcolor: "transparent", padding: "auto", shadow: "auto", style: a2 }) }), pe("xcancel", "{body:auto}", { createAtom: (e3, t3, a2, r2) => new La(e3, t3[0], { updiagonalstrike: true, downdiagonalstrike: true }, r2, { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", borderStyle: "1px solid currentColor", backgroundcolor: "transparent", padding: "auto", shadow: "auto", style: a2 }) }), ce("math", "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { mathstyleName: "textstyle" }))), ce("displaymath", "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { mathstyleName: "textstyle" }))), ue("array", "{columns:colspec}", (e3, t3, a2, r2, i2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { columns: i2[0], mathstyleName: "textstyle" }))), ue(["equation", "equation*", "subequations"], "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { columns: [{ align: "c" }] }))), ue("multline", "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { columns: [{ align: "m" }] }))), ue(["align", "align*", "aligned", "eqnarray"], "", (e3, t3, a2, r2) => {
          let i2 = 0;
          Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)], [new Et("first", e3), new oa(e3)]]]);
          for (let e4 of a2) i2 = Math.max(i2, e4.length);
          let o2 = [{ gap: 0 }, { align: "r" }, { gap: 0.25 }, { align: "l" }], n2 = 2;
          for (; n2 < i2; ) o2.push({ gap: 1 }), o2.push({ align: "r" }), o2.push({ gap: 0.25 }), o2.push({ align: "l" }), n2 += 2;
          return o2.push({ gap: 0 }), new fa(e3, t3, a2, r2, { arraycolsep: 0, columns: o2, colSeparationType: "align", jot: 0.3, minColumns: 2 });
        }), ue("split", "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)], [new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { columns: [{ align: "r" }, { align: "l" }], minColumns: 2 }))), ue(["gather", "gathered"], "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { columns: [{ gap: 0.25 }, { align: "c" }, { gap: 0 }], colSeparationType: "gather" }))), ue(["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix", "matrix*", "pmatrix*", "bmatrix*", "Bmatrix*", "vmatrix*", "Vmatrix*"], "[columns:colspec]", (e3, t3, a2, r2, i2) => {
          var o2;
          Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]);
          let n2 = ".", s2 = ".";
          switch (t3) {
            case "pmatrix":
            case "pmatrix*":
              n2 = "(", s2 = ")";
              break;
            case "bmatrix":
            case "bmatrix*":
              n2 = "[", s2 = "]";
              break;
            case "Bmatrix":
            case "Bmatrix*":
              n2 = "\\lbrace", s2 = "\\rbrace";
              break;
            case "vmatrix":
            case "vmatrix*":
              n2 = "\\vert", s2 = "\\vert";
              break;
            case "Vmatrix":
            case "Vmatrix*":
              n2 = "\\Vert", s2 = "\\Vert";
              break;
            case "matrix":
            case "matrix*":
              n2 = ".", s2 = ".";
          }
          return new fa(e3, t3, a2, r2, { mathstyleName: "textstyle", leftDelim: n2, rightDelim: s2, columns: null != (o2 = i2[0]) ? o2 : [{ align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }] });
        }), ue(["smallmatrix", "smallmatrix*"], "[columns:colspec]", (e3, t3, a2, r2, i2) => {
          var o2;
          return Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { mathstyleName: "scriptstyle", columns: null != (o2 = i2[0]) ? o2 : [{ align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }], colSeparationType: "small", arraystretch: 0.5 });
        }), ue(["cases", "dcases"], "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { mathstyleName: "dcases" === t3 ? "displaystyle" : "textstyle", arraystretch: 1.2, leftDelim: "\\lbrace", rightDelim: ".", columns: [{ align: "l" }, { gap: 1 }, { align: "l" }] }))), ue("rcases", "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { arraystretch: 1.2, leftDelim: ".", rightDelim: "\\rbrace", columns: [{ align: "l" }, { gap: 1 }, { align: "l" }] }))), ce("center", "", (e3, t3, a2, r2) => (Ga(a2) && (a2 = [[[new Et("first", e3), new oa(e3)]]]), new fa(e3, t3, a2, r2, { columns: [{ align: "c" }] }))), pe(["overrightarrow", "overleftarrow", "Overrightarrow", "overleftharpoon", "overrightharpoon", "overleftrightarrow", "overlinesegment", "overgroup"], "{:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { body: t3[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mrel", style: a2, svgAbove: e3.slice(1) }) }), pe("overbrace", "{:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { body: t3[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mord", style: a2, svgAbove: e3.slice(1) }) }), pe(["underrightarrow", "underleftarrow", "underleftrightarrow", "underlinesegment", "undergroup"], "{:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { body: t3[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mrel", style: a2, svgBelow: e3.slice(1) }) }), pe(["underbrace"], "{:auto}", { createAtom: (e3, t3, a2, r2) => new ea(e3, r2, { body: t3[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mord", style: a2, svgBelow: e3.slice(1) }) }), pe(["xrightarrow", "xleftarrow", "xRightarrow", "xLeftarrow", "xleftharpoonup", "xleftharpoondown", "xrightharpoonup", "xrightharpoondown", "xlongequal", "xtwoheadleftarrow", "xtwoheadrightarrow", "xleftrightarrow", "xLeftrightarrow", "xrightleftharpoons", "xleftrightharpoons", "xhookleftarrow", "xhookrightarrow", "xmapsto", "xtofrom", "xrightleftarrows", "xrightequilibrium", "xleftequilibrium"], "[:auto]{:auto}", { createAtom: (e3, t3, a2, r2) => {
          var i2, o2;
          return new ea(e3, r2, { style: a2, svgBody: e3.slice(1), above: 0 === (null == (i2 = t3[1]) ? void 0 : i2.length) ? void 0 : t3[1], below: null != (o2 = t3[0]) ? o2 : null, skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, paddedLabels: true, boxType: "mrel", serialize: (t4, a3) => e3 + (t4.hasEmptyBranch("below") ? "" : `[${t4.belowToLatex(a3)}]`) + `{${t4.aboveToLatex(a3)}}${t4.supsubToLatex(a3)}` });
        } }), pe(["arccos", "arcsin", "arctan", "arctg", "arcctg", "arg", "ch", "cos", "cosh", "cot", "cotg", "coth", "ctg", "cth", "csc", "cosec", "dim", "exp", "hom", "inf", "ker", "lb", "lg", "ln", "log", "Pr", "sec", "sh", "sin", "sinh", "sup", "tan", "tanh", "tg", "th", "arcsec", "arccsc", "arsinh", "arcosh", "artanh", "arcsech", "arccsch"], "", { isFunction: true, createAtom: (e3, t3, a2, r2) => new za(e3, e3.slice(1), r2, { limits: "adjacent", isFunction: true, variant: "main", variantStyle: "up", style: a2 }) }), pe(["liminf", "limsup"], "", { createAtom: (e3, t3, a2, r2) => new za(e3, { "\\liminf": "lim inf", "\\limsup": "lim sup" }[e3], r2, { limits: "over-under", variant: "main", style: a2 }) }), pe(["lim", "mod"], "", { createAtom: (e3, t3, a2, r2) => new za(e3, e3.slice(1), r2, { limits: "over-under", variant: "main", style: a2 }) }), pe(["det", "max", "min"], "", { isFunction: true, createAtom: (e3, t3, a2, r2) => new za(e3, e3.slice(1), r2, { limits: "over-under", isFunction: true, variant: "main", style: a2 }) }), pe(["ang"], "{:math}", { isFunction: true, createAtom: (e3, t3, a2, r2) => new ta([...t3[0], new Et("mord", r2, { value: "°", style: a2 })], r2, { mode: "math", latexOpen: "\\ang{", latexClose: "}", style: a2 }) }), pe("sqrt", "[index:auto]{radicand:auto}", { createAtom: (e3, t3, a2, r2) => new $a(e3, r2, { body: t3[1], index: t3[0], style: a2 }) }), pe(["frac", "dfrac", "tfrac", "cfrac", "binom", "dbinom", "tbinom"], "{numerator}{denominator}", { createAtom: (e3, t3, a2, r2) => {
          let i2 = { style: a2 };
          switch (e3) {
            case "\\dfrac":
            case "\\frac":
            case "\\tfrac":
              i2.hasBarLine = true;
              break;
            case "\\atopfrac":
              i2.hasBarLine = false;
              break;
            case "\\dbinom":
            case "\\binom":
            case "\\tbinom":
              i2.hasBarLine = false, i2.leftDelim = "(", i2.rightDelim = ")";
          }
          switch (e3) {
            case "\\dfrac":
            case "\\dbinom":
              i2.mathstyleName = "displaystyle";
              break;
            case "\\tfrac":
            case "\\tbinom":
              i2.mathstyleName = "textstyle";
              break;
            case "\\cfrac":
              i2.hasBarLine = true, i2.continuousFraction = true;
          }
          return new Ca(e3, t3[0], t3[1], r2, i2);
        } }), pe(["brace", "brack"], "", { infix: true, createAtom: (e3, t3, a2, r2) => new Ca(e3, t3[0], t3[1], r2, { hasBarLine: false, leftDelim: "\\brace" === e3 ? "\\lbrace" : "\\lbrack", rightDelim: "\\brace" === e3 ? "\\rbrace" : "\\rbrack", style: a2, serialize: (e4, t4) => Ct([e4.aboveToLatex(t4), e4.command, e4.belowToLatex(t4)]) }) }), pe(["over", "atop", "choose"], "", { infix: true, createAtom: (e3, t3, a2, r2) => {
          let i2, o2;
          return "\\choose" === e3 && (i2 = "(", o2 = ")"), new Ca(e3, t3[0], t3[1], r2, { hasBarLine: "\\over" === e3, leftDelim: i2, rightDelim: o2, style: a2, serialize: (e4, t4) => Ct([e4.aboveToLatex(t4), e4.command, e4.belowToLatex(t4)]) });
        } }), pe(["overwithdelims", "atopwithdelims"], "{numer:auto}{denom:auto}{left-delim:delim}{right-delim:delim}", { infix: true, createAtom: (e3, t3, a2, r2) => new Ca(e3, t3[0], t3[1], r2, { leftDelim: t3[2], rightDelim: t3[3], hasBarLine: false, style: a2, serialize: (e4, t4) => `${e4.aboveToLatex(t4)} ${e4.command}${e4.leftDelim}${e4.rightDelim}${e4.belowToLatex(t4)}` }) }), pe("pdiff", "{numerator}{denominator}", { createAtom: (e3, t3, a2, r2) => new Ca(e3, t3[0], t3[1], r2, { hasBarLine: true, numerPrefix: "∂", denomPrefix: "∂", style: a2 }) }), pe(["sum", "prod", "bigcup", "bigcap", "coprod", "bigvee", "bigwedge", "biguplus", "bigotimes", "bigoplus", "bigodot", "bigsqcup", "intop"], "", { createAtom: (e3, t3, a2, r2) => new za(e3, { coprod: "∐", bigvee: "⋁", bigwedge: "⋀", biguplus: "⨄", bigcap: "⋂", bigcup: "⋃", intop: "∫", prod: "∏", sum: "∑", bigotimes: "⨂", bigoplus: "⨁", bigodot: "⨀", bigsqcup: "⨆", smallint: "∫" }[e3.slice(1)], r2, { isExtensibleSymbol: true, limits: "auto", variant: "main", style: a2 }) }), pe("smallint", "", { createAtom: (e3, t3, a2, r2) => new za(e3, "∫", r2, { limits: "adjacent", isExtensibleSymbol: false, style: a2, variant: "main" }) });
        var Za = { int: "∫", iint: "∬", iiint: "∭", oint: "∮", oiint: "∯", oiiint: "∰", intclockwise: "∱", varointclockwise: "∲", ointctrclockwise: "∳", intctrclockwise: "⨑", sqcup: "⊔", sqcap: "⊓", uplus: "⊎", wr: "≀", amalg: "⨿", Cap: "⋒", Cup: "⋓", doublecap: "⋒", doublecup: "⋓" };
        function Ya(e3, t3) {
          return e3[0] === t3[0] && e3[1] === t3[1] ? "equal" : "different";
        }
        function Qa(e3) {
          let t3 = 1 / 0, a2 = -1 / 0;
          for (let r2 of e3.ranges) t3 = Math.min(t3, r2[0], r2[1]), a2 = Math.max(a2, r2[0], r2[1]);
          return [t3, a2];
        }
        function er(e3, t3, a2) {
          return a2 ? function(e4, t4) {
            if (!t4) return "";
            if ("string" == typeof t4) return t4;
            if (!e4 || void 0 === t4.after) return t4.value;
            let a3 = false, r2 = false, i2 = false, o2 = false, n2 = false, s2 = false, l2 = false, d2 = false, c2 = false, u2 = false, p2 = false, h2 = false, m2 = false, f2 = false, y2 = false, b2 = e4[0], g2 = 0;
            for (; b2 && /msubsup|placeholder/.test(b2.type); ) g2 += 1, b2 = e4[g2];
            return a3 = !b2 || "first" === b2.type, b2 && (f2 = "text" === b2.mode, r2 = !f2 && "mord" === b2.type && Y.test(b2.value), i2 = !f2 && "mord" === b2.type && /\d+$/.test(b2.value), o2 = !f2 && b2.isFunction, n2 = "genfrac" === b2.type, s2 = "surd" === b2.type, l2 = "mbin" === b2.type, d2 = "mrel" === b2.type, c2 = "mop" === b2.type, u2 = "mpunct" === b2.type || "minner" === b2.type, p2 = "array" === b2.type, h2 = "mopen" === b2.type, m2 = "mclose" === b2.type || "leftright" === b2.type, y2 = "space" === b2.type), t4.after.includes("nothing") && a3 || t4.after.includes("letter") && r2 || t4.after.includes("digit") && i2 || t4.after.includes("function") && o2 || t4.after.includes("frac") && n2 || t4.after.includes("surd") && s2 || t4.after.includes("binop") && l2 || t4.after.includes("relop") && d2 || t4.after.includes("operator") && c2 || t4.after.includes("punct") && u2 || t4.after.includes("array") && p2 || t4.after.includes("openfence") && h2 || t4.after.includes("closefence") && m2 || t4.after.includes("text") && f2 || t4.after.includes("space") && y2 ? t4.value : "";
          }(e3, a2[t3]) : "";
        }
        pe(Object.keys(Za), "", { createAtom: (e3, t3, a2, r2) => new za(e3, Za[e3.slice(1)], r2, { limits: "adjacent", isExtensibleSymbol: true, style: a2, variant: { "⋒": "ams", "⋓": "ams" }[Za[e3.slice(1)]] }) }), pe(["Re", "Im"], "", { createAtom: (e3, t3, a2, r2) => new za(e3, { "\\Re": "ℜ", "\\Im": "ℑ" }[e3], r2, { limits: "adjacent", style: a2, isFunction: true, variant: "fraktur" }) }), pe("middle", "{:delim}", { createAtom: (e3, t3, a2, r2) => new Sa(e3, t3[0], r2, { size: 1, style: a2 }) }), te("0123456789/@.?!"), ae(65, 90), ae(97, 122), te([["\\forall", 8704], ["\\exists", 8707], ["\\nexists", 8708, "mord", "ams"], ["\\mid", 8739, "mrel"], ["\\top", 8868], ["\\bot", 8869]]), te([["\\sharp", 9839], ["\\flat", 9837], ["\\natural", 9838], ["\\#", 35], ["\\&", 38], ["\\clubsuit", 9827], ["\\heartsuit", 9825], ["\\spadesuit", 9824], ["\\diamondsuit", 9826], ["\\parallelogram", 9649]]), te([["\\backslash", 92], ["\\nabla", 8711], ["\\partial", 8706], ["\\ell", 8467], ["\\hbar", 8463], ["\\Q", 81, "mord", "double-struck"], ["\\C", 67, "mord", "double-struck"], ["\\P", 80, "mord", "double-struck"], ["\\pounds", 163], ["\\euro", 8364]]), te([["\\rightarrow", 8594], ["\\to", 8594], ["\\leftarrow", 8592], ["\\gets", 8592], ["\\Rightarrow", 8658], ["\\Leftarrow", 8656], ["\\longrightarrow", 10230], ["\\longleftarrow", 10229], ["\\Longrightarrow", 10233], ["\\implies", 10233], ["\\Longleftarrow", 10232], ["\\impliedby", 10232], ["\\longleftrightarrow", 10231], ["\\biconditional", 10231], ["\\Longleftrightarrow", 10234], ["\\mapsto", 8614], ["\\longmapsto", 10236], ["\\uparrow", 8593], ["\\downarrow", 8595], ["\\Uparrow", 8657], ["\\Downarrow", 8659], ["\\updownarrow", 8597], ["\\Updownarrow", 8661], ["\\hookrightarrow", 8618], ["\\hookleftarrow", 8617], ["\\rightharpoonup", 8640], ["\\leftharpoonup", 8636], ["\\rightharpoondown", 8641], ["\\leftharpoondown", 8637], ["\\searrow", 8600], ["\\nearrow", 8599], ["\\swarrow", 8601], ["\\nwarrow", 8598], ["\\originalof", 8886], ["\\laplace", 8886], ["\\imageof", 8887], ["\\Laplace", 8887]], "mrel"), te([["\\lbrace", 123, "mopen"], ["\\rbrace", 125, "mclose"], ["\\lparen", 40, "mopen"], ["\\rparen", 41, "mclose"], ["\\langle", 10216, "mopen"], ["\\rangle", 10217, "mclose"], ["\\lfloor", 8970, "mopen"], ["\\rfloor", 8971, "mclose"], ["\\lceil", 8968, "mopen"], ["\\rceil", 8969, "mclose"], ["\\vert", 8739], ["\\lvert", 8739, "mopen"], ["\\rvert", 8739, "mclose"], ["\\|", 8741], ["\\Vert", 8741], ["\\mVert", 8741], ["\\lVert", 8741, "mopen"], ["\\rVert", 8741, "mclose"], ["\\lbrack", 91, "mopen"], ["\\rbrack", 93, "mclose"], ["\\{", 123, "mopen"], ["\\}", 125, "mclose"], ["(", 40, "mopen"], [")", 41, "mclose"], ["[", 91, "mopen"], ["]", 93, "mclose"], ["\\ulcorner", 9484, "mopen", "ams"], ["\\urcorner", 9488, "mclose", "ams"], ["\\llcorner", 9492, "mopen", "ams"], ["\\lrcorner", 9496, "mclose", "ams"], ["\\lgroup", 10222, "mopen"], ["\\rgroup", 10223, "mclose"], ["\\lmoustache", 9136, "mopen"], ["\\rmoustache", 9137, "mclose"]]), te([["\\dashrightarrow", 8674], ["\\dashleftarrow", 8672], ["\\Rrightarrow", 8667], ["\\Lleftarrow", 8666], ["\\leftrightarrows", 8646], ["\\rightleftarrows", 8644], ["\\curvearrowright", 8631], ["\\curvearrowleft", 8630], ["\\rightrightarrows", 8649], ["\\leftleftarrows", 8647], ["\\upuparrows", 8648], ["\\downdownarrows", 8650], ["\\vartriangle", 9651], ["\\triangleq", 8796], ["\\vartriangleleft", 8882], ["\\trianglelefteq", 8884], ["\\ntriangleleft", 8938], ["\\ntrianglelefteq", 8940], ["\\vartriangleright", 8883], ["\\trianglerighteq", 8885], ["\\ntriangleright", 8939], ["\\ntrianglerighteq", 8941], ["\\blacktriangleleft", 9664], ["\\blacktriangleright", 9654], ["\\leftarrowtail", 8610], ["\\rightarrowtail", 8611], ["\\looparrowright", 8620], ["\\looparrowleft", 8619], ["\\twoheadleftarrow", 8606], ["\\twoheadrightarrow", 8608], ["\\rightleftharpoons", 8652], ["\\leftrightharpoons", 8651], ["\\Rsh", 8625], ["\\Lsh", 8624], ["\\circlearrowright", 8635], ["\\circlearrowleft", 8634], ["\\restriction", 8638], ["\\upharpoonright", 8638], ["\\upharpoonleft", 8639], ["\\downharpoonright", 8642], ["\\downharpoonleft", 8643], ["\\rightsquigarrow", 8669], ["\\leadsto", 8669], ["\\leftrightsquigarrow", 8621], ["\\multimap", 8888], ["\\nrightarrow", 8603], ["\\nleftarrow", 8602], ["\\nRightarrow", 8655], ["\\nLeftarrow", 8653], ["\\nleftrightarrow", 8622], ["\\nLeftrightarrow", 8654], ["\\shortparallel", 8741], ["\\nless", 8814], ["\\nleqslant", 57360], ["\\lneq", 10887], ["\\lneqq", 8808], ["\\nleqq", 57361], ["\\lvertneqq", 57356], ["\\lnsim", 8934], ["\\lnapprox", 10889], ["\\nprec", 8832], ["\\npreceq", 8928], ["\\precnsim", 8936], ["\\precnapprox", 10937], ["\\nsim", 8769], ["\\nshortmid", 57350], ["\\nmid", 8740], ["\\nvdash", 8876], ["\\nvDash", 8877], ["\\ngtr", 8815], ["\\ngeqslant", 57359], ["\\ngeqq", 57358], ["\\gneq", 10888], ["\\gneqq", 8809], ["\\gvertneqq", 57357], ["\\gnsim", 8935], ["\\gnapprox", 10890], ["\\nsucc", 8833], ["\\nsucceq", 8929], ["\\succnsim", 8937], ["\\succnapprox", 10938], ["\\ncong", 8774], ["\\nshortparallel", 57351], ["\\nparallel", 8742], ["\\nVDash", 8879], ["\\nsupseteqq", 57368], ["\\supsetneq", 8843], ["\\varsupsetneq", 57371], ["\\supsetneqq", 10956], ["\\varsupsetneqq", 57369], ["\\nVdash", 8878], ["\\precneqq", 10933], ["\\succneqq", 10934], ["\\nsubseteqq", 57366], ["\\leqslant", 10877], ["\\geqslant", 10878], ["\\gtrsim", 8819], ["\\approxeq", 8778], ["\\thickapprox", 8776], ["\\lessapprox", 10885], ["\\gtrapprox", 10886], ["\\precapprox", 10935], ["\\succapprox", 10936], ["\\thicksim", 8764], ["\\succsim", 8831], ["\\precsim", 8830], ["\\backsim", 8765], ["\\eqsim", 8770], ["\\backsimeq", 8909], ["\\lesssim", 8818], ["\\nleq", 8816], ["\\ngeq", 8817], ["\\smallsmile", 8995], ["\\smallfrown", 8994], ["\\leqq", 8806], ["\\eqslantless", 10901], ["\\lll", 8920], ["\\lessgtr", 8822], ["\\lesseqgtr", 8922], ["\\lesseqqgtr", 10891], ["\\risingdotseq", 8787], ["\\fallingdotseq", 8786], ["\\subseteqq", 10949], ["\\Subset", 8912], ["\\sqsubset", 8847], ["\\preccurlyeq", 8828], ["\\curlyeqprec", 8926], ["\\vDash", 8872], ["\\Vvdash", 8874], ["\\bumpeq", 8783], ["\\Bumpeq", 8782], ["\\geqq", 8807], ["\\eqslantgtr", 10902], ["\\ggg", 8921], ["\\gtrless", 8823], ["\\gtreqless", 8923], ["\\gtreqqless", 10892], ["\\supseteqq", 10950], ["\\Supset", 8913], ["\\sqsupset", 8848], ["\\succcurlyeq", 8829], ["\\curlyeqsucc", 8927], ["\\Vdash", 8873], ["\\shortmid", 8739], ["\\between", 8812], ["\\pitchfork", 8916], ["\\varpropto", 8733], ["\\backepsilon", 8717], ["\\llless", 8920], ["\\gggtr", 8921], ["\\doteqdot", 8785], ["\\Doteq", 8785], ["\\eqcirc", 8790], ["\\circeq", 8791], ["\\therefore", 8756], ["\\because", 8757]], "mrel", "ams"), te([["+", 43], ["-", 8722], ["−", 8722], ["\\pm", 177], ["\\mp", 8723], ["*", 8727], ["\\times", 215], ["\\div", 247], ["\\divides", 8739], ["\\cdot", 8901], ["\\cap", 8745], ["\\cup", 8746], ["\\setminus", 8726], ["\\land", 8743], ["\\wedge", 8743], ["\\lor", 8744], ["\\vee", 8744], ["\\circ", 8728], ["\\bigcirc", 9711], ["\\bullet", 8729], ["\\oplus", 8853], ["\\ominus", 8854], ["\\otimes", 8855], ["\\odot", 8857], ["\\oslash", 8856], ["\\bigtriangleup", 9651], ["\\bigtriangledown", 9661], ["\\triangleleft", 9667], ["\\triangleright", 9657], ["\\And", 38], ["\\dagger", 8224], ["\\dag", 8224], ["\\ddag", 8225], ["\\ddagger", 8225], ["\\ast", 8727], ["\\star", 8902], ["\\bigstar", 9733], ["\\diamond", 8900]], "mbin"), te([["\\lhd", 8882], ["\\rhd", 8883], ["\\lessdot", 8918], ["\\gtrdot", 8919], ["\\ltimes", 8905], ["\\rtimes", 8906], ["\\leftthreetimes", 8907], ["\\rightthreetimes", 8908], ["\\intercal", 8890], ["\\dotplus", 8724], ["\\doublebarwedge", 10846], ["\\divideontimes", 8903], ["\\centerdot", 8901], ["\\smallsetminus", 8726], ["\\barwedge", 8892], ["\\veebar", 8891], ["\\nor", 8891], ["\\curlywedge", 8911], ["\\curlyvee", 8910], ["\\boxminus", 8863], ["\\boxplus", 8862], ["\\boxtimes", 8864], ["\\boxdot", 8865], ["\\circleddash", 8861], ["\\circledast", 8859], ["\\circledcirc", 8858], ["\\unlhd", 8884], ["\\unrhd", 8885]], "mbin", "ams"), te([["\\surd", 8730], ["\\infty", 8734], ["\\prime", 8242], ["\\doubleprime", 8243], ["\\angle", 8736], ["`", 8216], ["\\$", 36], ["\\%", 37], ["\\_", 95], ["\\alpha", 945], ["\\beta", 946], ["\\gamma", 947], ["\\delta", 948], ["\\epsilon", 1013], ["\\varepsilon", 949], ["\\zeta", 950], ["\\eta", 951], ["\\theta", 952], ["\\vartheta", 977], ["\\iota", 953], ["\\kappa", 954], ["\\varkappa", 1008, "mord", "ams"], ["\\lambda", 955], ["\\mu", 956], ["\\nu", 957], ["\\xi", 958], ["\\omicron", 111], ["\\pi", 960], ["\\varpi", 982], ["\\rho", 961], ["\\varrho", 1009], ["\\sigma", 963], ["\\varsigma", 962], ["\\tau", 964], ["\\phi", 981], ["\\varphi", 966], ["\\upsilon", 965], ["\\chi", 967], ["\\psi", 968], ["\\omega", 969], ["\\Gamma", 915], ["\\Delta", 916], ["\\Theta", 920], ["\\Lambda", 923], ["\\Xi", 926], ["\\Pi", 928], ["\\Sigma", 931], ["\\Upsilon", 933], ["\\Phi", 934], ["\\Psi", 936], ["\\Omega", 937], ["\\digamma", 989, "mord", "ams"], ["\\emptyset", 8709]]), te([["=", 61], ["<", 60], ["\\lt", 60], [">", 62], ["\\gt", 62], ["\\le", 8804], ["\\leq", 8804], ["\\ge", 8805], ["\\geq", 8805], ["\\ll", 8810], ["\\gg", 8811], ["\\coloneq", 8788], ["\\measeq", 8797], ["\\eqdef", 8798], ["\\questeq", 8799], [":", 58], ["\\cong", 8773], ["\\equiv", 8801], ["\\prec", 8826], ["\\preceq", 10927], ["\\succ", 8827], ["\\succeq", 10928], ["\\perp", 8869], ["\\propto", 8733], ["\\Colon", 8759], ["\\smile", 8995], ["\\frown", 8994], ["\\sim", 8764], ["\\doteq", 8784], ["\\bowtie", 8904], ["\\Join", 8904], ["\\asymp", 8781], ["\\sqsubseteq", 8849], ["\\sqsupseteq", 8850], ["\\approx", 8776], ["\\~", 126], ["\\leftrightarrow", 8596], ["\\Leftrightarrow", 8660], ["\\models", 8872], ["\\vdash", 8866], ["\\dashv", 8867], ["\\roundimplies", 10608], ["\\in", 8712], ["\\notin", 8713], ["\\ni", 8715], ["\\owns", 8715], ["\\subset", 8834], ["\\supset", 8835], ["\\subseteq", 8838], ["\\supseteq", 8839], ["\\differencedelta", 8710], ["\\mvert", 8739], ["\\parallel", 8741], ["\\simeq", 8771]], "mrel"), te([["\\lnot", 172], ["\\neg", 172], ["\\triangle", 9651], ["\\subsetneq", 8842], ["\\varsubsetneq", 57370], ["\\subsetneqq", 10955], ["\\varsubsetneqq", 57367], ["\\nsubset", 8836], ["\\nsupset", 8837], ["\\nsubseteq", 8840], ["\\nsupseteq", 8841]], "mrel", "ams"), te([["\\wp", 8472], ["\\aleph", 8501]]), te([["\\blacktriangle", 9650], ["\\hslash", 8463], ["\\Finv", 8498], ["\\Game", 8513], ["\\eth", 240], ["\\mho", 8487], ["\\Bbbk", 107], ["\\yen", 165], ["\\square", 9633], ["\\Box", 9633], ["\\blacksquare", 9632], ["\\circledS", 9416], ["\\circledR", 174], ["\\triangledown", 9661], ["\\blacktriangledown", 9660], ["\\checkmark", 10003], ["\\diagup", 9585], ["\\measuredangle", 8737], ["\\sphericalangle", 8738], ["\\backprime", 8245], ["\\backdoubleprime", 8246], ["\\Diamond", 9674], ["\\lozenge", 9674], ["\\blacklozenge", 10731], ["\\varnothing", 8709], ["\\complement", 8705], ["\\maltese", 10016], ["\\beth", 8502], ["\\daleth", 8504], ["\\gimel", 8503]], "mord", "ams"), te([["\\ ", 160], ["~", 160], ["\\space", 160]], "space"), pe(["!", ",", ":", ";", "enskip", "enspace", "quad", "qquad"], "", { createAtom: (e3, t3, a2, r2) => new aa(e3, a2, r2) }), te([["\\colon", 58], ["\\cdotp", 8901], ["\\vdots", 8942, "mord"], ["\\ldotp", 46], [",", 44], [";", 59]], "mpunct"), te([["\\cdots", 8943], ["\\ddots", 8945], ["\\ldots", 8230], ["\\mathellipsis", 8230]], "minner"), te([["\\/", 47], ["|", 8739, "mord"], ["\\imath", 305], ["\\jmath", 567], ["\\degree", 176], ["'", 8242], ['"', 8221]]);
        var tr = { "&": "\\&", "%": "\\%", "''": "^{\\doubleprime}", alpha: "\\alpha", delta: "\\delta", Delta: "\\Delta", pi: "\\pi", Pi: "\\Pi", theta: "\\theta", Theta: "\\Theta", ii: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\imaginaryI" }, jj: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\imaginaryJ" }, ee: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\exponentialE" }, nabla: "\\nabla", grad: "\\nabla", del: "\\partial", deg: { after: "digit+space", value: "\\degree" }, infty: "\\infty", "∞": "\\infty", oo: { after: "nothing+digit+frac+surd+binop+relop+punct+array+openfence+closefence+space", value: "\\infty" }, "∑": "\\sum", sum: "\\sum_{#?}^{#?}", int: "\\int_{#?}^{#?}", prod: "\\prod_{#?}^{#?}", sqrt: "\\sqrt{#?}", "∆": "\\differentialD", "∂": "\\differentialD", arcsin: "\\arcsin", arccos: "\\arccos", arctan: "\\arctan", arcsec: "\\arcsec", arccsc: "\\arccsc", arsinh: "\\arsinh", arcosh: "\\arcosh", artanh: "\\artanh", arcsech: "\\arcsech", arccsch: "\\arccsch", arg: "\\arg", ch: "\\ch", cosec: "\\cosec", cosh: "\\cosh", cot: "\\cot", cotg: "\\cotg", coth: "\\coth", csc: "\\csc", ctg: "\\ctg", cth: "\\cth", sec: "\\sec", sinh: "\\sinh", sh: "\\sh", tanh: "\\tanh", tg: "\\tg", th: "\\th", sin: "\\sin", cos: "\\cos", tan: "\\tan", lg: "\\lg", lb: "\\lb", log: "\\log", ln: "\\ln", exp: "\\exp", lim: "\\lim_{#?}", dx: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\differentialD x" }, dy: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\differentialD y" }, dt: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\differentialD t" }, AA: "\\forall", EE: "\\exists", "!EE": "\\nexists", "&&": "\\land", xin: { after: "nothing+text+relop+punct+openfence+space", value: "x \\in" }, in: { after: "nothing+letter+closefence", value: "\\in" }, "!in": "\\notin", NN: "\\mathbb{N}", ZZ: "\\Z", QQ: "\\Q", RR: "\\R", CC: "\\C", xx: "\\times", "+-": "\\pm", "≠": "\\ne", "!=": "\\ne", "≥": "\\ge", ">=": "\\ge", "≤": "\\le", "<=": "\\le", "<<": "\\ll", ">>": "\\gg", "~~": "\\approx", "≈": "\\approx", "?=": "\\questeq", "÷": "\\div", "¬": "\\neg", ":=": "\\coloneq", "::": "\\Colon", "(:": "\\langle", ":)": "\\rangle", beta: "\\beta", chi: "\\chi", epsilon: "\\epsilon", varepsilon: "\\varepsilon", eta: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\eta" }, gamma: "\\gamma", Gamma: "\\Gamma", iota: "\\iota", kappa: "\\kappa", lambda: "\\lambda", Lambda: "\\Lambda", mu: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\mu" }, nu: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\nu" }, µ: "\\mu", phi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\phi" }, Phi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\Phi" }, varphi: "\\varphi", psi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\psi" }, Psi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\Psi" }, rho: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\rho" }, sigma: "\\sigma", Sigma: "\\Sigma", tau: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\tau" }, vartheta: "\\vartheta", upsilon: "\\upsilon", xi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space", value: "\\xi" }, Xi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\Xi" }, zeta: "\\zeta", omega: "\\omega", Omega: "\\Omega", Ω: "\\omega", forall: "\\forall", exists: "\\exists", "!exists": "\\nexists", ":.": "\\therefore", liminf: "\\liminf_{#?}", limsup: "\\limsup_{#?}", argmin: "\\operatorname*{arg~min}_{#?}", argmax: "\\operatorname*{arg~max}_{#?}", det: "\\det", mod: "\\mod", max: "\\max", min: "\\min", erf: "\\operatorname{erf}", erfc: "\\operatorname{erfc}", bessel: "\\operatorname{bessel}", mean: "\\operatorname{mean}", median: "\\operatorname{median}", fft: "\\operatorname{fft}", lcm: "\\operatorname{lcm}", gcd: "\\operatorname{gcd}", randomReal: "\\operatorname{randomReal}", randomInteger: "\\operatorname{randomInteger}", Re: "\\operatorname{Re}", Im: "\\operatorname{Im}", mm: { after: "nothing+digit+operator", value: "\\operatorname{mm}" }, cm: { after: "nothing+digit+operator", value: "\\operatorname{cm}" }, km: { after: "nothing+digit+operator", value: "\\operatorname{km}" }, kg: { after: "nothing+digit+operator", value: "\\operatorname{kg}" }, "...": "\\ldots", "+...": "+\\cdots", "-...": "-\\cdots", "->...": "\\to\\cdots", "->": "\\to", "|->": "\\mapsto", "-->": "\\longrightarrow", "<--": "\\longleftarrow", "=>": "\\Rightarrow", "==>": "\\Longrightarrow", "<=>": "\\Leftrightarrow", "<->": "\\leftrightarrow", "(.)": "\\odot", "(+)": "\\oplus", "(/)": "\\oslash", "(*)": "\\otimes", "(-)": "\\ominus", "||": "\\Vert", "{": "\\{", "}": "\\}", "*": "\\cdot" };
        function ar(e3, t3) {
          var a2;
          let r2 = null != (a2 = null == t3 ? void 0 : t3.format) ? a2 : "auto";
          return "auto" === r2 && ([r2, e3] = function(e4) {
            if ((e4 = e4.trim()).length <= 1) return ["latex", e4];
            let t4;
            return [t4, e4] = sr(e4), t4 ? ["latex", e4] : e4.startsWith("`") && e4.endsWith("`") ? ["ascii-math", e4 = e4.substring(1, e4.length - 1)] : e4.includes("\\") ? ["latex", e4] : /\$.+\$/.test(e4) ? ["latex", `\\text{${e4}}`] : [void 0, e4];
          }(e3)), "ascii-math" === r2 ? ["ascii-math", rr(e3 = (e3 = (e3 = (e3 = (e3 = (e3 = e3.replace(/\u2061/gu, "")).replace(/\u3016/gu, "{")).replace(/\u3017/gu, "}")).replace(/([^\\])sinx/g, "$1\\sin x")).replace(/([^\\])cosx/g, "$1\\cos x ")).replace(/\u2013/g, "-"), { inlineShortcuts: null == t3 ? void 0 : t3.inlineShortcuts })] : ["latex", e3];
        }
        function rr(e3, t3) {
          var a2, r2, i2;
          if (!e3) return "";
          let o2, n2 = false, s2 = null != (a2 = t3.inlineShortcuts) ? a2 : tr;
          if (!n2 && (e3.startsWith("^") || e3.startsWith("_")) && (o2 = ir(e3.slice(1), { inlineShortcuts: s2, noWrap: true }), e3 = e3[0] + "{" + o2.match + "}", e3 += rr(o2.rest, t3), n2 = true), n2 || (o2 = e3.match(/^(sqrt|\u221A)(.*)/), o2 && (o2 = ir(o2[2], { inlineShortcuts: s2, noWrap: true }), e3 = "\\sqrt{" + (null != (r2 = o2.match) ? r2 : "\\placeholder{}") + "}", e3 += rr(o2.rest, t3), n2 = true)), n2 || (o2 = e3.match(/^(\\cbrt|\u221B)(.*)/), o2 && (o2 = ir(o2[2], { inlineShortcuts: s2, noWrap: true }), e3 = "\\sqrt[3]{" + (null != (i2 = o2.match) ? i2 : "\\placeholder{}") + "}", e3 += rr(o2.rest, t3), n2 = true)), n2 || (o2 = e3.match(/^abs(.*)/), o2 && (o2 = ir(o2[1], { inlineShortcuts: s2, noWrap: true }), e3 = "\\left|" + o2.match + "\\right|", e3 += rr(o2.rest, t3), n2 = true)), n2 || (o2 = e3.match(/^["”“](.*?)["”“](.*)/), o2 && (e3 = "\\text{" + o2[1] + "}", e3 += rr(o2[2], t3), n2 = true)), n2 || (o2 = e3.match(/^([^a-zA-Z\(\{\[\_\^\\\s"]+)(.*)/), o2 && (e3 = or(o2[1], s2), e3 += rr(o2[2], t3), n2 = true)), !n2 && /^([fgh])[^a-zA-Z]/.test(e3) && (o2 = ir(e3.slice(1), { inlineShortcuts: s2, noWrap: true }), e3 = "(" === e3[1] ? e3[0] + "\\left(" + o2.match + "\\right)" : e3[0] + o2.match, e3 += rr(o2.rest, t3), n2 = true), n2 || (o2 = e3.match(/^([a-zA-Z]+)(.*)/), o2 && (e3 = or(o2[1], s2), e3 += rr(o2[2], t3), n2 = true)), !n2) if (o2 = ir(e3, { inlineShortcuts: s2, noWrap: true }), o2.match && "/" === o2.rest[0]) {
            let a3 = ir(o2.rest.slice(1), { inlineShortcuts: s2, noWrap: true });
            a3.match && (e3 = "\\frac{" + o2.match + "}{" + a3.match + "}" + rr(a3.rest, t3)), n2 = true;
          } else o2.match && (e3 = e3.startsWith("(") ? "\\left(" + o2.match + "\\right)" + rr(o2.rest, t3) : o2.match + rr(o2.rest, t3), n2 = true);
          return n2 || (o2 = e3.match(/^(\s+)(.*)$/), o2 && (e3 = " " + rr(o2[2], t3), n2 = true)), e3;
        }
        function ir(e3, t3) {
          let a2 = "", r2 = e3 = e3.trim(), i2 = e3.charAt(0), o2 = { "(": ")", "{": "}", "[": "]" }[i2];
          if (o2) {
            let n2 = 1, s2 = 1;
            for (; s2 < e3.length && n2 > 0; ) e3[s2] === i2 && n2++, e3[s2] === o2 && n2--, s2++;
            0 === n2 ? (t3.noWrap && "(" === i2 ? a2 = rr(e3.substring(1, s2 - 1), t3) : ("{" === i2 && "}" === o2 && (i2 = "\\{", o2 = "\\}"), a2 = "\\left" + i2 + rr(e3.substring(1, s2 - 1), t3) + "\\right" + o2), r2 = e3.slice(Math.max(0, s2))) : (a2 = e3.substring(1, s2), r2 = "");
          } else {
            let i3 = e3.match(/^([a-zA-Z]+)/);
            if (i3) {
              let a3 = er(null, e3, t3.inlineShortcuts);
              if (a3) return a3 = a3.replace("_{#?}", ""), a3 = a3.replace("^{#?}", ""), { match: a3, rest: e3.slice(a3.length) };
            }
            if (i3 = e3.match(/^([a-zA-Z])/), i3) return { match: i3[1], rest: e3.slice(1) };
            if (i3 = e3.match(/^(-)?\d+(\.\d*)?/), i3) return { match: i3[0], rest: e3.slice(i3[0].length) };
            /^\\(left|right)/.test(e3) || (i3 = e3.match(/^(\\[a-zA-Z]+)/), i3 && (r2 = e3.slice(i3[1].length), a2 = i3[1]));
          }
          return { match: a2, rest: r2 };
        }
        function or(e3, t3) {
          let a2 = er(null, e3, t3);
          return a2 ? (a2 = a2.replace("_{#?}", ""), a2 = a2.replace("^{#?}", ""), a2 += " ") : a2 = e3, a2;
        }
        var nr = [["\\[", "\\]"], ["\\(", "\\)"], ["$$", "$$"], ["$", "$"], ["\\begin{math}", "\\end{math}"], ["\\begin{displaymath}", "\\end{displaymath}"], ["\\begin{equation}", "\\end{equation}"], ["\\begin{equation*}", "\\end{equation*}"]];
        function sr(e3) {
          let t3 = e3.trim();
          for (let e4 of nr) if (t3.startsWith(e4[0]) && t3.endsWith(e4[1])) return [true, t3.substring(e4[0].length, t3.length - e4[1].length)];
          return [false, e3];
        }
        var lr = (e3, t3, a2) => (nr.some((e4) => t3.startsWith(e4[0]) && t3.endsWith(e4[1])) || (t3 = `$$ ${t3} $$`), t3), dr = class {
          constructor(e3) {
            dr._registry[e3] = this;
          }
          static onPaste(e3, t3, a2) {
            var r2;
            let i2 = new ClipboardEvent("paste", { clipboardData: a2.clipboardData, cancelable: true });
            return !(null == (r2 = t3.host) || !r2.dispatchEvent(i2)) && dr._registry[e3].onPaste(t3, a2);
          }
          static onCopy(e3, t3) {
            if (!t3.clipboardData) return;
            let a2 = e3.model, r2 = a2.selectionIsCollapsed ? [0, a2.lastOffset] : Qa(a2.selection), i2 = a2.getAtoms(r2);
            if (i2.every((e4) => "text" === e4.mode || !e4.mode)) t3.clipboardData.setData("text/plain", i2.filter((e4) => e4 instanceof la).map((e4) => e4.value).join(""));
            else if (i2.every((e4) => "latex" === e4.mode)) t3.clipboardData.setData("text/plain", a2.getAtoms(r2, { includeChildren: true }).map((e4) => {
              var t4;
              return null != (t4 = e4.value) ? t4 : "";
            }).join(""));
            else {
              let o2;
              o2 = 1 === i2.length && void 0 !== i2[0].verbatimLatex ? i2[0].verbatimLatex : a2.getValue(r2, "latex-expanded"), t3.clipboardData.setData("application/x-latex", o2);
              try {
                t3.clipboardData.setData("text/plain", e3.options.onExport(e3, o2, r2));
              } catch (e4) {
              }
              1 === i2.length && ("root" === i2[0].type || "group" === i2[0].type) && (i2 = i2[0].body.filter((e4) => "first" !== e4.type));
              try {
                t3.clipboardData.setData("application/json+mathlive", JSON.stringify(i2.map((e4) => e4.toJson())));
              } catch (e4) {
              }
              let n2 = e3.computeEngine;
              if (n2) try {
                n2.jsonSerializationOptions = { metadata: ["latex"] };
                let e4 = n2.parse(o2), a3 = JSON.stringify(e4.json);
                a3 && t3.clipboardData.setData("application/json", a3);
              } catch (e4) {
              }
            }
            t3.preventDefault();
          }
          static insert(e3, t3, a2, r2 = {}) {
            return dr._registry[e3].insert(t3, a2, r2);
          }
          onPaste(e3, t3) {
            return false;
          }
          insert(e3, t3, a2) {
            return false;
          }
        }, cr = dr;
        cr._registry = {};
        var ur = { "\\ne": "<mo>&ne;</mo>", "\\neq": "<mo>&neq;</mo>", "\\pm": "&#177;", "\\times": "&#215;", "\\colon": ":", "\\vert": "|", "\\Vert": "∥", "\\mid": "∣", "\\lbrace": "{", "\\rbrace": "}", "\\lparen": "(", "\\rparen": ")", "\\langle": "⟨", "\\rangle": "⟩", "\\lfloor": "⌊", "\\rfloor": "⌋", "\\lceil": "⌈", "\\rceil": "⌉", "\\vec": "&#x20d7;", "\\acute": "&#x00b4;", "\\grave": "&#x0060;", "\\dot": "&#x02d9;", "\\ddot": "&#x00a8;", "\\tilde": "&#x007e;", "\\bar": "&#x00af;", "\\breve": "&#x02d8;", "\\check": "&#x02c7;", "\\hat": "&#x005e;" }, pr = "&#x2061;", hr = "&#8290;";
        function mr(e3) {
          return e3.replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        }
        function fr(e3, t3) {
          return e3 && t3.generateID ? ` extid="${e3}"` : "";
        }
        function yr(e3, t3, a2) {
          let r2 = false;
          t3 = null != t3 ? t3 : e3.atoms.length;
          let i2 = "", o2 = "", n2 = e3.atoms[e3.index];
          return e3.index < t3 && ("mord" === n2.type || "macro" === n2.type) && !n2.isDigit() && (o2 = Mr(n2, a2), e3.index += 1), o2.length > 0 && (r2 = true, i2 = o2, ("mi" === e3.lastType || "mn" === e3.lastType || "mtext" === e3.lastType || "fence" === e3.lastType) && !/^<mo>(.*)<\/mo>$/.test(i2) && (i2 = `<mo>${hr}</mo>${i2}`), o2.endsWith(">f</mi>") || o2.endsWith(">g</mi>") ? (i2 += `<mo>${pr}</mo>`, e3.lastType = "applyfunction") : e3.lastType = /^<mo>(.*)<\/mo>$/.test(i2) ? "mo" : "mi", br(o2, e3, a2) || (e3.mathML += i2)), r2;
        }
        function br(e3, t3, a2) {
          var r2;
          let i2 = t3.atoms[t3.index - 1];
          if (!i2) return false;
          if (!i2.superscript && !i2.subscript) {
            if ("msubsup" !== (null == (r2 = t3.atoms[t3.index]) ? void 0 : r2.type)) return false;
            i2 = t3.atoms[t3.index], t3.index += 1;
          }
          let o2 = wr(i2.superscript, a2), n2 = wr(i2.subscript, a2);
          if (!o2 && !n2) return false;
          let s2 = "";
          return o2 && n2 ? s2 = `<msubsup>${e3}${n2}${o2}</msubsup>` : o2 ? s2 = `<msup>${e3}${o2}</msup>` : n2 && (s2 = `<msub>${e3}${n2}</msub>`), t3.mathML += s2, t3.lastType = "", true;
        }
        function gr(e3, t3, a2) {
          t3 = null != t3 ? t3 : e3.atoms.length;
          let r2 = e3.index, i2 = "";
          for (; e3.index < t3 && "text" === e3.atoms[e3.index].mode; ) i2 += e3.atoms[e3.index].value ? e3.atoms[e3.index].value : " ", e3.index += 1;
          return i2.length > 0 && (e3.mathML += `<mtext ${fr(e3.atoms[r2].id, a2)}
      >${i2}</mtext>`, e3.lastType = "mtext", true);
        }
        function vr(e3, t3, a2) {
          t3 = null != t3 ? t3 : e3.atoms.length;
          let r2 = e3.index, i2 = "", o2 = function(e4) {
            let t4 = -1, a3 = e4.index, r3 = false, i3 = false;
            for (; a3 < e4.atoms.length && !r3 && !i3; ) {
              let t5 = e4.atoms[a3];
              r3 = !t5.isDigit(), i3 = !r3 && void 0 !== t5.superscript, a3++;
            }
            return i3 && (t4 = a3 - 1), t4;
          }(e3);
          for (o2 >= 0 && o2 < t3 && (t3 = o2); e3.index < t3 && e3.atoms[e3.index].isDigit(); ) i2 += e3.atoms[e3.index].asDigit(), e3.index += 1;
          return !(i2.length <= 0 || (i2 = "<mn" + fr(e3.atoms[r2].id, a2) + ">" + i2 + "</mn>", o2 < 0 && function(e4) {
            return e4.index < e4.atoms.length && e4.atoms[e4.index].superscript && "msubsup" === e4.atoms[e4.index].type;
          }(e3) && (o2 = e3.index, e3.index += 1), br(i2, e3, a2) || (e3.mathML += i2, e3.lastType = "mn"), 0));
        }
        function kr(e3, t3, a2) {
          let r2 = false;
          t3 = null != t3 ? t3 : e3.atoms.length;
          let i2 = "", o2 = "";
          if (e3.index < t3 && "mopen" === e3.atoms[e3.index].type) {
            let n2 = false, s2 = 0, l2 = e3.index, d2 = -1, c2 = l2 + 1;
            for (; c2 < t3 && !n2; ) "mopen" === e3.atoms[c2].type ? s2 += 1 : "mclose" === e3.atoms[c2].type && (s2 -= 1), -1 === s2 && (n2 = true, d2 = c2), c2 += 1;
            n2 && (i2 = "<mrow>", i2 += _r(e3.atoms[l2], a2), i2 += wr(e3.atoms, a2, l2 + 1, d2), i2 += _r(e3.atoms[d2], a2), i2 += "</mrow>", ("mi" === e3.lastType || "mn" === e3.lastType || "mfrac" === e3.lastType || "fence" === e3.lastType) && (i2 = `<mo>${hr}</mo>${i2}`), e3.index = d2 + 1, br(i2, e3, a2) && (r2 = true, e3.lastType = "", i2 = ""), o2 = "fence");
          }
          return i2.length > 0 && (r2 = true, e3.mathML += i2, e3.lastType = o2), r2;
        }
        function xr(e3, t3, a2) {
          let r2 = false;
          t3 = null != t3 ? t3 : e3.atoms.length;
          let i2 = "", o2 = "", n2 = e3.atoms[e3.index];
          if (e3.index < t3 && ("mbin" === n2.type || "mrel" === n2.type)) i2 += Mr(e3.atoms[e3.index], a2), e3.index += 1, o2 = "mo";
          else if (e3.index < t3 && "mop" === n2.type) {
            if ("over-under" === n2.subsupPlacement && (n2.superscript || n2.subscript)) {
              let e4 = _r(n2, a2);
              n2.superscript && n2.subscript ? (i2 += "<munderover>" + e4, i2 += wr(n2.subscript, a2), i2 += wr(n2.superscript, a2), i2 += "</munderover>") : n2.superscript ? (i2 += "<mover>" + e4, i2 += wr(n2.superscript, a2), i2 += "</mover>") : n2.subscript && (i2 += "<munder>" + e4, i2 += wr(n2.subscript, a2), i2 += "</munder>"), o2 = "mo";
            } else {
              let t4 = e3.atoms[e3.index], r3 = "\\operatorname" === t4.value, n3 = r3 ? '<mi class="MathML-Unit"' + fr(t4.id, a2) + ">" + Sr(t4.value) + "</mi>" : _r(t4, a2);
              i2 += n3, r3 || /^<mo>(.*)<\/mo>$/.test(n3) ? o2 = r3 ? "mi" : "mo" : (i2 += `<mo>${pr}</mo>`, o2 = "applyfunction");
            }
            ("mi" === e3.lastType || "mn" === e3.lastType) && !/^<mo>(.*)<\/mo>$/.test(i2) && (i2 = `<mo>${hr}</mo>${i2}`), e3.index += 1;
          }
          return i2.length > 0 && (r2 = true, br(i2, e3, a2) || (e3.mathML += i2, e3.lastType = o2)), r2;
        }
        function wr(e3, t3, a2, r2) {
          let i2 = { atoms: [], index: null != a2 ? a2 : 0, mathML: "", lastType: "" };
          if ("number" == typeof e3 || "boolean" == typeof e3) i2.mathML = e3.toString();
          else if ("string" == typeof e3) i2.mathML = e3;
          else if (e3 instanceof Et) i2.mathML = Mr(e3, t3);
          else if (Array.isArray(e3)) {
            i2.atoms = e3;
            let a3 = 0;
            for (r2 = r2 || (e3 ? e3.length : 0); i2.index < r2; ) if (gr(i2, r2, t3) || vr(i2, r2, t3) || yr(i2, r2, t3) || xr(i2, r2, t3) || kr(i2, r2, t3)) a3 += 1;
            else if (i2.index < r2) {
              let e4 = Mr(i2.atoms[i2.index], t3);
              "mn" === i2.lastType && e4.length > 0 && "genfrac" === i2.atoms[i2.index].type && (e4 = "<mo>&#x2064;</mo>" + e4), "genfrac" === i2.atoms[i2.index].type ? i2.lastType = "mfrac" : i2.lastType = "", i2.index += 1, br(e4, i2, t3) ? a3 += 1 : e4.length > 0 && (i2.mathML += e4, a3 += 1);
            }
            a3 > 1 && (i2.mathML = "<mrow>" + i2.mathML + "</mrow>");
          }
          return i2.mathML;
        }
        function _r(e3, t3) {
          let a2 = "", r2 = Sr(e3.value);
          return r2 && (a2 = "<mo" + fr(e3.id, t3) + ">" + r2 + "</mo>"), a2;
        }
        function Sr(e3) {
          if (!e3) return "";
          if ("string" == typeof e3) return mr(e3);
          if (!Array.isArray(e3) && "string" == typeof e3.body) return mr(e3.body);
          let t3 = "";
          for (let a2 of e3) "string" == typeof a2.value && (t3 += a2.value);
          return mr(t3);
        }
        function Mr(e3, t3) {
          var a2, r2, i2, o2, n2, s2, l2, d2, c2, u2, p2, h2, m2, f2, y2, b2, g2, v2, k2, x2, w2, _2, S2, M2, L2;
          let C2, A2, D2, T2, z2, B2, K2 = { widehat: "^", widecheck: "ˇ", widetilde: "~", utilde: "~", overleftarrow: "←", underleftarrow: "←", xleftarrow: "←", overrightarrow: "→", underrightarrow: "→", xrightarrow: "→", underbrace: "⏟", overbrace: "⏞", overgroup: "⏠", undergroup: "⏡", overleftrightarrow: "↔", underleftrightarrow: "↔", xleftrightarrow: "↔", Overrightarrow: "⇒", xRightarrow: "⇒", overleftharpoon: "↼", xleftharpoonup: "↼", overrightharpoon: "⇀", xrightharpoonup: "⇀", xLeftarrow: "⇐", xLeftrightarrow: "⇔", xhookleftarrow: "↩", xhookrightarrow: "↪", xmapsto: "↦", xrightharpoondown: "⇁", xleftharpoondown: "↽", xrightleftharpoons: "⇌", xleftrightharpoons: "⇋", xtwoheadleftarrow: "↞", xtwoheadrightarrow: "↠", xlongequal: "=", xtofrom: "⇄", xrightleftarrows: "⇄", xrightequilibrium: "⇌", xleftequilibrium: "⇋" }, E2 = { "\\exponentialE": "&#x02147;", "\\imaginaryI": "&#x2148;", "\\differentialD": "&#x2146;", "\\capitalDifferentialD": "&#x2145;", "\\alpha": "&#x03b1;", "\\pi": "&#x03c0;", "\\infty": "&#x221e;", "\\forall": "&#x2200;", "\\nexists": "&#x2204;", "\\exists": "&#x2203;", "\\hbar": "ℏ", "\\cdotp": "⋅", "\\ldots": "…", "\\cdots": "⋯", "\\ddots": "⋱", "\\vdots": "⋮", "\\ldotp": "." }, $2 = { "\\!": -3 / 18, "\\ ": 6 / 18, "\\,": 3 / 18, "\\:": 4 / 18, "\\;": 5 / 18, "\\enspace": 0.5, "\\quad": 1, "\\qquad": 2, "\\enskip": 0.5 }, q2 = "", O2 = "", P2 = null != (r2 = { cal: "script", frak: "fraktur", bb: "double-struck", scr: "script", cmtt: "monospace", cmss: "sans-serif" }[null != (a2 = e3.fontFamily) ? a2 : e3.font]) ? r2 : "";
          P2 && (P2 = ` mathvariant="${P2}"`);
          let { command: N2 } = e3;
          if ("text" === e3.mode) q2 = `<mi${fr(e3.id, t3)}>${e3.value}</mi>`;
          else switch (e3.type) {
            case "first":
            case "line":
            case "overlap":
            case "msubsup":
            case "phantom":
            case "composition":
            case "rule":
            case "chem":
            case "error":
              break;
            case "group":
            case "root":
              q2 = ur[e3.command] ? ur[e3.command] : wr(e3.body, t3);
              break;
            case "array":
              if ((e3.leftDelim && "." !== e3.leftDelim || e3.rightDelim && "." !== e3.rightDelim) && (q2 += "<mrow>", e3.leftDelim && "." !== e3.leftDelim && (q2 += "<mo>" + (ur[e3.leftDelim] || e3.leftDelim) + "</mo>")), q2 += "<mtable", e3.colFormat) {
                for (q2 += ' columnalign="', D2 = 0; D2 < e3.colFormat.length; D2++) e3.colFormat[D2].align && (q2 += { l: "left", c: "center", r: "right" }[e3.colFormat[D2].align] + " ");
                q2 += '"';
              }
              for (q2 += ">", A2 = 0; A2 < e3.array.length; A2++) {
                for (q2 += "<mtr>", C2 = 0; C2 < e3.array[A2].length; C2++) q2 += "<mtd>" + wr(e3.array[A2][C2], t3) + "</mtd>";
                q2 += "</mtr>";
              }
              q2 += "</mtable>", (e3.leftDelim && "." !== e3.leftDelim || e3.rightDelim && "." !== e3.rightDelim) && (e3.rightDelim && "." !== e3.rightDelim && (q2 += "<mo>" + (ur[e3.leftDelim] || e3.rightDelim) + "</mo>"), q2 += "</mrow>");
              break;
            case "genfrac":
              (e3.leftDelim || e3.rightDelim) && (q2 += "<mrow>"), e3.leftDelim && "." !== e3.leftDelim && (q2 += "<mo" + fr(e3.id, t3) + ">" + (ur[e3.leftDelim] || e3.leftDelim) + "</mo>"), e3.hasBarLine ? (q2 += "<mfrac>", q2 += wr(e3.above, t3) || "<mi>&nbsp;</mi>", q2 += wr(e3.below, t3) || "<mi>&nbsp;</mi>", q2 += "</mfrac>") : (q2 += "<mtable" + fr(e3.id, t3) + ">", q2 += "<mtr>" + wr(e3.above, t3) + "</mtr>", q2 += "<mtr>" + wr(e3.below, t3) + "</mtr>", q2 += "</mtable>"), e3.rightDelim && "." !== e3.rightDelim && (q2 += "<mo" + fr(e3.id, t3) + ">" + (ur[e3.rightDelim] || e3.rightDelim) + "</mo>"), (e3.leftDelim || e3.rightDelim) && (q2 += "</mrow>");
              break;
            case "surd":
              e3.hasEmptyBranch("above") ? (q2 += "<msqrt" + fr(e3.id, t3) + ">", q2 += wr(e3.body, t3), q2 += "</msqrt>") : (q2 += "<mroot" + fr(e3.id, t3) + ">", q2 += wr(e3.body, t3), q2 += wr(e3.above, t3), q2 += "</mroot>");
              break;
            case "leftright":
              q2 = "<mrow>", e3.leftDelim && "." !== e3.leftDelim && (q2 += "<mo" + fr(e3.id, t3) + ">" + (null != (i2 = ur[e3.leftDelim]) ? i2 : e3.leftDelim) + "</mo>"), e3.body && (q2 += wr(e3.body, t3)), e3.rightDelim && "." !== e3.rightDelim && (q2 += "<mo" + fr(e3.id, t3) + ">" + (null != (o2 = ur[e3.rightDelim]) ? o2 : e3.rightDelim) + "</mo>"), q2 += "</mrow>";
              break;
            case "sizeddelim":
            case "delim":
              q2 += '<mo separator="true"' + fr(e3.id, t3) + ">" + (ur[e3.delim] || e3.delim) + "</mo>";
              break;
            case "accent":
              q2 += '<mover accent="true"' + fr(e3.id, t3) + ">", q2 += wr(e3.body, t3), q2 += "<mo>" + (ur[N2] || e3.accent) + "</mo>", q2 += "</mover>";
              break;
            case "overunder":
              z2 = e3.above, T2 = e3.below, (e3.svgAbove || z2) && (e3.svgBelow || T2) ? B2 = e3.body : z2 && z2.length > 0 ? (B2 = e3.body, null != (s2 = null == (n2 = e3.body) ? void 0 : n2[0]) && s2.below ? (T2 = e3.body[0].below, B2 = e3.body[0].body) : "first" === (null == (d2 = null == (l2 = e3.body) ? void 0 : l2[0]) ? void 0 : d2.type) && null != (u2 = null == (c2 = e3.body) ? void 0 : c2[1]) && u2.below && (T2 = e3.body[1].below, B2 = e3.body[1].body)) : T2 && T2.length > 0 && (B2 = e3.body, null != (h2 = null == (p2 = e3.body) ? void 0 : p2[0]) && h2.above ? (z2 = e3.body[0].above, B2 = e3.body[0].body) : "first" === (null == (f2 = null == (m2 = e3.body) ? void 0 : m2[0]) ? void 0 : f2.type) && null != (b2 = null == (y2 = e3.body) ? void 0 : y2[1]) && b2.above && (z2 = e3.body[1].overscript, B2 = e3.body[1].body)), (e3.svgAbove || z2) && (e3.svgBelow || T2) ? (q2 += `<munderover ${P2} ${fr(e3.id, t3)}>`, q2 += null != (g2 = K2[e3.svgBody]) ? g2 : wr(B2, t3), q2 += null != (v2 = K2[e3.svgBelow]) ? v2 : wr(T2, t3), q2 += null != (k2 = K2[e3.svgAbove]) ? k2 : wr(z2, t3), q2 += "</munderover>") : e3.svgAbove || z2 ? (q2 += `<mover ${P2} ${fr(e3.id, t3)}>` + (null != (x2 = K2[e3.svgBody]) ? x2 : wr(B2, t3)), q2 += null != (w2 = K2[e3.svgAbove]) ? w2 : wr(z2, t3), q2 += "</mover>") : (e3.svgBelow || T2) && (q2 += `<munder ${P2} ${fr(e3.id, t3)}>` + (null != (_2 = K2[e3.svgBody]) ? _2 : wr(B2, t3)), q2 += null != (S2 = K2[e3.svgBelow]) ? S2 : wr(T2, t3), q2 += "</munder>");
              break;
            case "placeholder":
            case "mord": {
              q2 = E2[N2] || N2 || ("string" == typeof e3.value ? e3.value : "");
              let a3 = N2 ? N2.match(/{?\\char"([\dabcdefABCDEF]*)}?/) : null;
              a3 ? q2 = "&#x" + a3[1] + ";" : q2.length > 0 && q2.startsWith("\\") && (q2 = "string" == typeof e3.value && e3.value.charCodeAt(0) > 255 ? "&#x" + ("000000" + e3.value.charCodeAt(0).toString(16)).slice(-4) + ";" : "string" == typeof e3.value ? e3.value.charAt(0) : "");
              let r3 = /\d/.test(q2) ? "mn" : "mi";
              q2 = `<${r3}${P2}${fr(e3.id, t3)}>${mr(q2)}</${r3}>`;
              break;
            }
            case "mbin":
            case "mrel":
            case "minner":
              q2 = N2 && E2[N2] ? "<mi" + fr(e3.id, t3) + ">" + E2[N2] + "</mi>" : N2 && ur[N2] ? "<mo" + fr(e3.id, t3) + ">" + ur[N2] + "</mo>" : _r(e3, t3);
              break;
            case "mpunct":
              q2 = '<mo separator="true"' + fr(e3.id, t3) + ">" + (null != (M2 = ur[N2]) ? M2 : N2) + "</mo>";
              break;
            case "mop":
              "​" !== e3.body && (q2 = "<mo" + fr(e3.id, t3) + ">", q2 += "\\operatorname" === N2 ? e3.body : N2 || e3.body, q2 += "</mo>");
              break;
            case "box":
              q2 = '<menclose notation="box"', e3.backgroundcolor && (q2 += ' mathbackground="' + e3.backgroundcolor + '"'), q2 += fr(e3.id, t3) + ">" + wr(e3.body, t3) + "</menclose>";
              break;
            case "spacing":
              q2 += '<mspace width="' + (null != (L2 = $2[N2]) ? L2 : 0) + 'em"/>';
              break;
            case "enclose":
              q2 = '<menclose notation="';
              for (let t4 in e3.notation) Object.prototype.hasOwnProperty.call(e3.notation, t4) && e3.notation[t4] && (q2 += O2 + t4, O2 = " ");
              q2 += fr(e3.id, t3) + '">' + wr(e3.body, t3) + "</menclose>";
              break;
            case "space":
              q2 += "&nbsp;";
              break;
            case "mopen":
            case "mclose":
              q2 += _r(e3, t3);
              break;
            case "macro":
              {
                let a3 = e3.command + Sr(e3.macroArgs);
                a3 && (q2 += `<mo ${fr(e3.id, t3)}>${a3}</mo>`);
              }
              break;
            case "latexgroup":
            case "tooltip":
              q2 += wr(e3.body, t3);
              break;
            case "latex":
              q2 += "<mtext" + fr(e3.id, t3) + ">" + e3.value + "</mtext>";
          }
          return q2;
        }
        var Lr = { "\\alpha": "alpha ", "\\mu": "mew ", "\\sigma": "sigma ", "\\pi": "pie ", "\\imaginaryI": "eye ", "\\sum": "Summation ", "\\prod": "Product ", a: '<phoneme alphabet="ipa" ph="eɪ">a</phoneme>', A: 'capital <phoneme alphabet="ipa" ph="eɪ">A</phoneme>', "+": "plus ", "-": "minus ", ";": '<break time="150ms"/> semi-colon <break time="150ms"/>', ",": '<break time="150ms"/> comma  <break time="150ms"/>', "|": '<break time="150ms"/>Vertical bar<break time="150ms"/>', "(": '<break time="150ms"/>Open paren. <break time="150ms"/>', ")": '<break time="150ms"/> Close paren. <break time="150ms"/>', "=": "equals ", "<": "is less than ", "\\lt": "is less than ", "<=": "is less than or equal to ", "\\le": "is less than or equal to ", "\\gt": "is greater than ", ">": "is greater than ", "\\ge": "is greater than or equal to ", "\\geq": "is greater than or equal to ", "\\leq": "is less than or equal to ", "!": "factorial ", "\\sin": "sine ", "\\cos": "cosine ", "​": "", "−": "minus ", ":": '<break time="150ms"/> such that <break time="200ms"/> ', "\\colon": '<break time="150ms"/> such that <break time="200ms"/> ', "\\hbar": "etch bar ", "\\iff": '<break time="200ms"/>if, and only if, <break time="200ms"/>', "\\Longleftrightarrow": '<break time="200ms"/>if, and only if, <break time="200ms"/>', "\\land": "and ", "\\lor": "or ", "\\neg": "not ", "\\div": "divided by ", "\\forall": "for all ", "\\exists": "there exists ", "\\nexists": "there does not exists ", "\\in": "element of ", "\\N": 'the set <break time="150ms"/><say-as interpret-as="character">n</say-as>', "\\C": 'the set <break time="150ms"/><say-as interpret-as="character">c</say-as>', "\\Z": 'the set <break time="150ms"/><say-as interpret-as="character">z</say-as>', "\\Q": 'the set <break time="150ms"/><say-as interpret-as="character">q</say-as>', "\\infty": "infinity ", "\\nabla": "nabla ", "\\partial": "partial derivative of ", "\\cdot": "times ", "\\cdots": "dot dot dot ", "\\Rightarrow": "implies ", "\\lparen": '<break time="150ms"/>open paren<break time="150ms"/>', "\\rparen": '<break time="150ms"/>close paren<break time="150ms"/>', "\\lbrace": '<break time="150ms"/>open brace<break time="150ms"/>', "\\{": '<break time="150ms"/>open brace<break time="150ms"/>', "\\rbrace": '<break time="150ms"/>close brace<break time="150ms"/>', "\\}": '<break time="150ms"/>close brace<break time="150ms"/>', "\\langle": '<break time="150ms"/>left angle bracket<break time="150ms"/>', "\\rangle": '<break time="150ms"/>right angle bracket<break time="150ms"/>', "\\lfloor": '<break time="150ms"/>open floor<break time="150ms"/>', "\\rfloor": '<break time="150ms"/>close floor<break time="150ms"/>', "\\lceil": '<break time="150ms"/>open ceiling<break time="150ms"/>', "\\rceil": '<break time="150ms"/>close ceiling<break time="150ms"/>', "\\vert": '<break time="150ms"/>vertical bar<break time="150ms"/>', "\\mvert": '<break time="150ms"/>divides<break time="150ms"/>', "\\lvert": '<break time="150ms"/>left vertical bar<break time="150ms"/>', "\\rvert": '<break time="150ms"/>right vertical bar<break time="150ms"/>', "\\lbrack": '<break time="150ms"/> open square bracket <break time="150ms"/>', "\\rbrack": '<break time="150ms"/> close square bracket <break time="150ms"/>', mm: "millimeters", cm: "centimeters", km: "kilometers", kg: "kilograms" };
        function Cr(e3) {
          let t3 = 0;
          if (M(e3)) for (let a2 of e3) "first" !== a2.type && (t3 += 1);
          return 1 === t3;
        }
        function Ar(e3) {
          let t3 = "";
          if (M(e3)) for (let a2 of e3) "first" !== a2.type && "string" == typeof a2.value && (t3 += a2.value);
          return t3;
        }
        function Dr(e3, t3, a2) {
          var r2, i2, o2, n2;
          function s2(e4) {
            return "<emphasis>" + e4 + "</emphasis>";
          }
          if (!t3) return "";
          let l2 = "";
          if (M(t3)) {
            let i3 = false, o3 = false;
            for (let n3 = 0; n3 < t3.length; n3++) "text" !== t3[n3].mode && (o3 = false), n3 < t3.length - 2 && "mopen" === t3[n3].type && "mclose" === t3[n3 + 2].type && "mord" === t3[n3 + 1].type ? (l2 += " of ", l2 += s2(Dr(e3, t3[n3 + 1], a2)), n3 += 2) : "text" === t3[n3].mode ? o3 ? l2 += null != (r2 = t3[n3].value) ? r2 : " " : (o3 = true, l2 += Dr("text", t3[n3], a2)) : t3[n3].isDigit() ? i3 ? l2 += t3[n3].asDigit() : (i3 = true, l2 += Dr(e3, t3[n3], a2)) : (i3 = false, l2 += Dr(e3, t3[n3], a2));
          } else if ("text" === t3.mode) t3.id && "math" === e3 && (l2 += '<mark name="' + t3.id.toString() + '"/>'), l2 += t3.value;
          else {
            t3.id && "math" === e3 && (l2 += '<mark name="' + t3.id.toString() + '"/>');
            let r3 = "", d2 = "", c2 = "", u2 = false;
            switch (t3.type) {
              case "group":
              case "root":
                l2 += Dr("math", t3.body, a2);
                break;
              case "genfrac":
                if (r3 = Dr("math", t3.above, a2), d2 = Dr("math", t3.below, a2), Cr(t3.above) && Cr(t3.below)) {
                  let e4 = { "1/2": " half ", "1/3": " one third ", "2/3": " two third", "1/4": " one quarter ", "3/4": " three quarter ", "1/5": " one fifth ", "2/5": " two fifths ", "3/5": " three fifths ", "4/5": " four fifths ", "1/6": " one sixth ", "5/6": " five sixths ", "1/8": " one eight ", "3/8": " three eights ", "5/8": " five eights ", "7/8": " seven eights ", "1/9": " one ninth ", "2/9": " two ninths ", "4/9": " four ninths ", "5/9": " five ninths ", "7/9": " seven ninths ", "8/9": " eight ninths " }[Ar(t3.above) + "/" + Ar(t3.below)];
                  e4 ? l2 = e4 : l2 += r3 + " over " + d2;
                } else l2 += ' the fraction <break time="150ms"/>' + r3 + ', over <break time="150ms"/>' + d2 + '.<break time="150ms"/> End fraction.<break time="150ms"/>';
                break;
              case "surd":
                if (c2 = Dr("math", t3.body, a2), t3.hasEmptyBranch("above")) l2 += Cr(t3.body) ? " the square root of " + c2 + " , " : ' the square root of <break time="200ms"/>' + c2 + '. <break time="200ms"/> End square root';
                else {
                  let e4 = Dr("math", t3.above, a2);
                  e4 = e4.trim();
                  let r4 = e4.replace(/<mark([^/]*)\/>/g, "");
                  l2 += "3" === r4 ? ' the cube root of <break time="200ms"/>' + c2 + '. <break time="200ms"/> End cube root' : "n" === r4 ? ' the nth root of <break time="200ms"/>' + c2 + '. <break time="200ms"/> End root' : ' the root with index: <break time="200ms"/>' + e4 + ', of <break time="200ms"/>' + c2 + '. <break time="200ms"/> End root';
                }
                break;
              case "leftright":
                {
                  let e4 = t3;
                  l2 += null != (i2 = e4.leftDelim ? Lr[e4.leftDelim] : void 0) ? i2 : e4.leftDelim, l2 += Dr("math", t3.body, a2), l2 += null != (o2 = e4.rightDelim ? Lr[e4.rightDelim] : void 0) ? o2 : e4.rightDelim;
                }
                break;
              case "rule":
              case "overunder":
              case "overlap":
              case "space":
              case "spacing":
              case "macro":
                break;
              case "placeholder":
                l2 += "placeholder ";
                break;
              case "delim":
              case "sizeddelim":
              case "mord":
              case "minner":
              case "mbin":
              case "mrel":
              case "mpunct":
              case "mopen":
              case "mclose": {
                let { command: r4 } = t3;
                if ("\\mathbin" === r4 || "\\mathrel" === r4 || "\\mathopen" === r4 || "\\mathclose" === r4 || "\\mathpunct" === r4 || "\\mathord" === r4 || "\\mathinner" === r4) {
                  l2 = Dr(e3, t3.body, a2);
                  break;
                }
                let i3 = t3.isDigit() ? t3.asDigit() : t3.value, o3 = t3.command;
                if (("delim" === t3.type || "sizeddelim" === t3.type) && (o3 = t3.value, i3 = o3), "text" === e3) l2 += i3;
                else {
                  if ("mbin" === t3.type && (l2 += '<break time="150ms"/>'), i3) {
                    let e4 = Lr[i3] || (o3 ? Lr[o3.trim()] : "");
                    if (e4) l2 += " " + e4;
                    else {
                      let e5 = o3 ? function(e6) {
                        let t4 = "";
                        return e6.startsWith("\\") && (t4 = " " + e6.replace("\\", "") + " "), t4;
                      }(o3.trim()) : "";
                      l2 += e5 || function(e6) {
                        return a2.textToSpeechMarkup ? /[a-z]/.test(e6) ? ` <say-as interpret-as="character">${e6}</say-as>` : /[A-Z]/.test(e6) ? `capital <say-as interpret-as="character">${e6.toLowerCase()}</say-as>` : e6 : /[a-z]/.test(e6) ? " '" + e6.toUpperCase() + "'" : /[A-Z]/.test(e6) ? " 'capital " + e6.toUpperCase() + "'" : e6;
                      }(i3);
                    }
                  } else l2 += Dr("math", t3.body, a2);
                  "mbin" === t3.type && (l2 += '<break time="150ms"/>');
                }
                break;
              }
              case "mop":
                if ("​" !== t3.value) {
                  let e4 = t3.command;
                  if ("\\sum" === e4) if (t3.hasEmptyBranch("superscript") || t3.hasEmptyBranch("subscript")) if (t3.hasEmptyBranch("subscript")) l2 += " the summation of";
                  else {
                    let e5 = Dr("math", t3.subscript, a2);
                    e5 = e5.trim(), l2 += ' the summation from <break time="200ms"/>' + e5 + '<break time="200ms"/> of <break time="150ms"/>', u2 = true;
                  }
                  else {
                    let e5 = Dr("math", t3.superscript, a2);
                    e5 = e5.trim();
                    let r4 = Dr("math", t3.subscript, a2);
                    r4 = r4.trim(), l2 += ' the summation from <break time="200ms"/>' + r4 + '<break time="200ms"/> to  <break time="200ms"/>' + e5 + '<break time="200ms"/> of <break time="150ms"/>', u2 = true;
                  }
                  else if ("\\prod" === e4) if (t3.hasEmptyBranch("superscript") || t3.hasEmptyBranch("subscript")) if (t3.hasEmptyBranch("subscript")) l2 += " the product  of ";
                  else {
                    let e5 = Dr("math", t3.subscript, a2);
                    e5 = e5.trim(), l2 += ' the product from <break time="200ms"/>' + e5 + '<break time="200ms"/> of <break time="150ms"/>', u2 = true;
                  }
                  else {
                    let e5 = Dr("math", t3.superscript, a2);
                    e5 = e5.trim();
                    let r4 = Dr("math", t3.subscript, a2);
                    r4 = r4.trim(), l2 += ' the product from <break time="200ms"/>' + r4 + '<break time="200ms"/> to <break time="200ms"/>' + e5 + '<break time="200ms"/> of <break time="150ms"/>', u2 = true;
                  }
                  else if ("\\int" === e4) if (t3.hasEmptyBranch("superscript") || t3.hasEmptyBranch("subscript")) l2 += ' the integral of <break time="200ms"/> ';
                  else {
                    let e5 = Dr("math", t3.superscript, a2);
                    e5 = e5.trim();
                    let r4 = Dr("math", t3.subscript, a2);
                    r4 = r4.trim(), l2 += ' the integral from <break time="200ms"/>' + s2(r4) + '<break time="200ms"/> to <break time="200ms"/>' + s2(e5) + ' <break time="200ms"/> of ', u2 = true;
                  }
                  else "string" == typeof t3.value ? l2 += (null != (n2 = Lr[t3.value]) ? n2 : t3.command ? Lr[t3.command] : void 0) || " " + t3.value : t3.command && ("\\mathop" === t3.command ? l2 += Dr("math", t3.body, a2) : "\\operatorname" === t3.command ? l2 += function(e5, t4) {
                    return e5 ? e5.map((e6) => e6.value).join("") : "";
                  }(t3.body) : l2 += t3.command.startsWith("\\") ? " " + t3.command.slice(1) : " " + t3.command);
                }
                break;
              case "enclose":
                c2 = Dr("math", t3.body, a2), l2 += " crossed out " + c2 + ". End crossed out.";
            }
            if (!u2 && !t3.hasEmptyBranch("superscript")) {
              let r4 = Dr(e3, t3.superscript, a2);
              r4 = r4.trim();
              let i3 = r4.replace(/<[^>]*>/g, "");
              if (Cr(t3.superscript)) {
                if ("math" === e3) {
                  let e4 = function(e5) {
                    if (M(e5)) {
                      for (let t4 of e5) if ("first" !== t4.type && t4.id) return t4.id.toString();
                    }
                    return "";
                  }(t3.superscript);
                  e4 && (l2 += '<mark name="' + e4 + '"/>');
                }
                "′" === i3 ? l2 += " prime " : "2" === i3 ? l2 += " squared " : "3" === i3 ? l2 += " cubed " : Number.isNaN(Number.parseInt(i3)) ? l2 += " to the " + r4 + "; " : l2 += ' to the <say-as interpret-as="ordinal">' + i3 + "</say-as> power; ";
              } else Number.isNaN(Number.parseInt(i3)) ? l2 += " raised to the " + r4 + "; " : l2 += ' raised to the <say-as interpret-as="ordinal">' + i3 + "</say-as> power; ";
            }
            if (!u2 && !t3.hasEmptyBranch("subscript")) {
              let e4 = Dr("math", t3.subscript, a2);
              e4 = e4.trim(), l2 += Cr(t3.subscript) ? " sub " + e4 : " subscript " + e4 + ". End subscript. ";
            }
          }
          return l2;
        }
        function Tr(e3, t3) {
          var a2;
          let r2 = S(_({}, t3), { textToSpeechRulesOptions: _({}, t3.textToSpeechRulesOptions) });
          if ("sre" === r2.textToSpeechRules && "sre" in globalThis) {
            let t4 = wr(e3, r2);
            return t4 ? (r2.textToSpeechMarkup && (r2.textToSpeechRulesOptions = null != (a2 = r2.textToSpeechRulesOptions) ? a2 : {}, r2.textToSpeechRulesOptions.markup = r2.textToSpeechMarkup, "ssml" === r2.textToSpeechRulesOptions.markup && (r2.textToSpeechRulesOptions.markup = "ssml_step"), r2.textToSpeechRulesOptions.rate = r2.speechEngineRate), r2.textToSpeechRulesOptions && globalThis.sre.System.getInstance().setupEngine(r2.textToSpeechRulesOptions), globalThis.sre.System.getInstance().toSpeech(t4)) : "";
          }
          let i2 = Dr("math", e3, r2);
          if ("ssml" === r2.textToSpeechMarkup) {
            let e4 = "";
            r2.speechEngineRate && (e4 = '<prosody rate="' + r2.speechEngineRate + '">'), i2 = '<?xml version="1.0"?><speak version="1.1" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US"><amazon:auto-breaths>' + e4 + "<p><s>" + i2 + "</s></p>" + (e4 ? "</prosody>" : "") + "</amazon:auto-breaths></speak>";
          } else i2 = "mac" === r2.textToSpeechMarkup && "macos" === T() ? i2.replace(/<mark([^/]*)\/>/g, "").replace(/<emphasis>/g, "[[emph+]]").replace(/<\/emphasis>/g, "").replace(/<break time="(\d*)ms"\/>/g, "[[slc $1]]").replace(/<say-as[^>]*>/g, "").replace(/<\/say-as>/g, "") : i2.replace(/<[^>]*>/g, "").replace(/\s{2,}/g, " ");
          return i2;
        }
        function zr(e3, t3, a2, r2) {
          let i2 = t3.split(" ");
          for (let t4 of i2) {
            let i3 = t4.match(/(.*):(.*)/);
            if (i3) {
              let t5 = null != r2 ? r2 : {};
              "active" === i3[2] ? t5.passive = false : t5[i3[2]] = true, e3.addEventListener(i3[1], a2, t5);
            } else e3.addEventListener(t4, a2, r2);
          }
        }
        function Br(e3, t3, a2, r2) {
          let i2 = t3.split(" ");
          for (let t4 of i2) {
            let i3 = t4.match(/(.*):(.*)/);
            if (i3) {
              let t5 = null != r2 ? r2 : {};
              "active" === i3[2] ? t5.passive = false : t5[i3[2]] = true, e3.removeEventListener(i3[1], a2, t5);
            } else e3.removeEventListener(t4, a2, r2);
          }
        }
        function Kr(e3) {
          var t3;
          C();
          let a2 = document.getElementById(e3);
          return a2 ? a2.dataset.refcount = Number(Number.parseInt(null != (t3 = a2.getAttribute("data-refcount")) ? t3 : "0") + 1).toString() : (a2 = document.createElement("div"), a2.setAttribute("aria-hidden", "true"), a2.dataset.refcount = "1", a2.id = e3, document.body.append(a2)), a2;
        }
        function Er(e3) {
          var t3;
          if (!e3) return;
          let a2 = Number.parseInt(null != (t3 = e3.getAttribute("data-refcount")) ? t3 : "0");
          a2 <= 1 ? e3.remove() : e3.dataset.refcount = Number(a2 - 1).toString();
        }
        function $r(e3) {
          var t3;
          return (null == (t3 = e3.element) ? void 0 : t3.mathfield) === e3;
        }
        function qr(e3) {
          let t3 = function(e4) {
            var t4, a3;
            return null != (a3 = null != (t4 = e4.querySelector(".ML__caret")) ? t4 : e4.querySelector(".ML__text-caret")) ? a3 : e4.querySelector(".ML__latex-caret");
          }(e3);
          if (!t3) return null;
          let a2 = t3.getBoundingClientRect();
          return { x: a2.right, y: a2.bottom, height: a2.height };
        }
        function Or(e3) {
          var t3;
          if (!e3.parent) return "root";
          let a2 = null != (t3 = e3.parent.id) ? t3 : "";
          return a2 += "string" == typeof e3.treeBranch ? "-" + e3.treeBranch : `-${e3.treeBranch[0]}/${e3.treeBranch[0]}`, a2;
        }
        function Pr(e3, t3) {
          if (!t3) return null;
          let a2 = e3.field.getBoundingClientRect(), r2 = t3.right - t3.left, i2 = t3.bottom - t3.top, o2 = Math.ceil(t3.left - a2.left + e3.field.scrollLeft), n2 = Math.ceil(t3.top - a2.top);
          return { left: o2, right: o2 + r2, top: n2, bottom: n2 + i2 };
        }
        function Nr(e3) {
          let t3 = e3.getBoundingClientRect(), a2 = parseInt(getComputedStyle(e3).marginRight), r2 = { top: t3.top - 1, bottom: t3.bottom, left: t3.left, right: t3.right - 1 + a2 };
          if (0 === e3.children.length || "SVG" === e3.tagName.toUpperCase()) return r2;
          for (let t4 of e3.children) if (1 === t4.nodeType && "atomId" in t4.dataset && !t4.classList.contains("pstrut")) {
            let e4 = Nr(t4);
            r2.left = Math.min(r2.left, e4.left), r2.right = Math.max(r2.right, e4.right), r2.top = Math.min(r2.top, e4.top), r2.bottom = Math.max(r2.bottom, e4.bottom);
          }
          return r2;
        }
        function Fr(e3, t3) {
          var a2, r2;
          if (!t3.id) return null;
          let i2 = null != (r2 = null == (a2 = e3.atomBoundsCache) ? void 0 : a2.get(t3.id)) ? r2 : null;
          if (null !== i2) return i2;
          let o2 = e3.field.querySelector(`[data-atom-id="${t3.id}"]`);
          return i2 = o2 ? Nr(o2) : null, e3.atomBoundsCache && (i2 ? e3.atomBoundsCache.set(t3.id, i2) : e3.atomBoundsCache.delete(t3.id)), null != i2 ? i2 : null;
        }
        function Rr(e3, t3) {
          return e3.model.selection.ranges.reduce((a2, r2) => a2.concat(...function(e4, t4, a3) {
            let r3 = /* @__PURE__ */ new Map();
            for (let i2 of e4.model.getAtoms(t4, { includeChildren: true })) {
              if (null != a3 && a3.excludeAtomsWithBackground && i2.style.backgroundColor) break;
              let t5 = Pr(e4, Fr(e4, i2));
              if (t5) {
                let e5 = Or(i2);
                if (r3.has(e5)) {
                  let a4 = r3.get(e5);
                  r3.set(e5, { left: Math.min(a4.left, t5.left), right: Math.max(a4.right, t5.right), top: Math.min(a4.top, t5.top), bottom: Math.max(a4.bottom, t5.bottom) });
                } else r3.set(e5, t5);
              }
            }
            return [...r3.values()];
          }(e3, r2, t3)), []);
        }
        function Ir(e3) {
          let t3 = 0, a2 = 0, r2 = e3.offsetWidth, i2 = e3.offsetHeight;
          for (; e3 instanceof HTMLElement; ) t3 += e3.offsetTop, a2 += e3.offsetLeft, e3 = e3.offsetParent;
          return new DOMRect(a2, t3, r2, i2);
        }
        var jr = { main: ["Main-Regular", "ML__cmr"], "main-italic": ["Main-Italic", "ML__cmr ML__it"], "main-bold": ["Main-Bold", "ML__cmr ML__bold"], "main-bolditalic": ["Main-BoldItalic", "ML__cmr ML__bold ML__it"], normal: ["Main-Regular", "ML__cmr"], "normal-bold": ["Main-Bold", "ML__mathbf"], "normal-italic": ["Math-Italic", "ML__mathit"], "normal-bolditalic": ["Math-BoldItalic", "ML__mathbfit"], ams: ["AMS-Regular", "ML__ams"], "ams-bold": ["AMS-Regular", "ML__ams"], "ams-italic": ["AMS-Regular", "ML__ams"], "ams-bolditalic": ["AMS-Regular", "ML__ams"], "sans-serif": ["SansSerif-Regular", "ML__sans"], "sans-serif-bold": ["SansSerif-Regular", "ML__sans ML__bold"], "sans-serif-italic": ["SansSerif-Regular", "ML__sans"], "sans-serif-bolditalic": ["SansSerif-Regular", "ML__sans"], calligraphic: ["Caligraphic-Regular", "ML__cal"], "calligraphic-bold": ["Caligraphic-Regular", "ML__cal ML__bold"], "calligraphic-italic": ["Caligraphic-Regular", "ML__cal ML__it"], "calligraphic-bolditalic": ["Caligraphic-Regular", "ML__cal ML__bold ML__it"], script: ["Script-Regular", "ML__script"], "script-bold": ["Script-Regular", "ML__script ML__bold"], "script-italic": ["Script-Regular", "ML__script ML__it"], "script-bolditalic": ["Script-Regular", "ML__script ML__bold ML__it"], fraktur: ["Fraktur-Regular", "ML__frak"], "fraktur-bold": ["Fraktur-Regular", "ML__frak"], "fraktur-italic": ["Fraktur-Regular", "ML__frak"], "fraktur-bolditalic": ["Fraktur-Regular", "ML__frak"], monospace: ["Typewriter-Regular", "ML__tt"], "monospace-bold": ["Typewriter-Regular", "ML__tt ML__bold"], "monospace-italic": ["Typewriter-Regular", "ML__tt ML__it"], "monospace-bolditalic": ["Typewriter-Regular", "ML__tt ML__bold ML__it"], "double-struck": ["AMS-Regular", "ML__bb"], "double-struck-bold": ["AMS-Regular", "ML__bb"], "double-struck-italic": ["AMS-Regular", "ML__bb"], "double-struck-bolditalic": ["AMS-Regular", "ML__bb"] }, Vr = { "double-struck": /^[A-Z ]$/, script: /^[A-Z ]$/, calligraphic: /^[\dA-Z ]$/, fraktur: /^[\dA-Za-z ]$|^[!"#$%&'()*+,\-./:;=?[]^’‘]$/, monospace: /^[\dA-Za-z ]$|^[!"&'()*+,\-./:;=?@[\]^_~\u0131\u0237\u0393\u0394\u0398\u039B\u039E\u03A0\u03A3\u03A5\u03A8\u03A9]$/, "sans-serif": /^[\dA-Za-z ]$|^[!"&'()*+,\-./:;=?@[\]^_~\u0131\u0237\u0393\u0394\u0398\u039B\u039E\u03A0\u03A3\u03A5\u03A8\u03A9]$/ }, Hr = /^[\u03B1-\u03C9]|\u03D1|\u03D5|\u03D6|\u03F1|\u03F5]$/, Wr = [/^[a-z]$/, /^[A-Z]$/, Hr, /^[\u0393|\u0394\u0398\u039B\u039E\u03A0\u03A3\u03A5\u03A6\u03A8\u03A9]$/], Xr = { iso: ["it", "it", "it", "it"], tex: ["it", "it", "it", "up"], french: ["it", "up", "up", "up"], upright: ["up", "up", "up", "up"] };
        function Ur(e3) {
          if (!e3) return "";
          let { style: t3 } = e3;
          if (void 0 === t3.variant) return "";
          let a2 = t3.variant;
          return t3.variantStyle && "up" !== t3.variantStyle && (a2 += "-" + t3.variantStyle), a2;
        }
        function Jr(e3) {
          return [Ct(e3.map((e4) => e4[0])), e3.map((e4) => e4[1]).some((e4) => true === e4)];
        }
        function Gr(e3, t3) {
          return Jr(it(e3, "fontSize").map((e4) => {
            var a2, r2;
            let [i2, o2] = function(e5, t4) {
              return Jr(it(e5, "fontSeries").map((e6) => {
                let [a3, r3] = function(e7, t5) {
                  return Jr(it(e7, "fontShape").map((e8) => {
                    let [a4, r4] = function(e9, t6) {
                      return [Ct(e9.map((e10) => Et.serialize(e10, t6))), true];
                    }(e8, t5), { fontShape: i4 } = e8[0].style;
                    return "it" === i4 ? ["\\textit{" + a4 + "}", false] : "sl" === i4 ? ["\\textsl{" + a4 + "}", false] : "sc" === i4 ? ["\\textsc{" + a4 + "}", false] : "n" === i4 ? ["\\textup{" + a4 + "}", false] : i4 ? [`{\\fontshape{${e8[0].style.fontShape}}${a4}`, false] : [a4, r4];
                  }));
                }(e6, t4), { fontSeries: i3 } = e6[0].style;
                return "b" === i3 ? [`\\textbf{${a3}}`, false] : "l" === i3 ? [`\\textlf{${a3}}`, false] : "m" === i3 ? [`\\textmd{${a3}}`, false] : i3 ? [`\\fontseries{${i3}}${a3}`, false] : [a3, r3];
              }));
            }(e4, t3), n2 = null != (r2 = ["", "tiny", "scriptsize", "footnotesize", "small", "normalsize", "large", "Large", "LARGE", "huge", "Huge"][null != (a2 = e4[0].style.fontSize) ? a2 : ""]) ? r2 : "";
            return n2 ? [`{\\${n2} ${i2}}`, o2] : [i2, o2];
          }));
        }
        function Zr(e3, t3) {
          return Jr(it(e3, "backgroundColor").map((e4) => {
            var a2, r2;
            let [i2, o2] = function(e5, t4) {
              var a3;
              if (!e5 || 0 === e5.length) return ["", false];
              let r3 = null == (a3 = e5[0].parent) ? void 0 : a3.style.color;
              return Jr(it(e5, "color").map((e6) => {
                var a4, i3;
                let [o3, n3] = function(e7, t5) {
                  return function(e8, t6) {
                    return Jr(it(e8, "fontFamily").map((e9) => {
                      var a5, r4;
                      let [i4, o4] = Gr(e9, t6), n4 = null != (r4 = { roman: "textrm", monospace: "texttt", "sans-serif": "textsf" }[null != (a5 = e9[0].style.fontFamily) ? a5 : ""]) ? r4 : "";
                      return n4 ? [`\\${n4}{${i4}}`, false] : e9[0].style.fontFamily ? [`\\fontfamily{${e9[0].style.fontFamily}}${i4}`, o4] : [i4, o4];
                    }));
                  }(e7, t5);
                }(e6, t4);
                return null != (a4 = t4.skipStyles) && a4 || !e6[0].style.color || "none" === e6[0].style.color || r3 === e6[0].style.color ? [o3, n3] : [`\\textcolor{${null != (i3 = e6[0].style.verbatimColor) ? i3 : e6[0].style.color}}{${o3}}`, false];
              }));
            }(e4, t3), n2 = e4[0].computedStyle;
            return null != (a2 = t3.skipStyles) && a2 || !n2.backgroundColor || "none" === n2.backgroundColor ? [i2, o2] : [`\\colorbox{${null != (r2 = n2.verbatimBackgroundColor) ? r2 : n2.backgroundColor}}{${i2}}`, false];
          }));
        }
        new class extends rt {
          constructor() {
            super("math");
          }
          createAtom(e3, t3, a2) {
            var r2, i2, o2, n2, s2;
            let l2 = t3.getDefinition(e3, "math");
            if (null === l2) return new Et("mord", t3, { mode: "math", command: e3, value: e3, style: a2 });
            if ("symbol" === l2.definitionType) {
              let n3 = new Et(null != (r2 = l2.type) ? r2 : "mord", t3, { mode: "math", command: null != (i2 = l2.command) ? i2 : e3, value: String.fromCodePoint(l2.codepoint), style: a2 });
              return null != (o2 = l2.isFunction) && o2 && (n3.isFunction = true), e3.startsWith("\\") && (n3.verbatimLatex = e3), n3;
            }
            let d2 = new Et("mord", t3, { mode: "math", command: null != (n2 = l2.command) ? n2 : e3, value: e3, style: a2 });
            return null != (s2 = l2.isFunction) && s2 && (d2.isFunction = true), e3.startsWith("\\") && (d2.verbatimLatex = e3), d2;
          }
          serialize(e3, t3) {
            let { parent: a2 } = e3[0], r2 = null == a2 ? void 0 : a2.computedStyle.fontSize;
            return Ct(it(e3, "fontSize").map((e4) => {
              let i2 = function(e5, t4) {
                let { parent: a3 } = e5[0], r3 = null == a3 ? void 0 : a3.computedStyle.backgroundColor;
                return Ct(it(e5, "backgroundColor").map((e6) => {
                  var i3, o3;
                  let n2 = function(e7, t5) {
                    let { parent: a4 } = e7[0], r4 = null == a4 ? void 0 : a4.computedStyle.color;
                    return Ct(it(e7, "color").map((e8) => {
                      var i4, o4;
                      let n3 = function(e9, t6) {
                        var a5;
                        let { parent: r5 } = e9[0], i5 = Ur(r5), o5 = null != (a5 = null == r5 ? void 0 : r5.mode) ? a5 : "math";
                        return Ct(it(e9, "variant").map((e10) => {
                          let a6 = Ur(e10[0]);
                          if (e10.every((e11) => {
                            let t7 = e11.context.getDefinition(e11.command, o5);
                            return !(!t7 || "function" === t7.definitionType || !t7.variant) && Ur(e11) === a6;
                          })) return Ct(e10.map((e11) => Et.serialize(e11, t6)));
                          let r6 = "";
                          return a6 && a6 !== i5 && (r6 = { calligraphic: "\\mathcal{", fraktur: "\\mathfrak{", "double-struck": "\\mathbb{", script: "\\mathscr{", monospace: "\\mathtt{", "sans-serif": "\\mathsf{", normal: "\\mathrm{", "normal-italic": "\\mathnormal{", "normal-bold": "\\mathbf{", "normal-bolditalic": "\\mathbfit{", ams: "", "ams-italic": "\\mathit{", "ams-bold": "\\mathbf{", "ams-bolditalic": "\\mathbfit{", main: "", "main-italic": "\\mathit{", "main-bold": "\\mathbf{", "main-bolditalic": "\\mathbfit{" }[a6]), r6 ? r6 + Ct(e10.map((e11) => Et.serialize(e11, t6))) + "}" : Ct(e10.map((e11) => Et.serialize(e11, t6)));
                        }));
                      }(e8, t5), s3 = e8[0].computedStyle;
                      return null != (i4 = t5.skipStyles) && i4 || !s3.color || a4 && r4 === s3.color ? n3 : "\\textcolor{" + (null != (o4 = s3.verbatimColor) ? o4 : s3.color) + "}{" + n3 + "}";
                    }));
                  }(e6, t4), s2 = e6[0].computedStyle;
                  return !(null != (i3 = t4.skipStyles) && i3) && n2.trim() && s2.backgroundColor && (!a3 || r3 !== s2.backgroundColor) && (e6.length > 0 || !(e6[0] instanceof ma)) && (n2 = `\\ensuremath{${n2}}`, n2 = `\\colorbox{${null != (o3 = s2.verbatimBackgroundColor) ? o3 : s2.backgroundColor}}{${n2}}`), n2;
                }));
              }(e4, t3), o2 = e4[0].computedStyle.fontSize;
              return !o2 || a2 && r2 === o2 ? i2 : "\\" + ["", "tiny", "scriptsize", "footnotesize", "small", "normalsize", "large", "Large", "LARGE", "huge", "Huge"][o2] + " " + i2;
            }));
          }
          applyStyle(e3, t3) {
            if (void 0 === t3.variant) return "";
            let a2 = "auto" !== t3.letterShapeStyle && t3.letterShapeStyle ? t3.letterShapeStyle : "tex", { variant: r2 } = t3, { variantStyle: i2 } = t3;
            "normal" === r2 && !i2 && /[\u00A3\u0131\u0237]/.test(e3.value) && (r2 = "main", i2 = "italic"), "normal" === r2 && !i2 && 1 === e3.value.length && Wr.forEach((t4, r3) => {
              t4.test(e3.value) && "it" === Xr[a2][r3] && (i2 = "italic");
            }), "up" === i2 && (i2 = void 0);
            let o2 = i2 ? r2 + "-" + i2 : r2, [n2, s2] = jr[o2];
            return Vr[r2] && !Vr[r2].test(e3.value) ? (e3.value = function(e4, t4, a3) {
              if (!/[A-Za-z\d]/.test(e4) || !t4 && !a3) return e4;
              let r3 = e4.codePointAt(0);
              if (void 0 === r3) return e4;
              for (let e5 of ne) if ((!t4 || e5.variant === t4) && (!a3 || e5.style === a3) && r3 >= e5.offset && r3 < e5.offset + e5.len) {
                let t5 = e5.start + r3 - e5.offset;
                return String.fromCodePoint(oe[t5] || t5);
              }
              return e4;
            }(e3.value, r2, i2), null) : (Hr.test(e3.value) && (e3.classes += " lcGreek"), s2 && (e3.classes += " " + s2), n2);
          }
        }();
        var Yr = { roman: "", "sans-serif": "ML__sans", monospace: "ML__tt" };
        function Qr(e3) {
          let t3 = 0;
          for (let a2 = 0; a2 < e3.length; a2++) t3 = Math.imul(31, t3) + e3.charCodeAt(a2) | 0;
          return Math.abs(t3);
        }
        function ei(e3, t3, a2) {
          var r2, i2;
          if (C(), !t3) return null;
          let o2 = null != (r2 = null == e3 ? void 0 : e3.getRootNode()) ? r2 : null == document ? void 0 : document.head;
          if (!o2) return null;
          o2 === document && (o2 = document.head);
          let n2 = o2.querySelector(`style[data-id="${a2}"]`);
          if (n2) {
            let e4 = Number.parseFloat(null != (i2 = n2.getAttribute("data-refcount")) ? i2 : "0");
            n2.dataset.refcount = Number(e4 + 1).toString();
          } else {
            let e4 = document.createElement("style");
            e4.dataset.id = a2, e4.dataset.refcount = "1", e4.append(document.createTextNode(t3)), o2.appendChild(e4);
          }
          return { release: () => {
            var e4;
            let t4 = o2.querySelector(`style[data-id="${a2}"]`);
            if (t4) {
              let a3 = Number.parseFloat(null != (e4 = t4.getAttribute("data-refcount")) ? e4 : "0");
              1 === a3 ? t4.remove() : t4.dataset.refcount = Number(a3 - 1).toString();
            }
          } };
        }
        function ti(e3) {
          let t3 = e3.split("+"), a2 = { shift: false, alt: false, cmd: false, win: false, meta: false, ctrl: false, key: t3.pop() };
          return t3.includes("shift") && (a2.shift = true), t3.includes("alt") && (a2.alt = true), t3.includes("ctrl") && (a2.ctrl = true), t3.includes("cmd") && (a2.cmd = true), t3.includes("win") && (a2.win = true), t3.includes("meta") && (a2.meta = true), a2;
        }
        function ai(e3) {
          let t3 = "";
          return e3.shift && (t3 += "shift+"), e3.alt && (t3 += "alt+"), e3.ctrl && (t3 += "ctrl+"), e3.cmd && (t3 += "cmd+"), e3.win && (t3 += "win+"), e3.meta && (t3 += "meta+"), t3 + e3.key;
        }
        new class extends rt {
          constructor() {
            super("text");
          }
          createAtom(e3, t3, a2) {
            let r2 = t3.getDefinition(e3, "text");
            return r2 && "symbol" === r2.definitionType ? new la(e3, String.fromCodePoint(r2.codepoint), null != a2 ? a2 : {}, t3) : null;
          }
          serialize(e3, t3) {
            var a2;
            let [r2, i2] = Zr(e3, t3);
            return true === (null != (a2 = t3.skipModeCommand) && a2) && (i2 = false), i2 && (r2 = `\\text{${r2}}`), r2;
          }
          applyStyle(e3, t3) {
            var a2, r2, i2, o2, n2;
            let { fontFamily: s2 } = t3;
            if (Yr[s2] ? e3.classes += " " + Yr[s2] : s2 && e3.setStyle("font-family", s2), t3.fontShape && (e3.classes += " ", e3.classes += null != (a2 = { it: "ML__it", sl: "ML__shape_sl", sc: "ML__shape_sc", ol: "ML__shape_ol" }[t3.fontShape]) ? a2 : ""), t3.fontSeries) {
              let a3 = t3.fontSeries.match(/(.?[lbm])?(.?[cx])?/);
              a3 && (e3.classes += " ", e3.classes += null != (i2 = { ul: "ML__series_ul", el: "ML__series_el", l: "ML__series_l", sl: "ML__series_sl", m: "", sb: "ML__series_sb", b: "ML__bold", eb: "ML__series_eb", ub: "ML__series_ub" }[null != (r2 = a3[1]) ? r2 : ""]) ? i2 : "", e3.classes += " ", e3.classes += null != (n2 = { uc: "ML__series_uc", ec: "ML__series_ec", c: "ML__series_c", sc: "ML__series_sc", n: "", sx: "ML__series_sx", x: "ML__series_x", ex: "ML__series_ex", ux: "ML__series_ux" }[null != (o2 = a3[2]) ? o2 : ""]) ? n2 : "");
            }
            return "Main-Regular";
          }
        }(), new class extends rt {
          constructor() {
            super("latex");
          }
          createAtom(e3, t3, a2) {
            return new Aa(e3, t3);
          }
          serialize(e3, t3) {
            return e3.filter((e4) => e4 instanceof Aa && !e4.isSuggestion).map((e4) => e4.value).join("");
          }
          applyStyle() {
            return null;
          }
        }();
        var ri, ii = "apple" === si() ? { id: "apple.en-intl", displayName: "English (international)", virtualLayout: "qwerty", platform: "apple", locale: "en", score: 0, mapping: { KeyA: ["a", "A", "å", "Å"], KeyB: ["b", "B", "∫", "ı"], KeyC: ["c", "C", "ç", "Ç"], KeyD: ["d", "D", "∂", "Î"], KeyE: ["e", "E", "´", "´"], KeyF: ["f", "F", "ƒ", "Ï"], KeyG: ["g", "G", "©", "˝"], KeyH: ["h", "H", "˙", "Ó"], KeyI: ["i", "I", "ˆ", "ˆ"], KeyJ: ["j", "J", "∆", "Ô"], KeyK: ["k", "K", "˚", ""], KeyL: ["l", "L", "¬", "Ò"], KeyM: ["m", "M", "µ", "Â"], KeyN: ["n", "N", "˜", "˜"], KeyO: ["o", "O", "ø", "Ø"], KeyP: ["p", "P", "π", "∏"], KeyQ: ["q", "Q", "œ", "Œ"], KeyR: ["r", "R", "®", "‰"], KeyS: ["s", "S", "ß", "Í"], KeyT: ["t", "T", "†", "ˇ"], KeyU: ["u", "U", "¨", "¨"], KeyV: ["v", "V", "√", "◊"], KeyW: ["w", "W", "∑", "„"], KeyX: ["x", "X", "≈", "˛"], KeyY: ["y", "Y", "¥", "Á"], KeyZ: ["z", "Z", "Ω", "¸"], Digit1: ["1", "!", "¡", "⁄"], Digit2: ["2", "@", "™", "€"], Digit3: ["3", "#", "£", "‹"], Digit4: ["4", "$", "¢", "›"], Digit5: ["5", "%", "∞", "ﬁ"], Digit6: ["6", "^", "§", "ﬂ"], Digit7: ["7", "&", "¶", "‡"], Digit8: ["8", "*", "•", "°"], Digit9: ["9", "(", "ª", "·"], Digit0: ["0", ")", "º", "‚"], Space: [" ", " ", " ", " "], Minus: ["-", "_", "–", "—"], Equal: ["=", "+", "≠", "±"], BracketLeft: ["[", "{", "“", "”"], BracketRight: ["]", "}", "‘", "’"], Backslash: ["\\", "|", "«", "»"], Semicolon: [";", ":", "…", "Ú"], Quote: ["'", '"', "æ", "Æ"], Backquote: ["`", "˜", "`", "`"], Comma: [",", "<", "≤", "¯"], Period: [".", ">", "≥", "˘"], Slash: ["/", "?", "÷", "¿"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: [".", ".", ".", "."], IntlBackslash: ["§", "±", "§", "±"], NumpadEqual: ["=", "=", "=", "="], AudioVolumeUp: ["", "=", "", "="] } } : "windows" === si() ? { id: "windows.en-intl", displayName: "English (international)", platform: "windows", virtualLayout: "qwerty", locale: "en", score: 0, mapping: { KeyA: ["a", "A", "á", "Á"], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "©", "¢"], KeyD: ["d", "D", "ð", "Ð"], KeyE: ["e", "E", "é", "É"], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "í", "Í"], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "ø", "Ø"], KeyM: ["m", "M", "µ", ""], KeyN: ["n", "N", "ñ", "Ñ"], KeyO: ["o", "O", "ó", "Ó"], KeyP: ["p", "P", "ö", "Ö"], KeyQ: ["q", "Q", "ä", "Ä"], KeyR: ["r", "R", "®", ""], KeyS: ["s", "S", "ß", "§"], KeyT: ["t", "T", "þ", "Þ"], KeyU: ["u", "U", "ú", "Ú"], KeyV: ["v", "V", "", ""], KeyW: ["w", "W", "å", "Å"], KeyX: ["x", "X", "", ""], KeyY: ["y", "Y", "ü", "Ü"], KeyZ: ["z", "Z", "æ", "Æ"], Digit1: ["1", "!", "¡", "¹"], Digit2: ["2", "@", "²", ""], Digit3: ["3", "#", "³", ""], Digit4: ["4", "$", "¤", "£"], Digit5: ["5", "%", "€", ""], Digit6: ["6", "^", "¼", ""], Digit7: ["7", "&", "½", ""], Digit8: ["8", "*", "¾", ""], Digit9: ["9", "(", "‘", ""], Digit0: ["0", ")", "’", ""], Space: [" ", " ", "", ""], Minus: ["-", "_", "¥", ""], Equal: ["=", "+", "×", "÷"], BracketLeft: ["[", "{", "«", ""], BracketRight: ["]", "}", "»", ""], Backslash: ["\\", "|", "¬", "¦"], Semicolon: [";", ":", "¶", "°"], Quote: ["'", '"', "´", "¨"], Backquote: ["`", "~", "", ""], Comma: [",", "<", "ç", "Ç"], Period: [".", ">", "", ""], Slash: ["/", "?", "¿", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["\\", "|", "", ""] } } : { id: "linux.en", displayName: "English", platform: "linux", virtualLayout: "qwerty", locale: "en", score: 0, mapping: { KeyA: ["a", "A", "a", "A"], KeyB: ["b", "B", "b", "B"], KeyC: ["c", "C", "c", "C"], KeyD: ["d", "D", "d", "D"], KeyE: ["e", "E", "e", "E"], KeyF: ["f", "F", "f", "F"], KeyG: ["g", "G", "g", "G"], KeyH: ["h", "H", "h", "H"], KeyI: ["i", "I", "i", "I"], KeyJ: ["j", "J", "j", "J"], KeyK: ["k", "K", "k", "K"], KeyL: ["l", "L", "l", "L"], KeyM: ["m", "M", "m", "M"], KeyN: ["n", "N", "n", "N"], KeyO: ["o", "O", "o", "O"], KeyP: ["p", "P", "p", "P"], KeyQ: ["q", "Q", "q", "Q"], KeyR: ["r", "R", "r", "R"], KeyS: ["s", "S", "s", "S"], KeyT: ["t", "T", "t", "T"], KeyU: ["u", "U", "u", "U"], KeyV: ["v", "V", "v", "V"], KeyW: ["w", "W", "w", "W"], KeyX: ["x", "X", "x", "X"], KeyY: ["y", "Y", "y", "Y"], KeyZ: ["z", "Z", "z", "Z"], Digit1: ["1", "!", "1", "!"], Digit2: ["2", "@", "2", "@"], Digit3: ["3", "#", "3", "#"], Digit4: ["4", "$", "4", "$"], Digit5: ["5", "%", "5", "%"], Digit6: ["6", "^", "6", "^"], Digit7: ["7", "&", "7", "&"], Digit8: ["8", "*", "8", "*"], Digit9: ["9", "(", "9", "("], Digit0: ["0", ")", "0", ")"], Space: [" ", " ", " ", " "], Minus: ["-", "_", "-", "_"], Equal: ["=", "+", "=", "+"], BracketLeft: ["[", "{", "[", "{"], BracketRight: ["]", "}", "]", "}"], Backslash: ["\\", "|", "\\", "|"], Semicolon: [";", ":", ";", ":"], Quote: ["'", '"', "'", '"'], Backquote: ["`", "~", "`", "~"], Comma: [",", "<", ",", "<"], Period: [".", ">", ".", ">"], Slash: ["/", "?", "/", "?"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: ["", ".", "", "."], IntlBackslash: ["<", ">", "|", "¦"], NumpadEqual: ["=", "=", "=", "="], NumpadComma: [".", ".", ".", "."], NumpadParenLeft: ["(", "(", "(", "("], NumpadParenRight: [")", ")", ")", ")"] } }, oi = { enter: "[Enter]", escape: "[Escape]", backspace: "[Backspace]", tab: "[Tab]", space: "[Space]", pausebreak: "[Pause]", insert: "[Insert]", home: "[Home]", pageup: "[PageUp]", delete: "[Delete]", end: "[End]", pagedown: "[PageDown]", right: "[ArrowRight]", left: "[ArrowLeft]", down: "[ArrowDown]", up: "[ArrowUp]", numpad0: "[Numpad0]", numpad1: "[Numpad1]", numpad2: "[Numpad2]", numpad3: "[Numpad3]", numpad4: "[Numpad4]", numpad5: "[Numpad5]", numpad6: "[Numpad6]", numpad7: "[Numpad7]", numpad8: "[Numpad8]", numpad9: "[Numpad9]", numpad_divide: "[NumpadDivide]", numpad_multiply: "[NumpadMultiply]", numpad_subtract: "[NumpadSubtract]", numpad_add: "[NumpadAdd]", numpad_decimal: "[NumpadDecimal]", numpad_separator: "[NumpadComma]", capslock: "[Capslock]", f1: "[F1]", f2: "[F2]", f3: "[F3]", f4: "[F4]", f5: "[F5]", f6: "[F6]", f7: "[F7]", f8: "[F8]", f9: "[F9]", f10: "[F10]", f11: "[F11]", f12: "[F12]", f13: "[F13]", f14: "[F14]", f15: "[F15]", f16: "[F16]", f17: "[F17]", f18: "[F18]", f19: "[F19]" }, ni = [];
        function si() {
          switch (T()) {
            case "macos":
            case "ios":
              return "apple";
            case "windows":
              return "windows";
          }
          return "linux";
        }
        function li(e3) {
          (!e3.platform || e3.platform === si()) && ni.push(e3);
        }
        function di(e3) {
          ri = ni.find((t3) => e3.startsWith(t3.locale));
        }
        function ci() {
          return null != ri ? ri : ni[0];
        }
        li(ii), li({ id: "apple.french", locale: "fr", displayName: "French", platform: "apple", virtualLayout: "azerty", score: 0, mapping: { KeyA: ["q", "Q", "‡", "Ω"], KeyB: ["b", "B", "ß", "∫"], KeyC: ["c", "C", "©", "¢"], KeyD: ["d", "D", "∂", "∆"], KeyE: ["e", "E", "ê", "Ê"], KeyF: ["f", "F", "ƒ", "·"], KeyG: ["g", "G", "ﬁ", "ﬂ"], KeyH: ["h", "H", "Ì", "Î"], KeyI: ["i", "I", "î", "ï"], KeyJ: ["j", "J", "Ï", "Í"], KeyK: ["k", "K", "È", "Ë"], KeyL: ["l", "L", "¬", "|"], KeyM: [",", "?", "∞", "¿"], KeyN: ["n", "N", "~", "ı"], KeyO: ["o", "O", "œ", "Œ"], KeyP: ["p", "P", "π", "∏"], KeyQ: ["a", "A", "æ", "Æ"], KeyR: ["r", "R", "®", "‚"], KeyS: ["s", "S", "Ò", "∑"], KeyT: ["t", "T", "†", "™"], KeyU: ["u", "U", "º", "ª"], KeyV: ["v", "V", "◊", "√"], KeyW: ["z", "Z", "Â", "Å"], KeyX: ["x", "X", "≈", "⁄"], KeyY: ["y", "Y", "Ú", "Ÿ"], KeyZ: ["w", "W", "‹", "›"], Digit1: ["&", "1", "", "´"], Digit2: ["é", "2", "ë", "„"], Digit3: ['"', "3", "“", "”"], Digit4: ["'", "4", "‘", "’"], Digit5: ["(", "5", "{", "["], Digit6: ["§", "6", "¶", "å"], Digit7: ["è", "7", "«", "»"], Digit8: ["!", "8", "¡", "Û"], Digit9: ["ç", "9", "Ç", "Á"], Digit0: ["à", "0", "ø", "Ø"], Space: [" ", " ", " ", " "], Minus: [")", "°", "}", "]"], Equal: ["-", "_", "—", "–"], BracketLeft: ["^", "¨", "ô", "Ô"], BracketRight: ["$", "*", "€", "¥"], Backslash: ["`", "£", "@", "#"], Semicolon: ["m", "M", "µ", "Ó"], Quote: ["ù", "%", "Ù", "‰"], Backquote: ["<", ">", "≤", "≥"], Comma: [";", ".", "…", "•"], Period: [":", "/", "÷", "\\"], Slash: ["=", "+", "≠", "±"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadDecimal: [",", ".", ",", "."], IntlBackslash: ["@", "#", "•", "Ÿ"], NumpadEqual: ["=", "=", "=", "="] } }), li({ id: "apple.spanish", locale: "es", displayName: "Spanish ISO", platform: "apple", virtualLayout: "qwerty", score: 0, mapping: { KeyA: ["a", "A", "å", "Å"], KeyB: ["b", "B", "ß", ""], KeyC: ["c", "C", "©", " "], KeyD: ["d", "D", "∂", "∆"], KeyE: ["e", "E", "€", "€"], KeyF: ["f", "F", "ƒ", "ﬁ"], KeyG: ["g", "G", "", "ﬂ"], KeyH: ["h", "H", "™", " "], KeyI: ["i", "I", " ", " "], KeyJ: ["j", "J", "¶", "¯"], KeyK: ["k", "K", "§", "ˇ"], KeyL: ["l", "L", " ", "˘"], KeyM: ["m", "M", "µ", "˚"], KeyN: ["n", "N", " ", "˙"], KeyO: ["o", "O", "ø", "Ø"], KeyP: ["p", "P", "π", "∏"], KeyQ: ["q", "Q", "œ", "Œ"], KeyR: ["r", "R", "®", " "], KeyS: ["s", "S", "∫", " "], KeyT: ["t", "T", "†", "‡"], KeyU: ["u", "U", " ", " "], KeyV: ["v", "V", "√", "◊"], KeyW: ["w", "W", "æ", "Æ"], KeyX: ["x", "X", "∑", "›"], KeyY: ["y", "Y", "¥", " "], KeyZ: ["z", "Z", "Ω", "‹"], Digit1: ["1", "!", "|", "ı"], Digit2: ["2", '"', "@", "˝"], Digit3: ["3", "·", "#", "•"], Digit4: ["4", "$", "¢", "£"], Digit5: ["5", "%", "∞", "‰"], Digit6: ["6", "&", "¬", " "], Digit7: ["7", "/", "÷", "⁄"], Digit8: ["8", "(", "“", "‘"], Digit9: ["9", ")", "”", "’"], Digit0: ["0", "=", "≠", "≈"], Space: [" ", " ", " ", " "], Minus: ["'", "?", "´", "¸"], Equal: ["¡", "¿", "‚", "˛"], BracketLeft: ["`", "^", "[", "ˆ"], BracketRight: ["+", "*", "]", "±"], Backslash: ["ç", "Ç", "}", "»"], Semicolon: ["ñ", "Ñ", "~", "˜"], Quote: ["´", "¨", "{", "«"], Backquote: ["<", ">", "≤", "≥"], Comma: [",", ";", "„", ""], Period: [".", ":", "…", "…"], Slash: ["-", "_", "–", "—"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: [",", ",", ",", ","], IntlBackslash: ["º", "ª", "\\", "°"] } }), li({ id: "windows.spanish", locale: "es", displayName: "Spanish", platform: "windows", virtualLayout: "qwerty", score: 0, mapping: { KeyA: ["a", "A", "", ""], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "", ""], KeyD: ["d", "D", "", ""], KeyE: ["e", "E", "€", ""], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "", ""], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "", ""], KeyM: ["m", "M", "", ""], KeyN: ["n", "N", "", ""], KeyO: ["o", "O", "", ""], KeyP: ["p", "P", "", ""], KeyQ: ["q", "Q", "", ""], KeyR: ["r", "R", "", ""], KeyS: ["s", "S", "", ""], KeyT: ["t", "T", "", ""], KeyU: ["u", "U", "", ""], KeyV: ["v", "V", "", ""], KeyW: ["w", "W", "", ""], KeyX: ["x", "X", "", ""], KeyY: ["y", "Y", "", ""], KeyZ: ["z", "Z", "", ""], Digit1: ["1", "!", "|", ""], Digit2: ["2", '"', "@", ""], Digit3: ["3", "·", "#", ""], Digit4: ["4", "$", "~", ""], Digit5: ["5", "%", "€", ""], Digit6: ["6", "&", "¬", ""], Digit7: ["7", "/", "", ""], Digit8: ["8", "(", "", ""], Digit9: ["9", ")", "", ""], Digit0: ["0", "=", "", ""], Space: [" ", " ", "", ""], Minus: ["'", "?", "", ""], Equal: ["¡", "¿", "", ""], BracketLeft: ["`", "^", "[", ""], BracketRight: ["+", "*", "]", ""], Backslash: ["ç", "Ç", "}", ""], Semicolon: ["ñ", "Ñ", "", ""], Quote: ["´", "¨", "{", ""], Backquote: ["º", "ª", "\\", ""], Comma: [",", ";", "", ""], Period: [".", ":", "", ""], Slash: ["-", "_", "", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["<", ">", "", ""] } }), li({ id: "linux.spanish", locale: "es", displayName: "Spanish", platform: "linux", virtualLayout: "qwerty", score: 0, mapping: { KeyA: ["a", "A", "æ", "Æ"], KeyB: ["b", "B", "”", "’"], KeyC: ["c", "C", "¢", "©"], KeyD: ["d", "D", "ð", "Ð"], KeyE: ["e", "E", "€", "¢"], KeyF: ["f", "F", "đ", "ª"], KeyG: ["g", "G", "ŋ", "Ŋ"], KeyH: ["h", "H", "ħ", "Ħ"], KeyI: ["i", "I", "→", "ı"], KeyJ: ["j", "J", "̉", "̛"], KeyK: ["k", "K", "ĸ", "&"], KeyL: ["l", "L", "ł", "Ł"], KeyM: ["m", "M", "µ", "º"], KeyN: ["n", "N", "n", "N"], KeyO: ["o", "O", "ø", "Ø"], KeyP: ["p", "P", "þ", "Þ"], KeyQ: ["q", "Q", "@", "Ω"], KeyR: ["r", "R", "¶", "®"], KeyS: ["s", "S", "ß", "§"], KeyT: ["t", "T", "ŧ", "Ŧ"], KeyU: ["u", "U", "↓", "↑"], KeyV: ["v", "V", "“", "‘"], KeyW: ["w", "W", "ł", "Ł"], KeyX: ["x", "X", "»", ">"], KeyY: ["y", "Y", "←", "¥"], KeyZ: ["z", "Z", "«", "<"], Digit1: ["1", "!", "|", "¡"], Digit2: ["2", '"', "@", "⅛"], Digit3: ["3", "·", "#", "£"], Digit4: ["4", "$", "~", "$"], Digit5: ["5", "%", "½", "⅜"], Digit6: ["6", "&", "¬", "⅝"], Digit7: ["7", "/", "{", "⅞"], Digit8: ["8", "(", "[", "™"], Digit9: ["9", ")", "]", "±"], Digit0: ["0", "=", "}", "°"], Enter: ["\r", "\r", "\r", "\r"], Escape: ["\x1B", "\x1B", "\x1B", "\x1B"], Backspace: ["\b", "\b", "\b", "\b"], Tab: ["	", "", "	", ""], Space: [" ", " ", " ", " "], Minus: ["'", "?", "\\", "¿"], Equal: ["¡", "¿", "̃", "~"], BracketLeft: ["̀", "̂", "[", "̊"], BracketRight: ["+", "*", "]", "̄"], Backslash: ["ç", "Ç", "}", "̆"], Semicolon: ["ñ", "Ñ", "~", "̋"], Quote: ["́", "̈", "{", "{"], Backquote: ["º", "ª", "\\", "\\"], Comma: [",", ";", "─", "×"], Period: [".", ":", "·", "÷"], Slash: ["-", "_", "̣", "̇"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadEnter: ["\r", "\r", "\r", "\r"], Numpad1: ["", "1", "", "1"], Numpad2: ["", "2", "", "2"], Numpad3: ["", "3", "", "3"], Numpad4: ["", "4", "", "4"], Numpad5: ["", "5", "", "5"], Numpad6: ["", "6", "", "6"], Numpad7: ["", "7", "", "7"], Numpad8: ["", "8", "", "8"], Numpad9: ["", "9", "", "9"], Numpad0: ["", "0", "", "0"], NumpadDecimal: ["", ".", "", "."], IntlBackslash: ["<", ">", "|", "¦"], NumpadEqual: ["=", "=", "=", "="], NumpadComma: [".", ".", ".", "."], NumpadParenLeft: ["(", "(", "(", "("], NumpadParenRight: [")", ")", ")", ")"] } }), li({ id: "linux.french", locale: "fr", displayName: "French", virtualLayout: "azerty", platform: "linux", score: 0, mapping: { KeyA: ["q", "Q", "@", "Ω"], KeyB: ["b", "B", "”", "’"], KeyC: ["c", "C", "¢", "©"], KeyD: ["d", "D", "ð", "Ð"], KeyE: ["e", "E", "€", "¢"], KeyF: ["f", "F", "đ", "ª"], KeyG: ["g", "G", "ŋ", "Ŋ"], KeyH: ["h", "H", "ħ", "Ħ"], KeyI: ["i", "I", "→", "ı"], KeyJ: ["j", "J", "̉", "̛"], KeyK: ["k", "K", "ĸ", "&"], KeyL: ["l", "L", "ł", "Ł"], KeyM: [",", "?", "́", "̋"], KeyN: ["n", "N", "n", "N"], KeyO: ["o", "O", "ø", "Ø"], KeyP: ["p", "P", "þ", "Þ"], KeyQ: ["a", "A", "æ", "Æ"], KeyR: ["r", "R", "¶", "®"], KeyS: ["s", "S", "ß", "§"], KeyT: ["t", "T", "ŧ", "Ŧ"], KeyU: ["u", "U", "↓", "↑"], KeyV: ["v", "V", "“", "‘"], KeyW: ["z", "Z", "«", "<"], KeyX: ["x", "X", "»", ">"], KeyY: ["y", "Y", "←", "¥"], KeyZ: ["w", "W", "ł", "Ł"], Digit1: ["&", "1", "¹", "¡"], Digit2: ["é", "2", "~", "⅛"], Digit3: ['"', "3", "#", "£"], Digit4: ["'", "4", "{", "$"], Digit5: ["(", "5", "[", "⅜"], Digit6: ["-", "6", "|", "⅝"], Digit7: ["è", "7", "`", "⅞"], Digit8: ["_", "8", "\\", "™"], Digit9: ["ç", "9", "^", "±"], Digit0: ["à", "0", "@", "°"], Enter: ["\r", "\r", "\r", "\r"], Escape: ["\x1B", "\x1B", "\x1B", "\x1B"], Backspace: ["\b", "\b", "\b", "\b"], Tab: ["	", "", "	", ""], Space: [" ", " ", " ", " "], Minus: [")", "°", "]", "¿"], Equal: ["=", "+", "}", "̨"], BracketLeft: ["̂", "̈", "̈", "̊"], BracketRight: ["$", "£", "¤", "̄"], Backslash: ["*", "µ", "̀", "̆"], Semicolon: ["m", "M", "µ", "º"], Quote: ["ù", "%", "̂", "̌"], Backquote: ["²", "~", "¬", "¬"], Comma: [";", ".", "─", "×"], Period: [":", "/", "·", "÷"], Slash: ["!", "§", "̣", "̇"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadDecimal: ["", ".", "", "."], IntlBackslash: ["<", ">", "|", "¦"] } }), li({ id: "windows.french", locale: "fr", displayName: "French", virtualLayout: "azerty", platform: "windows", score: 0, mapping: { KeyA: ["q", "Q", "", ""], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "", ""], KeyD: ["d", "D", "", ""], KeyE: ["e", "E", "€", ""], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "", ""], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "", ""], KeyM: [",", "?", "", ""], KeyN: ["n", "N", "", ""], KeyO: ["o", "O", "", ""], KeyP: ["p", "P", "", ""], KeyQ: ["a", "A", "", ""], KeyR: ["r", "R", "", ""], KeyS: ["s", "S", "", ""], KeyT: ["t", "T", "", ""], KeyU: ["u", "U", "", ""], KeyV: ["v", "V", "", ""], KeyW: ["z", "Z", "", ""], KeyX: ["x", "X", "", ""], KeyY: ["y", "Y", "", ""], KeyZ: ["w", "W", "", ""], Digit1: ["&", "1", "", ""], Digit2: ["é", "2", "~", ""], Digit3: ['"', "3", "#", ""], Digit4: ["'", "4", "{", ""], Digit5: ["(", "5", "[", ""], Digit6: ["-", "6", "|", ""], Digit7: ["è", "7", "`", ""], Digit8: ["_", "8", "\\", ""], Digit9: ["ç", "9", "^", ""], Digit0: ["à", "0", "@", ""], Space: [" ", " ", "", ""], Minus: [")", "°", "]", ""], Equal: ["=", "+", "}", ""], BracketLeft: ["^", "¨", "", ""], BracketRight: ["$", "£", "¤", ""], Backslash: ["*", "µ", "", ""], Semicolon: ["m", "M", "", ""], Quote: ["ù", "%", "", ""], Backquote: ["²", "", "", ""], Comma: [";", ".", "", ""], Period: [":", "/", "", ""], Slash: ["!", "§", "", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["<", ">", "", ""] } }), li({ id: "windows.german", locale: "de", displayName: "German", platform: "windows", virtualLayout: "qwertz", score: 0, mapping: { KeyA: ["a", "A", "", ""], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "", ""], KeyD: ["d", "D", "", ""], KeyE: ["e", "E", "€", ""], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "", ""], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "", ""], KeyM: ["m", "M", "µ", ""], KeyN: ["n", "N", "", ""], KeyO: ["o", "O", "", ""], KeyP: ["p", "P", "", ""], KeyQ: ["q", "Q", "@", ""], KeyR: ["r", "R", "", ""], KeyS: ["s", "S", "", ""], KeyT: ["t", "T", "", ""], KeyU: ["u", "U", "", ""], KeyV: ["v", "V", "", ""], KeyW: ["w", "W", "", ""], KeyX: ["x", "X", "", ""], KeyY: ["z", "Z", "", ""], KeyZ: ["y", "Y", "", ""], Digit1: ["1", "!", "", ""], Digit2: ["2", '"', "²", ""], Digit3: ["3", "§", "³", ""], Digit4: ["4", "$", "", ""], Digit5: ["5", "%", "", ""], Digit6: ["6", "&", "", ""], Digit7: ["7", "/", "{", ""], Digit8: ["8", "(", "[", ""], Digit9: ["9", ")", "]", ""], Digit0: ["0", "=", "}", ""], Space: [" ", " ", "", ""], Minus: ["ß", "?", "\\", "ẞ"], Equal: ["´", "`", "", ""], BracketLeft: ["ü", "Ü", "", ""], BracketRight: ["+", "*", "~", ""], Backslash: ["#", "'", "", ""], Semicolon: ["ö", "Ö", "", ""], Quote: ["ä", "Ä", "", ""], Backquote: ["^", "°", "", ""], Comma: [",", ";", "", ""], Period: [".", ":", "", ""], Slash: ["-", "_", "", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["<", ">", "|", ""] } }), li({ id: "apple.german", locale: "de", displayName: "German", virtualLayout: "qwertz", platform: "apple", score: 0, mapping: { KeyA: ["a", "A", "å", "Å"], KeyB: ["b", "B", "∫", "‹"], KeyC: ["c", "C", "ç", "Ç"], KeyD: ["d", "D", "∂", "™"], KeyE: ["e", "E", "€", "‰"], KeyF: ["f", "F", "ƒ", "Ï"], KeyG: ["g", "G", "©", "Ì"], KeyH: ["h", "H", "ª", "Ó"], KeyI: ["i", "I", "⁄", "Û"], KeyJ: ["j", "J", "º", "ı"], KeyK: ["k", "K", "∆", "ˆ"], KeyL: ["l", "L", "@", "ﬂ"], KeyM: ["m", "M", "µ", "˘"], KeyN: ["n", "N", "~", "›"], KeyO: ["o", "O", "ø", "Ø"], KeyP: ["p", "P", "π", "∏"], KeyQ: ["q", "Q", "«", "»"], KeyR: ["r", "R", "®", "¸"], KeyS: ["s", "S", "‚", "Í"], KeyT: ["t", "T", "†", "˝"], KeyU: ["u", "U", "¨", "Á"], KeyV: ["v", "V", "√", "◊"], KeyW: ["w", "W", "∑", "„"], KeyX: ["x", "X", "≈", "Ù"], KeyY: ["z", "Z", "Ω", "ˇ"], KeyZ: ["y", "Y", "¥", "‡"], Digit1: ["1", "!", "¡", "¬"], Digit2: ["2", '"', "“", "”"], Digit3: ["3", "§", "¶", "#"], Digit4: ["4", "$", "¢", "£"], Digit5: ["5", "%", "[", "ﬁ"], Digit6: ["6", "&", "]", "^"], Digit7: ["7", "/", "|", "\\"], Digit8: ["8", "(", "{", "˜"], Digit9: ["9", ")", "}", "·"], Digit0: ["0", "=", "≠", "¯"], Space: [" ", " ", " ", " "], Minus: ["ß", "?", "¿", "˙"], Equal: ["´", "`", "'", "˚"], BracketLeft: ["ü", "Ü", "•", "°"], BracketRight: ["+", "*", "±", ""], Backslash: ["#", "'", "‘", "’"], Semicolon: ["ö", "Ö", "œ", "Œ"], Quote: ["ä", "Ä", "æ", "Æ"], Backquote: ["<", ">", "≤", "≥"], Comma: [",", ";", "∞", "˛"], Period: [".", ":", "…", "÷"], Slash: ["-", "_", "–", "—"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadDecimal: [",", ",", ".", "."], IntlBackslash: ["^", "°", "„", "“"], NumpadEqual: ["=", "=", "=", "="] } }), li({ id: "dvorak", locale: "en", displayName: "Dvorak", virtualLayout: "dvorak", platform: "", score: 0, mapping: { KeyA: ["a", "A", "å", "Å"], KeyB: ["x", "X", "≈", "˛"], KeyC: ["j", "J", "∆", "Ô"], KeyD: ["e", "E", "´", "´"], KeyE: [".", ">", "≥", "˘"], KeyF: ["u", "U", "¨", "¨"], KeyG: ["i", "I", "ˆ", "ˆ"], KeyH: ["d", "D", "∂", "Î"], KeyI: ["c", "C", "ç", "Ç"], KeyJ: ["h", "H", "˙", "Ó"], KeyK: ["t", "T", "†", "ˇ"], KeyL: ["n", "N", "˜", "˜"], KeyM: ["m", "M", "µ", "Â"], KeyN: ["b", "B", "∫", "ı"], KeyO: ["r", "R", "®", "‰"], KeyP: ["l", "L", "¬", "Ò"], KeyQ: ["'", '"', "æ", "Æ"], KeyR: ["p", "P", "π", "∏"], KeyS: ["o", "O", "ø", "Ø"], KeyT: ["y", "Y", "¥", "Á"], KeyU: ["g", "G", "©", "˝"], KeyV: ["k", "K", "˚", ""], KeyW: [",", "<", "≤", "¯"], KeyX: ["q", "Q", "œ", "Œ"], KeyY: ["f", "F", "ƒ", "Ï"], KeyZ: [";", ":", "…", "Ú"], Digit1: ["1", "!", "¡", "⁄"], Digit2: ["2", "@", "™", "€"], Digit3: ["3", "#", "£", "‹"], Digit4: ["4", "$", "¢", "›"], Digit5: ["5", "%", "∞", "ﬁ"], Digit6: ["6", "^", "§", "ﬂ"], Digit7: ["7", "&", "¶", "‡"], Digit8: ["8", "*", "•", "°"], Digit9: ["9", "(", "ª", "·"], Digit0: ["0", ")", "º", "‚"], Space: [" ", " ", " ", " "], Minus: ["[", "{", "“", "”"], Equal: ["]", "}", "‘", "’"], BracketLeft: ["/", "?", "÷", "¿"], BracketRight: ["=", "+", "≠", "±"], Backslash: ["\\", "|", "«", "»"], Semicolon: ["s", "S", "ß", "Í"], Quote: ["-", "_", "–", "—"], Backquote: ["`", "~", "`", "`"], Comma: ["w", "W", "∑", "„"], Period: ["v", "V", "√", "◊"], Slash: ["z", "Z", "Ω", "¸"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: [".", ".", ".", "."], IntlBackslash: ["§", "±", "§", "±"], NumpadEqual: ["=", "=", "=", "="], AudioVolumeUp: ["", "=", "", "="] } });
        var ui = [{ key: "left", command: "moveToPreviousChar" }, { key: "right", command: "moveToNextChar" }, { key: "up", command: "moveUp" }, { key: "down", command: "moveDown" }, { key: "shift+[ArrowLeft]", command: "extendSelectionBackward" }, { key: "shift+[ArrowRight]", command: "extendSelectionForward" }, { key: "shift+[ArrowUp]", command: "extendSelectionUpward" }, { key: "shift+[ArrowDown]", command: "extendSelectionDownward" }, { key: "[Backspace]", command: "deleteBackward" }, { key: "alt+[Delete]", command: "deleteBackward" }, { key: "[Delete]", command: "deleteForward" }, { key: "alt+[Backspace]", command: "deleteForward" }, { key: "alt+[ArrowLeft]", command: "moveToPreviousWord" }, { key: "alt+[ArrowRight]", command: "moveToNextWord" }, { key: "shift+alt+[ArrowLeft]", command: "extendToPreviousWord" }, { key: "shift+alt+[ArrowRight]", command: "extendToNextWord" }, { key: "ctrl+[ArrowLeft]", command: "moveToGroupStart" }, { key: "ctrl+[ArrowRight]", command: "moveToGroupEnd" }, { key: "shift+ctrl+[ArrowLeft]", command: "extendToGroupStart" }, { key: "shift+ctrl+[ArrowRight]", command: "extendToGroupEnd" }, { key: "[Space]", ifMode: "math", command: "moveAfterParent" }, { key: "shift+[Space]", ifMode: "math", command: "moveBeforeParent" }, { key: "[Home]", command: "moveToMathfieldStart" }, { key: "cmd+[ArrowLeft]", command: "moveToMathfieldStart" }, { key: "shift+[Home]", command: "extendToMathFieldStart" }, { key: "shift+cmd+[ArrowLeft]", command: "extendToMathFieldStart" }, { key: "[End]", command: "moveToMathfieldEnd" }, { key: "cmd+[ArrowRight]", command: "moveToMathfieldEnd" }, { key: "shift+[End]", command: "extendToMathFieldEnd" }, { key: "shift+cmd+[ArrowRight]", command: "extendToMathFieldEnd" }, { key: "[Pageup]", command: "moveToGroupStart" }, { key: "[Pagedown]", command: "moveToGroupEnd" }, { key: "[Tab]", ifMode: "math", command: "moveToNextPlaceholder" }, { key: "shift+[Tab]", ifMode: "math", command: "moveToPreviousPlaceholder" }, { key: "[Tab]", ifMode: "text", command: "moveToNextPlaceholder" }, { key: "shift+[Tab]", ifMode: "text", command: "moveToPreviousPlaceholder" }, { key: "[Escape]", ifMode: "math", command: ["switchMode", "latex"] }, { key: "[Escape]", ifMode: "text", command: ["switchMode", "latex"] }, { key: "[Escape]", ifMode: "latex", command: ["complete", "complete", { selectItem: "true" }] }, { key: "\\", ifMode: "math", command: ["switchMode", "latex", "\\"] }, { key: "[IntlBackslash]", ifMode: "math", command: ["switchMode", "latex", "\\"] }, { key: "[Tab]", ifMode: "latex", command: ["complete", "accept-suggestion"] }, { key: "[Return]", ifMode: "latex", command: "complete" }, { key: "[Enter]", ifMode: "latex", command: "complete" }, { key: "shift+[Escape]", ifMode: "latex", command: ["complete", "reject"] }, { key: "[ArrowDown]", ifMode: "latex", command: "nextSuggestion" }, { key: "[ArrowUp]", ifMode: "latex", command: "previousSuggestion" }, { key: "ctrl+a", ifPlatform: "!macos", command: "selectAll" }, { key: "cmd+a", command: "selectAll" }, { key: "[Cut]", command: "cutToClipboard" }, { key: "[Copy]", command: "copyToClipboard" }, { key: "[Paste]", command: "pasteFromClipboard" }, { key: "[Clear]", command: "deleteBackward" }, { key: "ctrl+z", ifPlatform: "!macos", command: "undo" }, { key: "cmd+z", command: "undo" }, { key: "[Undo]", command: "undo" }, { key: "ctrl+y", ifPlatform: "!macos", command: "redo" }, { key: "shift+cmd+y", command: "redo" }, { key: "shift+ctrl+z", ifPlatform: "!macos", command: "redo" }, { key: "shift+cmd+z", command: "redo" }, { key: "[Redo]", command: "redo" }, { key: "[EraseEof]", command: "deleteToGroupEnd" }, { key: "ctrl+b", ifPlatform: "macos", command: "moveToPreviousChar" }, { key: "ctrl+f", ifPlatform: "macos", command: "moveToNextChar" }, { key: "ctrl+p", ifPlatform: "macos", command: "moveUp" }, { key: "ctrl+n", ifPlatform: "macos", command: "moveDown" }, { key: "ctrl+a", ifPlatform: "macos", command: "moveToMathfieldStart" }, { key: "ctrl+e", ifPlatform: "macos", command: "moveToMathfieldEnd" }, { key: "shift+ctrl+b", ifPlatform: "macos", command: "extendSelectionBackward" }, { key: "shift+ctrl+f", ifPlatform: "macos", command: "extendSelectionForward" }, { key: "shift+ctrl+p", ifPlatform: "macos", command: "extendSelectionUpward" }, { key: "shift+ctrl+n", ifPlatform: "macos", command: "extendSelectionDownward" }, { key: "shift+ctrl+a", ifPlatform: "macos", command: "extendToMathFieldStart" }, { key: "shift+ctrl+e", ifPlatform: "macos", command: "extendToMathFieldEnd" }, { key: "alt+ctrl+b", ifPlatform: "macos", command: "moveToPreviousWord" }, { key: "alt+ctrl+f", ifPlatform: "macos", command: "moveToNextWord" }, { key: "shift+alt+ctrl+b", ifPlatform: "macos", command: "extendToPreviousWord" }, { key: "shift+alt+ctrl+f", ifPlatform: "macos", command: "extendToNextWord" }, { key: "ctrl+h", ifPlatform: "macos", command: "deleteBackward" }, { key: "ctrl+d", ifPlatform: "macos", command: "deleteForward" }, { key: "ctrl+l", ifPlatform: "macos", command: "scrollIntoView" }, { key: "ctrl+[Digit2]", ifMode: "math", command: ["insert", "\\sqrt{#0}"] }, { key: "ctrl+[Digit5]", ifMode: "math", command: "moveToOpposite" }, { key: "ctrl+[Digit6]", ifMode: "math", command: "moveToSuperscript" }, { key: "ctrl+[Return]", ifMode: "math", command: "addRowAfter" }, { key: "ctrl+[Enter]", ifMode: "math", command: "addRowAfter" }, { key: "cmd+[Return]", ifMode: "math", command: "addRowAfter" }, { key: "cmd+[Enter]", ifMode: "math", command: "addRowAfter" }, { key: "alt+p", ifMode: "math", command: ["insert", "\\pi"] }, { key: "alt+v", ifMode: "math", command: ["insert", "\\sqrt{#0}"] }, { key: "alt+w", ifMode: "math", command: ["insert", "\\sum_{i=#?}^{#?}"] }, { key: "alt+b", command: ["insert", "\\int_{#?}^{#?}"] }, { key: "alt+u", ifMode: "math", command: ["insert", "\\cup"] }, { key: "alt+n", ifMode: "math", command: ["insert", "\\cap"] }, { key: "alt+o", ifMode: "math", command: ["insert", "\\emptyset"] }, { key: "alt+d", ifMode: "math", command: ["insert", "\\differentialD"] }, { key: "shift+alt+o", ifMode: "math", command: ["insert", "\\varnothing"] }, { key: "shift+alt+d", ifMode: "math", command: ["insert", "\\partial"] }, { key: "shift+alt+p", ifMode: "math", command: ["insert", "\\prod_{i=#?}^{#?}"] }, { key: "shift+alt+u", ifMode: "math", command: ["insert", "\\bigcup"] }, { key: "shift+alt+n", ifMode: "math", command: ["insert", "\\bigcap"] }, { key: "shift+alt+a", ifMode: "math", command: ["insert", "\\forall"] }, { key: "shift+alt+e", ifMode: "math", command: ["insert", "\\exists"] }, { key: "alt+[Backslash]", ifMode: "math", command: ["insert", "\\backslash"] }, { key: "[NumpadDivide]", ifMode: "math", command: ["insert", "\\frac{#@}{#?}"] }, { key: "alt+[NumpadDivide]", ifMode: "math", command: ["insert", "\\frac{#?}{#@}"] }, { key: "shift+alt+k", command: "toggleKeystrokeCaption" }, { key: "alt+[Space]", command: "toggleVirtualKeyboard" }, { key: "alt+ctrl+[ArrowUp]", command: ["speak", "all", { withHighlighting: false }] }, { key: "alt+ctrl+[ArrowDown]", command: ["speak", "selection", { withHighlighting: false }] }, { key: "alt+[Equal]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["applyStyle", { mode: "text" }] }, { key: "alt+[Equal]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "text", command: ["applyStyle", { mode: "math" }] }, { key: "shift+[Quote]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["switchMode", "text", "", ""] }, { key: "shift+[Quote]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "text", command: ["switchMode", "math", "", ""] }, { key: "/", ifMode: "math", command: ["insert", "\\frac{#@}{#?}"] }, { key: "alt+/", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\/"] }, { key: "alt+[BracketLeft]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\left\\lbrack #0 \\right\\rbrack"] }, { key: "ctrl+[Minus]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "moveToSubscript" }, { key: "shift+alt+[BracketLeft]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\left\\lbrace #0 \\right\\rbrace"] }, { key: "ctrl+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowAfter" }, { key: "cmd+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowAfter" }, { key: "shift+ctrl+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowBefore" }, { key: "shift+cmd+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowBefore" }, { key: "ctrl+[Backspace]", ifMode: "math", command: "removeRow" }, { key: "cmd+[Backspace]", ifMode: "math", command: "removeRow" }, { key: "ctrl+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnAfter" }, { key: "cmd+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnAfter" }, { key: "shift+ctrl+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnBefore" }, { key: "shift+cmd+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnBefore" }, { key: "shift+[Backspace]", ifMode: "math", command: "removeColumn" }, { key: "alt+[Digit5]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "$\\infty"] }, { key: "alt+[Digit6]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\wedge"] }, { key: "shift+alt+[Digit6]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\vee"] }, { key: "alt+[Digit9]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "("] }, { key: "alt+[Digit0]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", ")"] }, { key: "alt+|", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "|"] }, { key: "shift+[Backquote]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\~"] }, { key: "[Backquote]", ifLayout: ["windows.french", "linux.french"], ifMode: "math", command: ["insert", "^2"] }], pi = { "\\theta": "alt+q", "\\sqrt": ["alt+v", "ctrl+[Digit2]"], "\\pi": "alt+p", "\\prod": "shift+alt+p", "\\sum": "alt+w", "\\int": "alt+b", "\\cup": "alt+u", "\\cap": "alt+n", "\\bigcup": "shift+alt+u", "\\bigcap": "shift+alt+n", "\\forall": "shift+alt+a", "\\exists": "shift+alt+e", "\\infty": "alt+[Digit5]", "\\wedge": "alt+[Digit6]", "\\vee": "shift+alt+[Digit6]", "\\differentialD": "alt+d", "\\partial": "shift+alt+d", "\\frac": "Slash", "\\emptyset": "alt+o", "\\varnothing": "shift+alt+o", "\\~": "~" };
        function hi(e3) {
          let t3 = e3;
          return M(t3) && (t3 = t3.length > 0 ? t3[0] + "(" + t3.slice(1).join("") + ")" : ""), t3;
        }
        function mi(e3, t3) {
          let a2 = [];
          if ("string" == typeof t3) {
            let e4 = pi[t3];
            M(e4) ? a2 = e4.slice() : e4 && a2.push(e4);
          }
          let r2 = hi(t3), i2 = new RegExp("^" + r2.replace("\\", "\\\\").replace("|", "\\|").replace("*", "\\*").replace("$", "\\$").replace("^", "\\^") + "([^*a-zA-Z]|$)");
          for (let t4 of e3) i2.test(hi(t4.command)) && a2.push(t4.key);
          return a2.map(fi);
        }
        function fi(e3) {
          var t3;
          let a2 = /macos|ios|/.test(T()), r2 = e3.split("+"), i2 = "";
          for (let e4 of r2) !a2 && i2 && (i2 += '<span class="ML__shortcut-join">+</span>'), e4.startsWith("[Key") ? i2 += e4.slice(4, 5) : e4.startsWith("Key") ? i2 += e4.slice(3, 4) : e4.startsWith("[Digit") ? i2 += e4.slice(6, 7) : e4.startsWith("Digit") ? i2 += e4.slice(5, 6) : i2 += null != (t3 = { cmd: "⌘", meta: a2 ? "⌘" : "command", shift: a2 ? "⇧" : "shift", alt: a2 ? "⌥" : "alt", ctrl: a2 ? "⌃" : "control", "\n": a2 ? "⏎" : "return", "[return]": a2 ? "⏎" : "return", "[enter]": a2 ? "⌤" : "enter", "[tab]": a2 ? "⇥" : "tab", "[escape]": "esc", "[backspace]": a2 ? "⌫" : "backspace", "[delete]": a2 ? "⌦" : "del", "[pageup]": a2 ? "⇞" : "page up", "[pagedown]": a2 ? "⇟" : "page down", "[home]": a2 ? "⤒" : "home", "[end]": a2 ? "⤓" : "end", "[space]": "space", "[equal]": "=", "[minus]": "-", "[comma]": ",", "[slash]": "/", "[backslash]": "\\", "[bracketleft]": "[", "[bracketright]": "]", semicolon: ";", period: ".", comma: ",", minus: "-", equal: "=", quote: "'", bracketLeft: "[", bracketRight: "]", backslash: "\\", intlbackslash: "\\", backquote: "`", slash: "/", numpadmultiply: "* &#128290;", numpaddivide: "/ &#128290;", numpadsubtract: "- &#128290;", numpadadd: "+ &#128290;", numpaddecimal: ". &#128290;", numpadcomma: ", &#128290;", help: "help", left: "⇠", up: "⇡", right: "⇢", down: "⇣", "[arrowleft]": "⇠", "[arrowup]": "⇡", "[arrowright]": "⇢", "[arrowdown]": "⇣", "[digit0]": "0", "[digit1]": "1", "[digit2]": "2", "[digit3]": "3", "[digit4]": "4", "[digit5]": "5", "[digit6]": "6", "[digit7]": "7", "[digit8]": "8", "[digit9]": "9" }[e4.toLowerCase()]) ? t3 : e4.toUpperCase();
          return i2;
        }
        function yi(e3, t3) {
          if (e3.ifPlatform && !/^!?(macos|windows|android|ios|chromeos|other)$/.test(e3.ifPlatform)) throw new Error(`Unexpected platform "${e3.ifPlatform}" for keybinding ${e3.key}`);
          if (void 0 !== e3.ifLayout && (0 === t3.score || !e3.ifLayout.includes(t3.id))) return;
          let a2 = ti(e3.key), r2 = e3.ifPlatform;
          if (a2.cmd) {
            if (r2 && "macos" !== r2 && "ios" !== r2) throw new Error('Unexpected "cmd" modifier with platform "' + r2 + '"\n"cmd" modifier can only be used with macOS or iOS platform.');
            r2 || (r2 = "ios" === T() ? "ios" : "macos"), a2.win = false, a2.cmd = false, a2.meta = true;
          }
          if (a2.win) {
            if (r2 && "windows" !== r2) throw new Error('Unexpected "win" modifier with platform "' + r2 + '"\n"win" modifier can only be used with Windows platform.');
            r2 = "windows", a2.win = false, a2.cmd = false, a2.meta = true;
          }
          if (r2 && !function(e4) {
            if (L()) {
              let t4 = T(), a3 = e4.startsWith("!"), r3 = e4.endsWith(t4);
              if (a3 && !r3 || !a3 && r3) return true;
            }
            return "!other" !== e4 && "other" === e4;
          }(r2)) return;
          if (/^\[.+\]$/.test(a2.key)) return S(_({}, e3), { ifPlatform: r2, key: ai(a2) });
          let i2 = function(e4, t4) {
            var a3;
            let r3 = { shift: false, alt: false, cmd: false, win: false, meta: false, ctrl: false, key: "" };
            if (!e4) return r3;
            for (let [a4, i3] of Object.entries(t4.mapping)) {
              if (i3[0] === e4) return r3.key = `[${a4}]`, r3;
              if (i3[1] === e4) return r3.shift = true, r3.key = `[${a4}]`, r3;
              if (i3[2] === e4) return r3.alt = true, r3.key = `[${a4}]`, r3;
              if (i3[3] === e4) return r3.shift = true, r3.alt = true, r3.key = `[${a4}]`, r3;
            }
            return r3.key = null != (a3 = oi[e4]) ? a3 : "", r3;
          }(a2.key, t3);
          if (!i2) throw new Error('Invalid keybinding key "' + e3.key + '"');
          if (i2.shift && a2.shift || i2.alt && a2.alt) throw new Error(`The keybinding ${e3.key} (${bi(e3.command)}) is conflicting with the key combination ${ai(i2)} using the ${t3.displayName} keyboard layout`);
          return i2.shift = i2.shift || a2.shift, i2.alt = i2.alt || a2.alt, i2.meta = a2.meta, i2.ctrl = a2.ctrl, S(_({}, e3), { ifPlatform: r2, key: ai(i2) });
        }
        function bi(e3) {
          if (Array.isArray(e3)) {
            let t3 = [...e3];
            return t3.shift() + "(" + t3.map((e4) => "string" == typeof e4 ? `"${e4}"` : e4.toString()).join(", ") + ")";
          }
          return e3;
        }
        var gi = "#mathlive-popover-panel{visibility:hidden;background-color:rgba(97,97,97,0.95);color:#fff;text-align:center;border-radius:8px;position:fixed;z-index:1;display:flex;flex-direction:column;justify-content:center;box-shadow:0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);transition:all .2s cubic-bezier(.64, .09, .08, 1)}#mathlive-popover-panel::after{content:'';position:absolute;top:-5px;left:calc(50% - 3px);width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;font-size:1rem;border-bottom:5px solid rgba(97,97,97,0.9)}#mathlive-popover-panel.is-visible{visibility:inherit;animation:ML__fade-in cubic-bezier(0, 0, .2, 1) .15s}@keyframes ML__fade-in{from{opacity:0}to{opacity:1}}#mathlive-popover-panel ul{display:flex;flex-flow:column;list-style:none;margin:0;padding:0;align-items:flex-start;justify-content:center}#mathlive-popover-panel li{display:flex;flex-direction:row;justify-content:space-between;margin:8px;padding:8px;width:calc(100% - 16px - 16px);column-gap:1em;border-radius:8px;cursor:pointer}#mathlive-popover-panel li a{color:#5ea6fd;padding-top:.3em;margin-top:.4em;display:block}#mathlive-popover-panel li a:hover{color:#5ea6fd;text-decoration:underline}#mathlive-popover-panel li:hover,#mathlive-popover-panel li.is-pressed,#mathlive-popover-panel li.is-active{background:rgba(255,255,255,0.1)}.ML__popover__command{font-size:1.6rem;font-family:KaTeX_Main}.ML__popover__latex{font-family:'IBM Plex Mono','Source Code Pro',Consolas,'Roboto Mono',Menlo,'Bitstream Vera Sans Mono','DejaVu Sans Mono',Monaco,Courier,monospace;align-self:center}.ML__popover__keybinding{font-family:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;font-size:.8em;opacity:.7}.ML__shortcut-join{opacity:.5}", vi = ".ML__sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);clip-path:inset(50%);white-space:nowrap;border:0}.ML__isInline{display:inline-block}.ML__base{visibility:inherit;display:inline-block;position:relative;cursor:text;padding:0;margin:0;box-sizing:content-box;border:0;outline:0;vertical-align:baseline;font-weight:inherit;font-family:inherit;font-style:inherit;text-decoration:none;width:min-content}body.ML__fonts-loading .ML__base{visibility:hidden}.ML__strut,.ML__strut--bottom{display:inline-block;min-height:.5em}.ML__small-delim{font-family:KaTeX_Main}.ML__text{font-family:var(--text-font-family, system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif);white-space:pre}.ML__cmr{font-family:KaTeX_Main;font-style:normal}.ML__mathit{font-family:KaTeX_Math;font-style:italic}.ML__mathbf{font-family:KaTeX_Main;font-weight:bold}.lcGreek.ML__mathbf{font-family:KaTeX_Math;font-weight:normal}.ML__mathbfit{font-family:KaTeX_Math;font-weight:bold;font-style:italic}.ML__ams{font-family:KaTeX_AMS}.ML__bb{font-family:KaTeX_AMS}.ML__cal{font-family:KaTeX_Caligraphic}.ML__frak{font-family:KaTeX_Fraktur}.ML__tt{font-family:KaTeX_Typewriter}.ML__script{font-family:KaTeX_Script}.ML__sans{font-family:KaTeX_SansSerif}.ML__series_ul{font-weight:100}.ML__series_el{font-weight:100}.ML__series_l{font-weight:200}.ML__series_sl{font-weight:300}.ML__series_sb{font-weight:500}.ML__bold,.ML__boldsymbol{font-weight:700}.ML__series_eb{font-weight:800}.ML__series_ub{font-weight:900}.ML__series_uc{font-stretch:ultra-condensed}.ML__series_ec{font-stretch:extra-condensed}.ML__series_c{font-stretch:condensed}.ML__series_sc{font-stretch:semi-condensed}.ML__series_sx{font-stretch:semi-expanded}.ML__series_x{font-stretch:expanded}.ML__series_ex{font-stretch:extra-expanded}.ML__series_ux{font-stretch:ultra-expanded}.ML__it{font-style:italic}.ML__shape_ol{-webkit-text-stroke:1px black;text-stroke:1px black;color:transparent}.ML__shape_sc{font-variant:small-caps}.ML__shape_sl{font-style:oblique}.ML__emph{color:#bc2612}.ML__emph .ML__emph{color:#0c7f99}.ML__highlight{color:#007cb2;background:#edd1b0}.ML__center{text-align:center}.ML__label_padding{padding:0 .5em}.ML__frac-line{width:100%;min-height:1px}.ML__frac-line:after{content:'';display:block;margin-top:-0.04em;min-height:.04em;-webkit-print-color-adjust:exact;print-color-adjust:exact;background:currentColor;box-sizing:content-box;transform:translate(0, 0)}.ML__sqrt{display:inline-block}.ML__sqrt-sign{display:inline-block;font-family:KaTeX_Main;position:relative}.ML__sqrt-line{display:inline-block;height:.04em;width:100%}.ML__sqrt-line:before{content:'';display:block;margin-top:-0.04em;min-height:.04em;-webkit-print-color-adjust:exact;print-color-adjust:exact;background:currentColor;transform:translate(0, 0)}.ML__sqrt-line:after{border-bottom-width:1px;content:' ';display:block;margin-top:-0.1em}.ML__sqrt-index{margin-left:.27777778em;margin-right:-0.55555556em}.ML__delim-size1{font-family:KaTeX_Size1}.ML__delim-size2{font-family:KaTeX_Size2}.ML__delim-size3{font-family:KaTeX_Size3}.ML__delim-size4{font-family:KaTeX_Size4}.ML__delim-mult .delim-size1>span{font-family:KaTeX_Size1}.ML__delim-mult .delim-size4>span{font-family:KaTeX_Size4}.ML__accent-body>span{font-family:KaTeX_Main;width:0}.ML__accent-vec>span{position:relative;left:.24em}.ML__mathlive{display:inline-block;direction:ltr;text-align:left;text-indent:0;text-rendering:auto;font-family:KaTeX_Main,'Times New Roman',serif;font-style:normal;font-size-adjust:none;font-stretch:normal;font-variant-caps:normal;letter-spacing:normal;line-height:1.2;word-wrap:normal;word-spacing:normal;white-space:nowrap;text-shadow:none;-webkit-user-select:none;user-select:none;width:min-content}.ML__mathlive .style-wrap{position:relative}.ML__mathlive .mfrac,.ML__mathlive .left-right{display:inline-block}.ML__mathlive .vlist-t{display:inline-table;table-layout:fixed;border-collapse:collapse}.ML__mathlive .vlist-r{display:table-row}.ML__mathlive .vlist{display:table-cell;vertical-align:bottom;position:relative}.ML__mathlive .vlist>span{display:block;height:0;position:relative}.ML__mathlive .vlist>span>span{display:inline-block}.ML__mathlive .vlist>span>.pstrut{overflow:hidden;width:0}.ML__mathlive .vlist-t2{margin-right:-2px}.ML__mathlive .vlist-s{display:table-cell;vertical-align:bottom;font-size:1px;width:2px;min-width:2px}.ML__mathlive .msubsup{text-align:left}.ML__mathlive .negativethinspace{display:inline-block;margin-left:-0.16667em;height:.71em}.ML__mathlive .thinspace{display:inline-block;width:.16667em;height:.71em}.ML__mathlive .mediumspace{display:inline-block;width:.22222em;height:.71em}.ML__mathlive .thickspace{display:inline-block;width:.27778em;height:.71em}.ML__mathlive .enspace{display:inline-block;width:.5em;height:.71em}.ML__mathlive .quad{display:inline-block;width:1em;height:.71em}.ML__mathlive .qquad{display:inline-block;width:2em;height:.71em}.ML__mathlive .llap,.ML__mathlive .rlap{width:0;position:relative;display:inline-block}.ML__mathlive .llap>.inner,.ML__mathlive .rlap>.inner{position:absolute}.ML__mathlive .llap>.fix,.ML__mathlive .rlap>.fix{display:inline-block}.ML__mathlive .llap>.inner{right:0}.ML__mathlive .rlap>.inner{left:0}.ML__mathlive .rule{display:inline-block;border:solid 0;position:relative;box-sizing:border-box}.ML__mathlive .overline .overline-line,.ML__mathlive .underline .underline-line{width:100%}.ML__mathlive .overline .overline-line:before,.ML__mathlive .underline .underline-line:before{border-bottom-style:solid;border-bottom-width:.04em;content:'';display:block}.ML__mathlive .overline .overline-line:after,.ML__mathlive .underline .underline-line:after{border-bottom-style:solid;border-bottom-width:.04em;min-height:thin;content:'';display:block;margin-top:-1px}.ML__mathlive .stretchy{display:block;position:absolute;width:100%;left:0;overflow:hidden}.ML__mathlive .stretchy:before,.ML__mathlive .stretchy:after{content:''}.ML__mathlive .stretchy svg{display:block;position:absolute;width:100%;height:inherit;fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1}.ML__mathlive .slice-1-of-2{display:inline-flex;position:absolute;left:0;width:50.2%;overflow:hidden}.ML__mathlive .slice-2-of-2{display:inline-flex;position:absolute;right:0;width:50.2%;overflow:hidden}.ML__mathlive .slice-1-of-3{display:inline-flex;position:absolute;left:0;width:25.1%;overflow:hidden}.ML__mathlive .slice-2-of-3{display:inline-flex;position:absolute;left:25%;width:50%;overflow:hidden}.ML__mathlive .slice-3-of-3{display:inline-flex;position:absolute;right:0;width:25.1%;overflow:hidden}.ML__mathlive .slice-1-of-1{display:inline-flex;position:absolute;width:100%;left:0;overflow:hidden}.ML__mathlive .nulldelimiter{width:.12em;display:inline-block}.ML__mathlive .op-group{display:inline-block}.ML__mathlive .op-symbol{position:relative}.ML__mathlive .op-symbol.small-op{font-family:KaTeX_Size1}.ML__mathlive .op-symbol.large-op{font-family:KaTeX_Size2}.ML__mathlive .accent>.vlist>span{text-align:center}.ML__mathlive .mtable .vertical-separator{display:inline-block;min-width:1px;box-sizing:border-box}.ML__mathlive .mtable .arraycolsep{display:inline-block}.ML__mathlive .mtable .col-align-m>.vlist-t{text-align:center}.ML__mathlive .mtable .col-align-c>.vlist-t{text-align:center}.ML__mathlive .mtable .col-align-l>.vlist-t{text-align:left}.ML__mathlive .mtable .col-align-r>.vlist-t{text-align:right}.ML__error{display:inline-block;background-image:radial-gradient(ellipse at center, hsl(341,100%,40%), rgba(0,0,0,0) 70%);background-color:hsla(341,100%,40%,0.1);background-repeat:repeat-x;background-size:3px 3px;padding-bottom:3px;background-position:0 100%}.ML__error>.ML__error{background:transparent;padding:0}.ML__composition{background:#fff1c2;color:black;text-decoration:underline var(--caret-color-computed, var(--ML__caret-color))}@media (prefers-color-scheme:dark){.ML__composition{background:#69571c;color:white}}.ML__placeholder{color:var(--placeholder-color, var(--ML__placeholder-color));opacity:var(--placeholder-opacity, .4);padding-left:.4ex;padding-right:.4ex;font-family:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.ML__placeholdercontainer{display:none}.ML__placeholdercontainer math-field{display:inline-block;position:absolute;z-index:1001;min-width:32px;padding-left:4px;padding-right:4px;border-radius:4px;border:1px solid var(--editable-border)}.ML__isReadOnly .ML__placeholdercontainer{display:block}.ML__notation{position:absolute;box-sizing:border-box}.ML__container{min-height:auto !important}";
        function ki(e3) {
          var t3;
          "function" == typeof (null == (t3 = e3.listeners) ? void 0 : t3.onSelectionDidChange) && !e3.suppressChangeNotifications && (e3.suppressChangeNotifications = true, e3.listeners.onSelectionDidChange(e3), e3.suppressChangeNotifications = false);
        }
        function xi(e3, t3 = {}) {
          if (e3.suppressChangeNotifications || !e3.mathfield.host) return true;
          e3.suppressChangeNotifications = true;
          let a2 = e3.mathfield.host.dispatchEvent(new InputEvent("beforeinput", S(_({}, t3), { cancelable: true, bubbles: true, composed: true })));
          return e3.suppressChangeNotifications = false, a2;
        }
        function wi(e3, t3) {
          e3.suppressChangeNotifications || !e3.mathfield.host || (e3.suppressChangeNotifications = true, e3.mathfield.host.dispatchEvent(new InputEvent("input", S(_({}, t3), { bubbles: true, composed: true }))), e3.suppressChangeNotifications = false);
        }
        function _i(e3) {
          var t3, a2;
          let r2 = e3.atoms.find((e4) => e4 instanceof Da);
          return r2 && null != (a2 = null == (t3 = r2.body) ? void 0 : t3.filter((e4) => e4 instanceof Aa)) ? a2 : [];
        }
        function Si(e3, t3) {
          var a2;
          let r2 = 0, i2 = false, o2 = Number.isFinite(null == t3 ? void 0 : t3.before) ? null != (a2 = null == t3 ? void 0 : t3.before) ? a2 : 0 : e3.lastOffset;
          for (; r2 <= o2 && !i2; ) {
            let t4 = e3.at(r2);
            i2 = t4 instanceof Aa && t4.isSuggestion, i2 || r2++;
          }
          if (!i2) return [void 0, void 0];
          let n2 = r2, s2 = false;
          for (; n2 <= o2 && !s2; ) {
            let t4 = e3.at(n2);
            s2 = !(t4 instanceof Aa && t4.isSuggestion), s2 || n2++;
          }
          return [r2 - 1, n2 - 1];
        }
        function Mi(e3) {
          let t3 = _i(e3.model).filter((e4) => e4.isSuggestion);
          if (0 !== t3.length) {
            e3.model.position = e3.model.offsetOf(t3[0].leftSibling);
            for (let e4 of t3) e4.parent.removeChild(e4);
          }
        }
        function Li(e3, t3) {
          var a2;
          let { model: r2 } = e3;
          Mi(e3);
          for (let e4 of _i(r2)) e4.isError = false;
          if (!r2.selectionIsCollapsed) return void $i(e3);
          let i2 = [], o2 = r2.at(r2.position);
          for (; o2 && o2 instanceof Aa && /^[a-zA-Z\*]$/.test(o2.value); ) o2 = o2.leftSibling;
          if (o2 && o2 instanceof Aa && "\\" === o2.value) for (i2.push(o2), o2 = o2.rightSibling; o2 && o2 instanceof Aa && /^[a-zA-Z\*]$/.test(o2.value); ) i2.push(o2), o2 = o2.rightSibling;
          let n2 = i2.map((e4) => e4.value).join(""), s2 = n2 ? function(e4, t4) {
            var a3, r3;
            if ("\\" === t4) return [];
            if (!t4.startsWith("\\")) return [];
            let i3 = [];
            for (let e5 in X) e5.startsWith(t4) && !X[e5].infix && i3.push({ match: e5, frequency: null != (a3 = X[e5].frequency) ? a3 : 0 });
            for (let e5 in H) e5.startsWith(t4) && i3.push({ match: e5, frequency: null != (r3 = H[e5].frequency) ? r3 : 0 });
            let o3 = t4.substring(1);
            for (let t5 of Object.keys(e4.options.macros)) t5.startsWith(o3) && i3.push({ match: "\\" + t5, frequency: 0 });
            return i3.sort((e5, t5) => {
              var a4, r4;
              return e5.frequency === t5.frequency ? e5.match.length === t5.match.length ? e5.match < t5.match ? -1 : 1 : e5.match.length - t5.match.length : (null != (a4 = t5.frequency) ? a4 : 0) - (null != (r4 = e5.frequency) ? r4 : 0);
            }), i3.map((e5) => e5.match);
          }(e3, n2) : [];
          if (0 === s2.length) return /^\\[a-zA-Z\*]+$/.test(n2) && i2.forEach((e4) => {
            e4.isError = true;
          }), void $i(e3);
          e3.suggestionIndex = null != (a2 = null == t3 ? void 0 : t3.atIndex) ? a2 : 0, e3.suggestionIndex < 0 && (e3.suggestionIndex = s2.length - 1);
          let l2 = s2[e3.suggestionIndex % s2.length];
          if (l2 !== n2) {
            let t4 = i2[i2.length - 1];
            t4.parent.addChildrenAfter([...l2.slice(n2.length - l2.length)].map((t5) => new Aa(t5, e3, { isSuggestion: true })), t4), Oi(e3);
          }
          !function(e4, t4) {
            if (0 === t4.length || false === e4.options.enablePopover) return void $i(e4);
            t4 = t4.slice(0, 10);
            let a3 = "<ul>";
            for (let r4 of t4) {
              let t5 = r4, i3 = Bi(e4, r4), o3 = mi(e4.keybindings, t5).join("<br>");
              a3 += `<li role="button" data-command="${t5}"><span class="ML__popover__latex">${t5}</span><span class="ML__popover__command">${i3}</span>`, o3 && (a3 += `<span class="ML__popover__keybinding">${o3}</span>`), a3 += "</li>";
            }
            a3 += "</ul>", e4.popover = function(e5, t5) {
              return e5.popover ? (e5.popover.innerHTML = e5.options.createHTML(t5), e5.popover) : (e5.popover = Kr("mathlive-popover-panel"), void 0 === Di && (Di = Qr(gi).toString(36)), Ti = ei(null, gi, Di), zi = ei(null, vi, Qr(vi).toString(36)), e5.popover.innerHTML = e5.options.createHTML(t5), e5.popover);
            }(e4, a3);
            let r3 = e4.popover.querySelectorAll("ul li");
            for (let t5 of r3) t5.addEventListener("pointerdown", (e5) => {
              e5.preventDefault();
            }), t5.addEventListener("click", (a4) => {
              Ai(e4, "reject"), cr.insert("math", e4.model, t5.dataset.command, { selectionMode: "placeholder", format: "latex" }), e4.dirty = true, e4.scrollIntoView(), e4.focus();
            });
            setTimeout(() => {
              let t5 = qr(e4.field);
              t5 && Ei(e4, t5), e4.popover && (e4.popover.classList.add("is-visible"), e4.popoverVisible = true);
            }, 32);
          }(e3, s2);
        }
        function Ci(e3) {
          let [t3, a2] = Si(e3, { before: e3.position });
          if (void 0 === t3 || void 0 === a2) return false;
          let r2 = false;
          return e3.getAtoms([t3, a2]).forEach((e4) => {
            e4.isSuggestion && (e4.isSuggestion = false, r2 = true);
          }), r2;
        }
        function Ai(e3, t3 = "accept", a2) {
          var r2, i2;
          $i(e3);
          let o2 = function(e4) {
            return e4.atoms.find((e5) => e5 instanceof Da);
          }(e3.model);
          if (!o2) return false;
          if ("accept-suggestion" === t3) {
            let t4 = _i(e3.model).filter((e4) => e4.isSuggestion);
            if (0 === t4.length) return false;
            for (let e4 of t4) e4.isSuggestion = false;
            return e3.model.position = e3.model.offsetOf(t4[t4.length - 1]), true;
          }
          let n2 = _i(e3.model).filter((e4) => !e4.isSuggestion).map((e4) => e4.value).join(""), s2 = o2.leftSibling;
          return o2.parent.removeChild(o2), e3.model.position = e3.model.offsetOf(s2), e3.mode = null != (r2 = null == a2 ? void 0 : a2.mode) ? r2 : "math", "reject" === t3 || (cr.insert("math", e3.model, n2, { selectionMode: null != (i2 = null == a2 ? void 0 : a2.selectItem) && i2 ? "item" : "placeholder", format: "latex" }), e3.snapshot(), e3.model.announce("replacement")), true;
        }
        new class extends cr {
          constructor() {
            super("latex");
          }
          createAtom(e3, t3, a2) {
            return new Aa(e3, t3);
          }
          onPaste(e3, t3) {
            if (!t3.clipboardData) return false;
            let a2 = t3.clipboardData.getData("text/x-latex");
            return a2 || (a2 = t3.clipboardData.getData("text/plain")), !(!a2 || !xi(e3.model, { inputType: "insertFromPaste", data: a2 }) || (e3.snapshot(), this.insert(e3.model, a2) && (wi(e3.model, { inputType: "insertFromPaste" }), Oi(e3)), t3.preventDefault(), t3.stopPropagation(), 0));
          }
          insert(e3, t3, a2) {
            if (!xi(e3, { data: t3, inputType: "insertText" })) return false;
            a2 || (a2 = {}), a2.insertionMode || (a2.insertionMode = "replaceSelection"), a2.selectionMode || (a2.selectionMode = "placeholder");
            let { suppressChangeNotifications: r2 } = e3;
            a2.suppressChangeNotifications && (e3.suppressChangeNotifications = true);
            let i2 = e3.suppressChangeNotifications;
            e3.suppressChangeNotifications = true, "replaceSelection" !== a2.insertionMode || e3.selectionIsCollapsed ? "replaceAll" === a2.insertionMode ? (e3.root.setChildren([], "body"), e3.position = 0) : "insertBefore" === a2.insertionMode ? e3.collapseSelection("backward") : "insertAfter" === a2.insertionMode && e3.collapseSelection("forward") : e3.deleteAtoms(Qa(e3.selection));
            let o2 = [];
            for (let a3 of t3) Z.test(a3) && o2.push(new Aa(a3, e3.mathfield));
            let n2 = e3.at(e3.position);
            if (n2 instanceof Da && (n2 = n2.lastChild), !(n2.parent instanceof Da)) {
              let t4 = new Da("", e3.mathfield);
              n2.parent.addChildAfter(t4, n2), n2 = t4.firstChild;
            }
            let s2 = n2.parent.addChildrenAfter(o2, n2);
            return e3.suppressChangeNotifications = i2, "before" === a2.selectionMode || ("item" === a2.selectionMode ? e3.setSelection(e3.anchor, e3.offsetOf(s2)) : s2 && (e3.position = e3.offsetOf(s2))), wi(e3, { data: t3, inputType: "insertText" }), e3.suppressChangeNotifications = r2, true;
          }
        }();
        var Di, Ti = null, zi = null;
        function Bi(e3, t3) {
          let a2 = e3, r2 = new Et("root", a2);
          return r2.body = ua(t3, a2, { parseMode: "math" }), ft(ut(mt(new dt(r2.render(new Ye({ registers: a2.registers }, { fontSize: 5 }, "displaystyle")), { classes: "ML__base" }))), { classes: "ML__mathlive" }).toMarkup();
        }
        function Ki(e3, t3) {
          var a2;
          if (e3.element && e3.element.mathfield === e3 && e3.popover && e3.popoverVisible) {
            if (null != t3 && t3.deferred) return void setTimeout(() => Ki(e3), 100);
            if ("latex" !== (null == (a2 = e3.model.at(e3.model.position)) ? void 0 : a2.type)) $i(e3);
            else {
              let t4 = qr(e3.field);
              t4 && Ei(e3, t4);
            }
          }
        }
        function Ei(e3, t3) {
          if (C(), !e3.popover || !e3.popoverVisible) return;
          let a2 = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight, r2 = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, i2 = window.innerWidth - document.documentElement.clientWidth, o2 = window.innerHeight - document.documentElement.clientHeight, n2 = e3.virtualKeyboard.height;
          t3.x + e3.popover.offsetWidth / 2 > r2 - i2 ? e3.popover.style.left = r2 - e3.popover.offsetWidth - i2 + "px" : t3.x - e3.popover.offsetWidth / 2 < 0 ? e3.popover.style.left = "0" : e3.popover.style.left = t3.x - e3.popover.offsetWidth / 2 + "px", t3.y + e3.popover.offsetHeight + 5 > a2 - o2 - n2 ? (e3.popover.classList.add("ML__popover--reverse-direction"), e3.popover.style.top = t3.y - t3.height - e3.popover.offsetHeight - 5 + "px") : (e3.popover.classList.remove("ML__popover--reverse-direction"), e3.popover.style.top = `${t3.y + 5}px`);
        }
        function $i(e3) {
          e3.suggestionIndex = 0, e3.popoverVisible = false, e3.popover && (e3.popover.classList.remove("is-visible"), e3.popover.innerHTML = "");
        }
        function qi(e3) {
          let t3 = 0;
          for (let a2 = 0; a2 < e3.length; a2++) t3 = 31 * t3 + e3.charCodeAt(a2), t3 |= 0;
          return Math.abs(t3);
        }
        function Oi(e3, t3) {
          e3.dirty || (e3.dirty = true, requestAnimationFrame(() => {
            $r(e3) && e3.dirty && (e3.atomBoundsCache = /* @__PURE__ */ new Map(), Pi(e3, t3), e3.atomBoundsCache = void 0);
          }));
        }
        function Pi(e3, t3) {
          var a2;
          if (C(), !$r(e3)) return;
          t3 = null != t3 ? t3 : {};
          let { model: r2 } = e3;
          r2.root.caret = "", r2.root.isSelected = false, r2.root.containsCaret = true;
          for (let e4 of r2.atoms) e4.caret = "", e4.isSelected = false, e4.containsCaret = false;
          let i2 = !e3.options.readOnly && e3.hasFocus();
          if (r2.selectionIsCollapsed) r2.at(r2.position).caret = i2 ? e3.mode : "";
          else {
            let e4 = r2.getAtoms(r2.selection, { includeChildren: true });
            for (let t4 of e4) t4.isSelected = true;
          }
          if (i2) {
            let e4 = r2.at(r2.position).parent;
            for (; e4; ) e4.containsCaret = true, e4 = e4.parent;
          }
          let o2 = function(e4, t4) {
            var a3;
            return t4 = null != t4 ? t4 : {}, ft(mt(e4.model.root.render(new Ye({ registers: e4.registers, atomIdsSettings: { seed: t4.forHighlighting ? qi(Et.serialize(e4.model.root, { expandMacro: false, defaultMode: e4.options.defaultMode })) : "random", groupNumbers: null != (a3 = t4.forHighlighting) && a3 }, renderPlaceholder: e4.options.readOnly ? (t5, a4) => {
              if (a4.placeholderId) {
                let r3 = e4.getPlaceholderField(a4.placeholderId);
                return a4.createMathfieldBox(t5, r3, a4.placeholderId);
              }
              return a4.createBox(t5);
            } : void 0 }, { fontSize: 5, letterShapeStyle: e4.options.letterShapeStyle }, "inline-math" === e4.options.defaultMode ? "textstyle" : "displaystyle")), e4.options.horizontalSpacingScale), { classes: "ML__mathlive", attributes: { translate: "no", "aria-hidden": "true" } });
          }(e3, t3), n2 = e3.field, s2 = n2.classList.contains("ML__focused");
          s2 && !i2 ? n2.classList.remove("ML__focused") : !s2 && i2 && n2.classList.add("ML__focused"), n2.innerHTML = e3.options.createHTML(o2.toMarkup()), e3.fieldContent = n2.querySelector(".ML__mathlive"), e3.accessibleNode.innerHTML = e3.options.createHTML('<math xmlns="http://www.w3.org/1998/Math/MathML">' + wr(r2.root, e3.options) + "</math>"), Ni(e3), e3.options.readOnly && e3.attachNestedMathfield(), null != (a2 = t3.interactive) && a2 || setTimeout(() => Ni(e3), 32), e3.dirty = false;
        }
        function Ni(e3) {
          C();
          let t3 = e3.field;
          if (!t3) return;
          for (let e4 of t3.querySelectorAll(".ML__selection, .ML__contains-highlight")) e4.remove();
          if (!e3.hasFocus()) return;
          let a2 = e3.model, r2 = parseFloat(getComputedStyle(t3).width), i2 = t3.getBoundingClientRect().width / r2;
          if (i2 = isNaN(i2) ? 1 : i2, a2.selectionIsCollapsed) {
            setTimeout(() => Ki(e3), 32);
            let r3 = a2.at(a2.position);
            for (; r3 && (!r3.containsCaret || !r3.displayContainsHighlight); ) r3 = r3.parent;
            if (null != r3 && r3.containsCaret && r3.displayContainsHighlight) {
              let a3 = Pr(e3, Fr(e3, r3));
              if (a3) {
                a3.left /= i2, a3.right /= i2, a3.top /= i2, a3.bottom /= i2;
                let e4 = document.createElement("div");
                e4.classList.add("ML__contains-highlight"), e4.style.position = "absolute", e4.style.left = `${a3.left}px`, e4.style.top = `${a3.top}px`, e4.style.width = `${Math.ceil(a3.right - a3.left)}px`, e4.style.height = `${Math.ceil(a3.bottom - a3.top - 1)}px`, t3.insertBefore(e4, t3.childNodes[0]);
              }
            }
          } else for (let a3 of function(e4) {
            let t4 = [];
            for (let a4 of e4) {
              let e5 = false;
              for (let r3 of t4) if (a4.left === r3.left && a4.right === r3.right && a4.top === r3.top && a4.bottom === r3.bottom) {
                e5 = true;
                break;
              }
              e5 || t4.push(a4);
            }
            e4 = t4, t4 = [];
            for (let a4 of e4) {
              let r3 = 0;
              for (let t5 of e4) if (a4.left >= t5.left && a4.right <= t5.right && a4.top >= t5.top && a4.bottom <= t5.bottom && (r3 += 1, r3 > 1)) break;
              1 === r3 && t4.push(a4);
            }
            return t4;
          }(Rr(e3, { excludeAtomsWithBackground: true }))) {
            a3.left /= i2, a3.right /= i2, a3.top /= i2, a3.bottom /= i2;
            let e4 = document.createElement("div");
            e4.classList.add("ML__selection"), e4.style.position = "absolute", e4.style.left = `${a3.left}px`, e4.style.top = `${a3.top}px`, e4.style.width = `${Math.ceil(a3.right - a3.left)}px`, e4.style.height = `${Math.ceil(a3.bottom - a3.top - 1)}px`, t3.insertBefore(e4, t3.childNodes[0]);
          }
        }
        var Fi = {};
        function Ri(e3, t3) {
          t3 = null != t3 ? t3 : { target: "mathfield", canUndo: false };
          for (let a2 of Object.keys(e3)) Fi[a2] = S(_({}, t3), { fn: e3[a2] });
        }
        function Ii(e3) {
          var t3;
          let a2;
          return a2 = M(e3) ? e3[0] : e3, a2 = a2.replace(/-\w/g, (e4) => e4[1].toUpperCase()), null == (t3 = Fi[a2]) ? void 0 : t3.target;
        }
        function ji(e3, t3, a2) {
          return t3 + Tr(a2, S(_({}, e3), { textToSpeechMarkup: "", textToSpeechRulesOptions: S(_({}, e3.textToSpeechRulesOptions), { markup: "none" }) }));
        }
        function Vi(e3, t3) {
          var a2, r2, i2;
          if (L() && (null != t3 || (t3 = null != (a2 = Un().config) ? a2 : {}), t3)) if (t3.speechEngine && "local" !== t3.speechEngine) if ("amazon" === t3.speechEngine) {
            if ("AWS" in window) {
              let a3 = new globalThis.AWS.Polly({ apiVersion: "2016-06-10" }), o2 = { OutputFormat: "mp3", VoiceId: null != (r2 = t3.speechEngineVoice) ? r2 : "Joanna", Engine: ["Amy", "Emma", "Brian", "Ivy", "Joanna", "Kendra", "Kimberly", "Salli", "Joey", "Justin", "Matthew"].includes(null != (i2 = t3.speechEngineVoice) ? i2 : "Joanna") ? "neural" : "standard", Text: e3, TextType: "ssml" };
              a3.synthesizeSpeech(o2, (e4, t4) => {
                if (!e4 && null != t4 && t4.AudioStream) {
                  let e5 = new Uint8Array(t4.AudioStream), a4 = new Blob([e5.buffer], { type: "audio/mpeg" }), r3 = URL.createObjectURL(a4);
                  new Audio(r3).play().catch((e6) => {
                  });
                }
              });
            }
          } else t3.speechEngine;
          else {
            let t4 = new SpeechSynthesisUtterance(e3);
            window.speechSynthesis.speak(t4);
          }
        }
        function Hi(e3) {
          if (e3 && (e3.classList.remove("ML__highlight"), e3.children)) for (let t3 of e3.children) Hi(t3);
        }
        function Wi(e3, t3) {
          var a2;
          e3 && (t3 && (null == (a2 = e3.dataset) ? void 0 : a2.atomId) !== t3 ? (e3.classList.remove("ML__highlight"), e3.children && e3.children.length > 0 && [...e3.children].forEach((e4) => {
            e4 instanceof HTMLElement && Wi(e4, t3);
          })) : (e3.classList.add("ML__highlight"), e3.children && e3.children.length > 0 && [...e3.children].forEach((e4) => {
            e4 instanceof HTMLElement && Wi(e4);
          })));
        }
        function Xi(e3, t3, a2) {
          var r2;
          if (!L()) return;
          if (null != a2 || (a2 = Un().config), "amazon" !== a2.speechEngine) return void (a2.speakHook && a2.speakHook(t3, a2));
          if (!globalThis.AWS) return;
          let i2 = new globalThis.AWS.Polly({ apiVersion: "2016-06-10" }), o2 = { OutputFormat: "json", VoiceId: null != (r2 = a2.speechEngineVoice) ? r2 : "Joanna", Engine: "standard", Text: t3, TextType: "ssml", SpeechMarkTypes: ["ssml"] };
          Un().readAloudElement = e3, i2.synthesizeSpeech(o2, (e4, t4) => {
            if (e4 || null == t4 || !t4.AudioStream) return;
            let a3 = new TextDecoder("utf-8").decode(new Uint8Array(t4.AudioStream));
            Un().readAloudMarks = a3.split("\n").map((e5) => e5 ? JSON.parse(e5) : {}), Un().readAloudTokens = [];
            for (let e5 of Un().readAloudMarks) e5.value && Un().readAloudTokens.push(e5.value);
            Un().readAloudCurrentMark = "", o2.OutputFormat = "mp3", o2.SpeechMarkTypes = [], i2.synthesizeSpeech(o2, (e5, t5) => {
              if (e5 || null == t5 || !t5.AudioStream) return;
              let a4 = new Uint8Array(t5.AudioStream), r3 = new Blob([a4.buffer], { type: "audio/mpeg" }), i3 = URL.createObjectURL(r3), o3 = Un();
              o3.readAloudAudio ? o3.readAloudAudio.pause() : (o3.readAloudAudio = new Audio(), o3.readAloudAudio.addEventListener("ended", () => {
                let e6 = o3.readAloudMathField;
                o3.readAloudStatus = "ended", document.body.dispatchEvent(new Event("read-aloud-status-change", { bubbles: true, composed: true })), e6 ? (Pi(e6), o3.readAloudElement = null, o3.readAloudMathField = null, o3.readAloudTokens = [], o3.readAloudMarks = [], o3.readAloudCurrentMark = "") : Hi(o3.readAloudElement);
              }), o3.readAloudAudio.addEventListener("timeupdate", () => {
                let e6 = "", t6 = 1e3 * o3.readAloudAudio.currentTime + 100;
                for (let a5 of o3.readAloudMarks) a5.time < t6 && (e6 = a5.value);
                o3.readAloudCurrentMark !== e6 && (o3.readAloudCurrentToken = e6, e6 && e6 === o3.readAloudFinalToken ? o3.readAloudAudio.pause() : (o3.readAloudCurrentMark = e6, Wi(o3.readAloudElement, o3.readAloudCurrentMark)));
              })), o3.readAloudAudio.src = i3, o3.readAloudStatus = "playing", document.body.dispatchEvent(new Event("read-aloud-status-change", { bubbles: true, composed: true })), o3.readAloudAudio.play();
            });
          });
        }
        function Ui(e3, t3) {
          var a2, r2, i2;
          let o2 = Ji(e3, Object.keys(e3));
          for (let e4 of Object.keys(t3)) switch (e4) {
            case "scriptDepth":
              if (M(t3.scriptDepth)) o2.scriptDepth = [t3.scriptDepth[0], t3.scriptDepth[1]];
              else {
                if ("number" != typeof t3.scriptDepth) throw new TypeError("Unexpected value for scriptDepth");
                o2.scriptDepth = [t3.scriptDepth, t3.scriptDepth];
              }
              break;
            case "locale":
              "auto" === t3.locale ? o2.locale = L() ? navigator.language.slice(0, 5) : "en" : o2.locale = t3.locale, B.locale = o2.locale;
              break;
            case "strings":
              B.merge(t3.strings), o2.strings = B.strings;
              break;
            case "virtualKeyboardLayout":
              o2.virtualKeyboardLayout = t3.virtualKeyboardLayout;
              break;
            case "virtualKeyboardMode":
              let n2 = t3.virtualKeyboardMode.toLowerCase();
              o2.virtualKeyboardMode = "auto" === n2 ? A() ? "onfocus" : "off" : n2;
              break;
            case "customVirtualKeyboardLayers":
              o2.customVirtualKeyboardLayers = _(_({}, o2.customVirtualKeyboardLayers), t3.customVirtualKeyboardLayers);
              break;
            case "customVirtualKeyboards":
              o2.customVirtualKeyboards = _(_({}, o2.customVirtualKeyboards), t3.customVirtualKeyboards);
              break;
            case "letterShapeStyle":
              "auto" === t3.letterShapeStyle ? B.locale.startsWith("fr") ? o2.letterShapeStyle = "french" : o2.letterShapeStyle = "tex" : o2.letterShapeStyle = t3.letterShapeStyle;
              break;
            case "plonkSound":
              void 0 !== t3.plonkSound && (o2.plonkSound = t3.plonkSound);
              break;
            case "keypressSound":
              null === t3.keypressSound ? o2.keypressSound = { default: null, delete: null, return: null, spacebar: null } : "string" == typeof t3.keypressSound ? o2.keypressSound = { delete: t3.keypressSound, return: t3.keypressSound, spacebar: t3.keypressSound, default: t3.keypressSound } : "object" == typeof t3.keypressSound && "default" in t3.keypressSound && (o2.keypressSound = _({}, t3.keypressSound), o2.keypressSound.delete = null != (a2 = o2.keypressSound.delete) ? a2 : t3.keypressSound.default, o2.keypressSound.return = null != (r2 = o2.keypressSound.return) ? r2 : t3.keypressSound.default, o2.keypressSound.spacebar = null != (i2 = o2.keypressSound.spacebar) ? i2 : t3.keypressSound.default);
              break;
            case "computeEngine":
              o2.computeEngine = t3.computeEngine;
              break;
            case "virtualKeyboardContainer":
              o2.virtualKeyboardContainer = t3.virtualKeyboardContainer;
              break;
            case "macros":
              o2.macros = fe(t3.macros);
              break;
            default:
              M(t3[e4]) ? o2[e4] = [...t3[e4]] : "object" == typeof t3[e4] ? o2[e4] = _({}, t3[e4]) : o2[e4] = t3[e4];
          }
          return o2;
        }
        function Ji(e3, t3) {
          let a2;
          a2 = "string" == typeof t3 ? [t3] : void 0 === t3 ? Object.keys(e3) : t3;
          let r2 = {};
          for (let t4 of a2) null === e3[t4] ? r2[t4] = null : M(e3[t4]) ? r2[t4] = [...e3[t4]] : "object" != typeof e3[t4] || e3[t4] instanceof Element || "computeEngine" === t4 ? r2[t4] = e3[t4] : r2[t4] = _({}, e3[t4]);
          return "string" == typeof t3 ? r2[t3] : r2;
        }
        Ri({ performWithFeedback: (e3, t3) => function(e4, t4) {
          e4.focus(), e4.options.keypressVibration && D() && navigator.vibrate(3), "moveToNextPlaceholder" === (t4 = t4.replace(/-\w/g, (e5) => e5[1].toUpperCase())) || "moveToPreviousPlaceholder" === t4 || "complete" === t4 ? e4.playSound("return") : "deleteBackward" === t4 || "deleteForward" === t4 || "deletePreviousWord" === t4 || "deleteNextWord" === t4 || "deleteToGroupStart" === t4 || "deleteToGroupEnd" === t4 || "deleteToMathFieldStart" === t4 || "deleteToMathFieldEnd" === t4 ? e4.playSound("delete") : e4.playSound("keypress");
          let a2 = e4.executeCommand(t4);
          return e4.scrollIntoView(), a2;
        }(e3, t3) }), Ri({ complete: Ai, nextSuggestion: function(e3) {
          return Li(e3, { atIndex: e3.suggestionIndex + 1 }), false;
        }, previousSuggestion: function(e3) {
          return Li(e3, { atIndex: e3.suggestionIndex - 1 }), false;
        } }, { target: "mathfield", category: "autocomplete" }), Ri({ speak: (e3, t3, a2) => function(e4, t4, a3) {
          var r2, i2;
          a3 = null != a3 ? a3 : { withHighlighting: false };
          let { model: o2 } = e4;
          let n2 = function(e5) {
            let t5 = null;
            switch (e5) {
              case "all":
              default:
                t5 = o2.root;
                break;
              case "selection":
                t5 = o2.getAtoms(o2.selection);
                break;
              case "left":
                t5 = o2.getAtoms(o2.offsetOf(o2.at(o2.position).leftSibling), o2.position);
                break;
              case "right":
                t5 = o2.getAtoms(o2.position, o2.offsetOf(o2.at(o2.position).rightSibling));
                break;
              case "group":
                t5 = o2.getAtoms(o2.getSiblingsRange(o2.position));
                break;
              case "parent": {
                let { parent: e6 } = o2.at(o2.position);
                t5 = e6 && "root" !== e6.type ? e6 : o2.root;
                break;
              }
            }
            return t5;
          }(t4);
          if (null === n2) return null == (i2 = (r2 = e4.options).speakHook) || i2.call(r2, function(e5) {
            let t5 = "";
            switch (e5) {
              case "all":
              case "group":
              default:
                break;
              case "selection":
                t5 = "no selection";
                break;
              case "left":
                t5 = "at start";
                break;
              case "right":
                t5 = "at end";
                break;
              case "parent":
                t5 = "no parent";
            }
            return t5;
          }(t4), e4.options), false;
          let s2 = _({}, e4.options);
          (a3.withHighlighting || "amazon" === s2.speechEngine) && (s2.textToSpeechMarkup = globalThis.sre && "sre" === s2.textToSpeechRules ? "ssml_step" : "ssml"), s2.textToSpeechMarkup || /firefox/i.test(navigator.userAgent) || (s2.textToSpeechMarkup = "ssml");
          let l2 = Tr(n2, s2);
          return L() && a3.withHighlighting ? (Un().readAloudMathField = e4, Pi(e4, { forHighlighting: true }), e4.options.readAloudHook && e4.options.readAloudHook(e4.field, l2, e4.options)) : e4.options.speakHook && e4.options.speakHook(l2, s2), false;
        }(e3, t3, a2) }, { target: "mathfield", category: "speech" });
        var Gi = '<span style="width: 21px; margin-top: 4px;"><svg style="width: 21px;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z"/></svg></span>';
        function Zi() {
          var e3, t3, a2;
          return { readOnly: false, createHTML: (e4) => e4, fontsDirectory: "./fonts", soundsDirectory: "./sounds", computeEngine: void 0, defaultMode: "math", macros: he(), registers: {}, colorMap: F, backgroundColorMap: R, horizontalSpacingScale: 1, letterShapeStyle: B.locale.startsWith("fr") ? "french" : "tex", smartMode: false, smartFence: true, smartSuperscript: true, scriptDepth: [1 / 0, 1 / 0], removeExtraneousParentheses: true, mathModeSpace: "", decimalSeparator: ".", fractionNavigationOrder: "numerator-denominator", placeholderSymbol: "▢", enablePopover: true, locale: B.locale, strings: B.strings, keybindings: ui, inlineShortcuts: tr, inlineShortcutTimeout: 0, virtualKeyboardToggleGlyph: Gi, virtualKeyboardMode: "auto", virtualKeyboards: "all", virtualKeyboardLayout: "auto", customVirtualKeyboardLayers: {}, customVirtualKeyboards: {}, virtualKeyboardTheme: L() && /android|cros/i.test(navigator.userAgent) ? "material" : "apple", keypressVibration: true, keypressSound: null, plonkSound: null, virtualKeyboardToolbar: "default", virtualKeyboardContainer: null != (t3 = null == (e3 = globalThis.document) ? void 0 : e3.body) ? t3 : null, useSharedVirtualKeyboard: false, sharedVirtualKeyboardTargetOrigin: null == (a2 = globalThis.window) ? void 0 : a2.origin, originValidator: "same-origin", textToSpeechRules: "mathlive", textToSpeechMarkup: "", textToSpeechRulesOptions: {}, speechEngine: "local", speechEngineVoice: "Joanna", speechEngineRate: "100%", speakHook: Vi, readAloudHook: Xi, onInlineShortcut: () => "", onExport: lr, value: "" };
        }
        function Yi(e3) {
          return "inline-math" === e3.defaultMode ? "math" : e3.defaultMode;
        }
        var Qi, eo, to = "@keyframes ML__caret-blink{0%,100%{opacity:1}50%{opacity:0}}.ML__caret:after{content:'';border:none;border-radius:2px;border-right:2px solid var(--caret-color, var(--ML__caret-color));margin-right:-2px;position:relative;left:-1px;animation:ML__caret-blink 1.05s step-end forwards infinite}.ML__text-caret:after{content:'';border:none;border-radius:1px;border-right:1px solid var(--caret-color, var(--ML__caret-color));margin-right:-1px;position:relative;left:0;animation:ML__caret-blink 1.05s step-end forwards infinite}.ML__latex-caret:after{content:'_';border:none;margin-right:0;margin-right:calc(-1ex - 2px);position:relative;color:var(--caret-color, var(--ML__caret-color));animation:ML__caret-blink 1.05s step-end forwards infinite}.ML__container{display:flex;flex-flow:row;justify-content:space-between;align-items:flex-end;min-height:39px;width:100%;isolation:isolate;touch-action:none;--ML__selection-background-color:hsl(var(--hue, 212), 97%, 85%);--ML__text-highlight-background-color:hsla(var(--hue, 212), 40%, 50%, .1);--ML__contains-highlight-background-color:hsl(var(--hue, 212), 40%, 95%);--ML__selection-color:currentColor;--ML__caret-color:hsl(var(--hue, 212), 40%, 49%);--ML__smart-fence-color:currentColor;--ML__latex-color:var(--primary, hsl(var(--hue, 212), 40%, 50%));--ML__placeholder-color:hsl(var(--hue, 212), 40%, 49%)}@media (prefers-color-scheme:dark){.ML__container{--ML__selection-background-color:hsl(var(--hue, 212), 25%, 45%);--ML__text-highlight-background-color:hsla(var(--hue, 212), 40%, 50%, .2);--ML__contains-highlight-background-color:hsl(var(--hue, 212), 5%, 34%);--ML__caret-color:hsl(var(--hue, 212), 60%, 69%);--ML__latex-color:var(--primary, hsl(var(--hue, 212), 40%, 50%));--ML__placeholder-color:hsl(var(--hue, 212), 60%, 69%)}}.ML__content{display:flex;align-items:center;align-self:center;position:relative;overflow:hidden;padding:2px 0 2px 1px;width:100%}.ML__virtual-keyboard-toggle{display:none;box-sizing:border-box}.ML__virtual-keyboard-toggle>span{display:flex;align-self:center;align-items:center}.ML__virtual-keyboard-toggle.is-visible{display:flex;align-self:center;align-items:center;flex-shrink:0;flex-direction:column;justify-content:center;width:34px;height:34px;padding:0;margin-right:4px;cursor:pointer;border-radius:8px;border:1px solid transparent;transition:background .2s cubic-bezier(.64, .09, .08, 1);color:var(--primary, hsl(var(--hue, 212), 40%, 50%));fill:currentColor;background:transparent}.ML__virtual-keyboard-toggle.is-visible:hover{background:hsla(0,0%,70%,0.5);color:#333;fill:currentColor;border-radius:8px}.ML__textarea__textarea{display:inline-block;transform:scale(0);resize:none;outline:none;border:none;position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;font-size:1em;font-family:KaTeX_Main}.ML__focused .ML__text{background:var(--highlight-text, var(--ML__text-highlight-background-color))}.ML__smart-fence__close{opacity:var(--smart-fence-opacity, .5);color:var(--smart-fence-color, var(--ML__smart-fence-color))}.ML__focused .ML__selection{background:var(--selection-background-color-focused, var(--selection-background-color, var(--ML__selection-background-color))) !important}.ML__focused .ML__selected,.ML__focused .ML__selected .ML__contains-caret,.ML__focused .ML__selected .ML__smart-fence__close,.ML__focused .ML__selected .ML__placeholder{color:var(--selection-color-focused, var(--selection-color, var(--ML__selection-color))) !important}.ML__selection{box-sizing:border-box;background:var(--selection-background-color, var(--ML__selection-background-color)) !important}.ML__selected,.ML__selected .ML__contains-caret,.ML__selected .ML__smart-fence__close,.ML__selected .ML__placeholder{color:var(--selection-color, var(--ML__selection-color));opacity:1}.ML__contains-caret.ML__close,.ML__contains-caret.ML__open,.ML__contains-caret>.ML__close,.ML__contains-caret>.ML__open,.ML__contains-caret .ML__sqrt-sign,.ML__contains-caret .ML__sqrt-line{color:var(--caret-color, var(--ML__caret-color))}.ML__contains-highlight{background:var(--contains-highlight-backround-color, var(--ML__contains-highlight));box-sizing:border-box}.ML__latex{font-family:'IBM Plex Mono','Source Code Pro',Consolas,'Roboto Mono',Menlo,'Bitstream Vera Sans Mono','DejaVu Sans Mono',Monaco,Courier,monospace;font-weight:400;color:var(--latex-color, var(--ML__latex-color))}.ML__suggestion{opacity:.5}.ML__virtual-keyboard-toggle.is-visible.is-pressed:hover{background:hsl(var(--hue, 212), 25%, 35%);color:#fafafa;fill:currentColor}.ML__virtual-keyboard-toggle:focus{outline:none;border-radius:8px;border:2px solid var(--primary, hsl(var(--hue, 212), 40%, 50%))}.ML__virtual-keyboard-toggle.is-pressed,.ML__virtual-keyboard-toggle.is-active:hover,.ML__virtual-keyboard-toggle.is-active{background:hsl(var(--hue, 212), 25%, 35%);color:#fafafa;fill:currentColor}.ML__tooltip-container{position:relative;transform:scale(0)}.ML__tooltip-container .ML__tooltip-content{position:fixed;display:inline-table;visibility:hidden;z-index:2;width:max-content;max-width:400px;padding:12px 12px;border-radius:8px;background:#616161;color:#fff;box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 1px 5px 0 rgba(0,0,0,0.12),0 3px 1px -2px rgba(0,0,0,0.2);opacity:0;transition:opacity .15s cubic-bezier(.4, 0, 1, 1)}.ML__tooltip-container .ML__tooltip-content .ML__text{white-space:normal}.ML__tooltip-container .ML__tooltip-content .ML__base{display:contents}.ML__tooltip-container:hover .ML__tooltip-content{visibility:visible;opacity:1;font-size:.75em;transform:scale(1) translate(0, 3em)}[data-ML__tooltip]{position:relative}[data-ML__tooltip][data-placement='top']::after{top:inherit;bottom:100%}[data-ML__tooltip]::after{content:attr(data-ML__tooltip);position:absolute;display:none;z-index:2;right:110%;width:max-content;max-width:200px;padding:8px 8px;border-radius:2px;background:#616161;color:#fff;box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 1px 5px 0 rgba(0,0,0,0.12),0 3px 1px -2px rgba(0,0,0,0.2);text-align:center;font-family:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;font-weight:400;font-size:12px;opacity:0;transform:scale(.5);transition:all .15s cubic-bezier(.4, 0, 1, 1)}@media only screen and (max-width:767px){[data-ML__tooltip]::after{padding:8px 16px;font-size:16px}}:not(.tracking) [data-ML__tooltip]:hover{position:relative}:not(.tracking) [data-ML__tooltip]:hover::after{visibility:visible;display:inline-table;opacity:1;transform:scale(1)}[data-ML__tooltip][data-delay]::after{transition-delay:0s}[data-ML__tooltip][data-delay]:hover::after{transition-delay:1s}", ao = null, ro = (null == (eo = null == (Qi = null == globalThis ? void 0 : globalThis.document) ? void 0 : Qi.currentScript) ? void 0 : eo.src) || function() {
          let e3 = String(new Error().stack).replace(/^Error.*\n/, "").split("\n");
          if (0 === e3.length) return "";
          let t3 = e3[1], a2 = t3.match(/http.*\.ts[\?:]/);
          return a2 && (t3 = e3[2]), a2 = t3.match(/(https?:.*):[0-9]+:[0-9]+/), a2 || (a2 = t3.match(/at (.*(\.ts))[\?:]/), a2 || (a2 = t3.match(/at (.*(\.mjs|\.js))[\?:]/))), a2 ? a2[1] : "";
        }();
        async function io(e3) {
          if (/^(?:[a-z+]+:)?\/\//i.test(e3)) return new URL(e3).href;
          if (null === ao) try {
            let e4 = await fetch(ro, { method: "HEAD" });
            200 === e4.status && (ao = e4.url);
          } catch (e4) {
          }
          return new URL(e3, null != ao ? ao : ro).href;
        }
        async function oo(e3) {
          var t3;
          if (!(!L() || document.body.classList.contains("ML__fonts-loading") || null != (t3 = getComputedStyle(document.documentElement).getPropertyValue("--ML__static-fonts")) && t3) && (document.body.classList.remove("ML__fonts-did-not-load"), "fonts" in document)) {
            let t4 = ["KaTeX_Main", "KaTeX_Math", "KaTeX_AMS", "KaTeX_Caligraphic", "KaTeX_Fraktur", "KaTeX_SansSerif", "KaTeX_Script", "KaTeX_Typewriter", "KaTeX_Size1", "KaTeX_Size2", "KaTeX_Size3", "KaTeX_Size4"], a2 = Array.from(document.fonts).map((e4) => e4.family);
            if (t4.every((e4) => a2.includes(e4))) return;
            document.body.classList.add("ML__fonts-loading");
            let r2 = await io(null != e3 ? e3 : "./fonts");
            if (!r2) return document.body.classList.add("ML__fonts-did-not-load"), void document.body.classList.remove("ML__fonts-loading");
            let i2 = [["KaTeX_Main-Regular"], ["KaTeX_Main-BoldItalic", { style: "italic", weight: "bold" }], ["KaTeX_Main-Bold", { weight: "bold" }], ["KaTeX_Main-Italic", { style: "italic" }], ["KaTeX_Math-Italic", { style: "italic" }], ["KaTeX_Math-BoldItalic", { style: "italic", weight: "bold" }], ["KaTeX_AMS-Regular"], ["KaTeX_Caligraphic-Regular"], ["KaTeX_Caligraphic-Bold", { weight: "bold" }], ["KaTeX_Fraktur-Regular"], ["KaTeX_Fraktur-Bold", { weight: "bold" }], ["KaTeX_SansSerif-Regular", { style: "italic" }], ["KaTeX_SansSerif-Bold", { weight: "bold" }], ["KaTeX_SansSerif-Italic", { style: "italic" }], ["KaTeX_Script-Regular"], ["KaTeX_Typewriter-Regular"], ["KaTeX_Size1-Regular"], ["KaTeX_Size2-Regular"], ["KaTeX_Size3-Regular"], ["KaTeX_Size4-Regular"]].map((e4) => function(e5, t5, a3 = {}) {
              return new FontFace(e5, `url(${t5}.woff2) format('woff2')`, a3);
            }(e4[0].replace(/-[a-zA-Z]+$/, ""), r2 + "/" + e4[0], e4[1]));
            try {
              (await Promise.all(i2.map((e4) => {
                try {
                  return e4.load();
                } catch (e5) {
                }
              }))).forEach((e4) => document.fonts.add(e4));
            } catch (e4) {
              document.body.classList.add("ML__fonts-did-not-load");
            }
            document.body.classList.remove("ML__fonts-loading");
          }
        }
        function no(e3) {
          return "number" == typeof e3 && !Number.isNaN(e3);
        }
        function so(e3) {
          return Array.isArray(e3) && 2 === e3.length;
        }
        function lo(e3) {
          return null != e3 && "object" == typeof e3 && "ranges" in e3 && Array.isArray(e3.ranges);
        }
        var co = { "\\ne": "≠", "\\neq": "≠", "−": "-", "-": "-", "\\alpha": "alpha", "\\beta": "beta", "\\gamma": "gamma", "\\delta": "delta", "\\epsilon": "epsilon", "\\varepsilon": "varepsilon", "\\zeta": "zeta", "\\eta": "eta", "\\theta": "theta", "\\vartheta": "vartheta", "\\iota": "iota", "\\kappa": "kappa", "\\lambda": "lambda", "\\mu": "mu", "\\nu": "nu", "\\xi": "xi", "\\pi": "pi", "\\rho": "rho", "\\sigma": "sigma", "\\tau": "tau", "\\upsilon": "upsilon", "\\phi": "phi", "\\varphi": "varphi", "\\chi": "chi", "\\psi": "psi", "\\omega": "omega", "\\Gamma": "Gamma", "\\Delta": "Delta", "\\Theta": "Theta", "\\Lambda": "Lambda", "\\Xi": "Xi", "\\Pi": "Pi", "\\Sigma": "Sigma", "\\Phi": "Phi", "\\Psi": "Psi", "\\Omega": "Omega", "\\exponentialE": "e", "\\imaginaryI": "i", "\\imaginaryJ": "j", "\\!": " ", "\\,": " ", "\\:": " ", "\\;": " ", "\\enskip": " ", "\\enspace": " ", "\\qquad": " ", "\\quad": " " }, uo = { "\\pm": "+-", "\\times": "xx", "\\colon": ":", "\\vert": "|", "\\Vert": "||", "\\mid": "|", "\\lbrace": "{", "\\rbrace": "}", "\\lparen": "(", "\\rparen": ")", "\\langle": "(:", "\\rangle": ":)" };
        function po(e3) {
          var t3, a2, r2, i2, o2, n2, s2, l2, d2, c2, u2, p2, h2;
          if (!e3) return "";
          if (M(e3)) {
            if (0 === e3.length || ("first" === e3[0].type && (e3 = e3.slice(1)), 0 === e3.length)) return "";
            let a3 = "";
            if ("latex" === e3[0].mode) for (let t4 of e3) a3 += po(t4);
            else if ("text" === e3[0].mode) {
              let r3 = 0;
              for (a3 = '"'; "text" === (null == (t3 = e3[r3]) ? void 0 : t3.mode); ) a3 += e3[r3].body ? po(e3[r3].body) : e3[r3].value, r3++;
              a3 += '"' + po(e3.slice(r3));
            } else if ("math" === e3[0].mode) {
              let t4 = 0;
              for (; e3[t4] && "math" === e3[t4].mode; ) a3 += po(e3[t4]), t4++;
              a3 += po(e3.slice(t4));
            }
            return a3.trim();
          }
          if ("text" === e3.mode) return '"' + e3.value + '"';
          let m2, f2 = "", { command: y2 } = e3;
          switch (e3.type) {
            case "first":
              return "";
            case "group":
            case "root":
              f2 = null != (a2 = co[y2]) ? a2 : po(e3.body);
              break;
            case "genfrac":
              {
                let t5 = e3;
                (t5.leftDelim || t5.rightDelim) && (f2 += "." !== t5.leftDelim && t5.leftDelim ? t5.leftDelim : "{:"), t5.hasBarLine ? (f2 += "(", f2 += po(t5.above), f2 += ")/(", f2 += po(t5.below), f2 += ")") : (f2 += "(" + po(t5.above) + "),", f2 += "(" + po(t5.below) + ")"), (t5.leftDelim || t5.rightDelim) && (f2 += "." !== t5.rightDelim && t5.rightDelim ? t5.rightDelim : "{:");
              }
              break;
            case "surd":
              f2 += e3.hasEmptyBranch("above") ? "sqrt(" + po(e3.body) + ")" : "root(" + po(e3.above) + ")(" + po(e3.body) + ")";
              break;
            case "latex":
              f2 = e3.value;
              break;
            case "leftright":
              {
                let t5 = e3;
                f2 += "." !== t5.leftDelim && t5.leftDelim ? t5.leftDelim : "{:", f2 += po(t5.body), f2 += "." !== t5.rightDelim && t5.rightDelim ? t5.rightDelim : ":}";
              }
              break;
            case "sizeddelim":
            case "delim":
            case "overlap":
            case "overunder":
            case "box":
              break;
            case "mord":
              f2 = null != (i2 = null != (r2 = co[y2]) ? r2 : y2) ? i2 : "string" == typeof e3.value ? e3.value : "", f2.startsWith("\\") && (f2 += " "), m2 = y2 ? y2.match(/{?\\char"([\dabcdefABCDEF]*)}?/) : null, m2 ? f2 = String.fromCodePoint(Number.parseInt("0x" + m2[1])) : f2.length > 0 && f2.startsWith("\\") && (f2 = "string" == typeof e3.value ? e3.value.charAt(0) : e3.command);
              break;
            case "mbin":
            case "mrel":
            case "minner":
              f2 = null != (n2 = null != (o2 = co[y2]) ? o2 : uo[y2]) ? n2 : e3.value;
              break;
            case "mopen":
            case "mclose":
              f2 += e3.value;
              break;
            case "mpunct":
              f2 = null != (s2 = uo[y2]) ? s2 : y2;
              break;
            case "mop":
              "​" !== e3.value && (f2 = "", f2 += "\\operatorname" === y2 ? po(e3.body) : null != (l2 = e3.value) ? l2 : y2, f2 += " ");
              break;
            case "array":
              let t4 = e3.array, b2 = e3.environmentName, g2 = null != (d2 = { bmatrix: ["[", "]"], "bmatrix*": ["[", "]"] }[b2]) ? d2 : ["(", ")"], v2 = [];
              for (let e4 of t4) {
                let t5 = [];
                for (let a3 of e4) t5.push(g2[0] + po(a3) + g2[1]);
                v2.push(t5.join(","));
              }
              let k2 = null != (c2 = { bmatrix: ["[", "]"], "bmatrix*": ["[", "]"], cases: ["{", ":}"] }[b2]) ? c2 : ["(", ")"];
              f2 = k2[0] + v2.join(",") + k2[1];
              break;
            case "spacing":
              f2 = null != (u2 = co[y2]) ? u2 : " ";
              break;
            case "enclose":
              f2 = "(" + po(e3.body) + ")";
              break;
            case "space":
              f2 = " ";
              break;
            case "msubsup":
              f2 = "";
              break;
            case "macro":
              f2 = null != (h2 = null != (p2 = co[y2]) ? p2 : uo[y2]) ? h2 : po(e3.body);
          }
          if (!e3.hasEmptyBranch("subscript")) {
            f2 += "_";
            let t4 = po(e3.subscript);
            f2 += t4.length > 1 ? "(" + t4 + ")" : t4;
          }
          if (!e3.hasEmptyBranch("superscript")) {
            f2 += "^";
            let t4 = po(e3.superscript);
            f2 += t4.length > 1 ? "(" + t4 + ")" : t4;
          }
          return f2;
        }
        function ho(e3) {
          let t3;
          if ("body" === e3.treeBranch) t3 = { enclose: "cross out", leftright: "delimiter", surd: "square root", root: "math field", mop: "operator" }[e3.type];
          else if ("genfrac" === e3.parent.type) {
            if ("above" === e3.treeBranch) return "numerator";
            if ("below" === e3.treeBranch) return "denominator";
          } else "surd" === e3.parent.type ? "above" === e3.treeBranch && (t3 = "index") : "superscript" === e3.treeBranch ? t3 = "superscript" : "subscript" === e3.treeBranch && (t3 = "subscript");
          return null != t3 ? t3 : "parent";
        }
        function mo(e3, t3, a2, r2) {
          let i2 = e3.offsetOf(t3);
          if (i2 < a2 || i2 > r2) return false;
          if (!t3.hasChildren) return true;
          let o2 = e3.offsetOf(t3.firstChild);
          if (o2 >= a2 && o2 <= r2) {
            let i3 = e3.offsetOf(t3.lastChild);
            if (i3 >= a2 && i3 <= r2) return true;
          }
          return false;
        }
        function fo(e3, t3, a2) {
          if (null == t3 || !t3.hasChildren) return false;
          let [r2, i2] = a2, o2 = e3.offsetOf(t3.firstChild), n2 = e3.offsetOf(t3.lastChild);
          return o2 >= r2 && o2 <= i2 && n2 >= o2 && n2 <= i2;
        }
        function yo(e3, t3) {
          let a2 = e3.at(e3.position);
          for (; a2 && !(Array.isArray(a2.treeBranch) && a2.parent instanceof fa); ) a2 = a2.parent;
          if (Array.isArray(null == a2 ? void 0 : a2.treeBranch) && (null == a2 ? void 0 : a2.parent) instanceof fa) {
            let r2, i2 = a2.parent;
            switch (t3) {
              case "after row":
                i2.addRowAfter(a2.treeBranch[0]), r2 = e3.offsetOf(i2.getCell(a2.treeBranch[0] + 1, 0)[0]);
                break;
              case "after column":
                if (i2.maxColumns <= i2.colCount) return void e3.announce("plonk");
                i2.addColumnAfter(a2.treeBranch[1]), r2 = e3.offsetOf(i2.getCell(a2.treeBranch[0], a2.treeBranch[1] + 1)[0]);
                break;
              case "before row":
                i2.addRowBefore(a2.treeBranch[0]), r2 = e3.offsetOf(i2.getCell(a2.treeBranch[0] - 1, 0)[0]);
                break;
              case "before column":
                if (i2.maxColumns <= i2.colCount) return void e3.announce("plonk");
                i2.addColumnBefore(a2.treeBranch[1]), r2 = e3.offsetOf(i2.getCell(a2.treeBranch[0], a2.treeBranch[1] - 1)[0]);
            }
            e3.setSelection(r2, r2 + 1);
          }
        }
        function bo(e3) {
          return !!xi(e3, { inputType: "insertText" }) && (yo(e3, "after row"), wi(e3, { inputType: "insertText" }), true);
        }
        function go(e3) {
          return !!xi(e3, { inputType: "insertText" }) && (yo(e3, "after column"), wi(e3, { inputType: "insertText" }), true);
        }
        function vo(e3, t3) {
          let a2 = e3.at(e3.position);
          for (; a2 && !(Array.isArray(a2.treeBranch) && a2.parent instanceof fa); ) a2 = a2.parent;
          if (Array.isArray(null == a2 ? void 0 : a2.treeBranch) && (null == a2 ? void 0 : a2.parent) instanceof fa) {
            let r2, i2 = a2.parent, o2 = a2.treeBranch;
            switch (t3) {
              case "row":
                if (i2.rowCount > 1) {
                  i2.removeRow(o2[0]);
                  let t4 = i2.getCell(Math.max(0, o2[0] - 1), o2[1]);
                  r2 = e3.offsetOf(t4[t4.length - 1]);
                }
                break;
              case "column":
                if (i2.colCount > i2.minColumns) {
                  i2.removeColumn(o2[1]);
                  let t4 = i2.getCell(o2[0], Math.max(0, o2[1] - 1));
                  r2 = e3.offsetOf(t4[t4.length - 1]);
                }
            }
            r2 && e3.setPositionHandlingPlaceholder(r2);
          }
        }
        function ko(e3, t3, a2, r2) {
          var i2, o2, n2, s2, l2, d2;
          let c2 = a2.parent;
          if ("genfrac" === (null == c2 ? void 0 : c2.type)) {
            let t4 = e3.offsetOf(a2.leftSibling);
            return c2.removeChild(a2), c2.hasEmptyBranch("above") && c2.hasEmptyBranch("below") ? (t4 = e3.offsetOf(c2.leftSibling), c2.parent.removeChild(c2), e3.announce("delete", void 0, [c2]), e3.position = t4, true) : (e3.announce("delete", void 0, [a2]), e3.position = t4, true);
          }
          if (c2 && a2 instanceof ra) {
            let i3 = !r2 && "forward" === t3 || "body" === r2 && "backward" === t3, o3 = i3 ? e3.offsetOf(a2.firstChild) : e3.offsetOf(a2.lastChild);
            return i3 ? "?" !== a2.rightDelim && "." !== a2.rightDelim ? (a2.leftDelim = ".", a2.isDirty = true) : (c2.addChildrenAfter(a2.removeBranch("body"), a2), c2.removeChild(a2), o3--) : "?" !== a2.leftDelim && "." !== a2.leftDelim ? (a2.rightDelim = ".", a2.isDirty = true) : (c2.addChildrenAfter(a2.removeBranch("body"), a2), c2.removeChild(a2), o3--), e3.position = o3, true;
          }
          if (c2 && "surd" === a2.type) {
            if ("forward" === t3 && !r2 || "backward" === t3 && "body" === r2) {
              let t4 = a2.leftSibling;
              a2.hasChildren && c2.addChildrenAfter(a2.removeBranch("body"), a2), c2.removeChild(a2), e3.position = e3.offsetOf(t4);
            } else "forward" === t3 && "body" === r2 ? e3.position = e3.offsetOf(a2) : r2 || "backward" !== t3 ? "above" === r2 && (a2.hasEmptyBranch("above") && a2.removeBranch("above"), e3.position = "backward" === t3 ? e3.offsetOf(a2.leftSibling) : e3.offsetOf(a2.body[0])) : a2.hasChildren ? e3.position = e3.offsetOf(a2.lastChild) : (e3.position = Math.max(0, e3.offsetOf(a2) - 1), c2.removeChild(a2));
            return true;
          }
          if (c2 && ("box" === a2.type || "enclose" === a2.type)) {
            let i3 = r2 && "backward" === t3 || !r2 && "forward" === t3 ? a2.leftSibling : a2.lastChild;
            return c2.addChildrenAfter(a2.removeBranch("body"), a2), c2.removeChild(a2), e3.position = e3.offsetOf(i3), true;
          }
          if ("genfrac" === a2.type || "overunder" === a2.type) {
            if (!r2) return !("overunder" === a2.type && a2.hasEmptyBranch("body") || "genfrac" === a2.type && a2.hasEmptyBranch("below") && a2.hasEmptyBranch("above") || (e3.position = e3.offsetOf("forward" === t3 ? a2.firstChild : a2.lastChild), 0));
            let i3 = "numerator-denominator" === a2.context.fractionNavigationOrder ? "above" : "below", o3 = "above" === i3 ? "below" : "above";
            if (c2 && ("forward" === t3 && r2 === i3 || "backward" === t3 && r2 === o3)) {
              let t4 = a2.removeBranch(i3), r3 = a2.removeBranch(o3);
              return c2.addChildrenAfter([...t4, ...r3], a2), c2.removeChild(a2), e3.position = e3.offsetOf(t4.length > 0 ? t4[t4.length - 1] : r3[0]), true;
            }
            return "backward" === t3 ? (e3.position = e3.offsetOf(a2.leftSibling), true) : (e3.position = e3.offsetOf(a2), true);
          }
          if (a2.isExtensibleSymbol || "msubsup" === a2.type) {
            if (!r2 && "forward" === t3) return false;
            if (!r2) {
              if (a2.subscript || a2.superscript) {
                let r3 = "forward" === t3 ? null != (n2 = null == (i2 = a2.superscript) ? void 0 : i2[0]) ? n2 : null == (o2 = a2.subscript) ? void 0 : o2[0] : null != (d2 = null == (s2 = a2.subscript) ? void 0 : s2[0].lastSibling) ? d2 : null == (l2 = a2.superscript) ? void 0 : l2[0].lastSibling;
                return r3 && (e3.position = e3.offsetOf(r3)), true;
              }
              return false;
            }
            if (r2 && a2.hasEmptyBranch(r2) && a2.removeBranch(r2), !a2.hasChildren) {
              let r3 = "forward" === t3 ? e3.offsetOf(a2) : Math.max(0, e3.offsetOf(a2) - 1);
              return a2.parent.removeChild(a2), e3.position = r3, true;
            }
            if ("superscript" === r2) if ("backward" === t3) {
              let t4 = e3.offsetOf(a2.firstChild) - 1;
              e3.position = t4;
            } else a2.subscript ? e3.position = e3.offsetOf(a2.subscript[0]) : e3.position = e3.offsetOf(a2);
            else "subscript" === r2 && ("backward" === t3 && a2.superscript ? e3.position = e3.offsetOf(a2.superscript[0].lastSibling) : e3.position = "backward" === t3 ? e3.offsetOf(a2.firstChild) - 1 : e3.offsetOf(a2));
            return true;
          }
          return false;
        }
        function xo(e3, t3, a2) {
          let r2 = e3.getAtoms(t3);
          if (r2.length > 0 && r2[0].parent) {
            let a3 = r2[0].parent.firstChild;
            "first" === a3.type && (a3 = a3.rightSibling);
            let i2 = r2[r2.length - 1].parent.lastChild, o2 = r2[0];
            "first" === o2.type && (o2 = o2.rightSibling);
            let n2 = r2[r2.length - 1];
            if (o2 === a3 && n2 === i2) {
              let a4 = r2[0].parent;
              "root" !== a4.type && (t3 = [e3.offsetOf(a4.leftSibling), e3.offsetOf(a4.rightSibling)]);
            }
          }
          return e3.deferNotifications({ content: true, selection: true, type: a2 }, () => e3.deleteAtoms(t3));
        }
        function wo(e3, t3) {
          let a2, r2 = e3.at(t3);
          if (r2) {
            a2 = r2.mode;
            let e4 = r2.parent;
            for (; !a2 && e4; ) e4 && (a2 = e4.mode), e4 = e4.parent;
          }
          return a2;
        }
        function _o(e3, t3) {
          !e3 || !t3 || (M(e3) ? e3.forEach((e4) => _o(e4, t3)) : "object" == typeof e3 && !e3.style.color && !e3.style.backgroundColor && !e3.style.fontFamily && !e3.style.fontShape && !e3.style.fontSeries && !e3.style.fontSize && !e3.style.variant && !e3.style.variantStyle && (e3.applyStyle(t3), _o(e3.body, t3), _o(e3.above, t3), _o(e3.below, t3), _o(e3.subscript, t3), _o(e3.superscript, t3)));
        }
        function So(e3, t3, a2, r2) {
          function i2(e4, t4) {
            for (let a3 of o2) if (a3.style[e4] !== t4) return false;
            return true;
          }
          if ((t3 = e3.normalizeRange(t3))[0] === t3[1]) return false;
          let o2 = e3.getAtoms(t3, { includeChildren: true });
          "toggle" === r2.operation && (a2.color && i2("color", a2.color) && (a2.color = "none", a2.verbatimColor = void 0), a2.backgroundColor && i2("backgroundColor", a2.backgroundColor) && (a2.backgroundColor = "none", a2.verbatimBackgroundColor = void 0), a2.fontFamily && i2("fontFamily", a2.fontFamily) && (a2.fontFamily = "none"), a2.fontSeries && i2("fontSeries", a2.fontSeries) && (a2.fontSeries = "auto"), a2.fontShape && i2("fontShape", a2.fontShape) && (a2.fontShape = "auto"), a2.fontSize && i2("fontSize", a2.fontSize) && (a2.fontSize = 5));
          for (let e4 of o2) e4.applyStyle(a2);
          return true;
        }
        function Mo(e3, t3, a2) {
          if ("text" !== e3.at(t3).mode) return t3;
          let r2, i2 = "backward" === a2 ? -1 : 1;
          if (Q.test(e3.at(t3).value)) {
            let a3, o2 = t3;
            do {
              a3 = "text" === e3.at(o2).mode && Q.test(e3.at(o2).value), o2 += i2;
            } while (e3.at(o2) && a3);
            r2 = e3.at(o2) ? o2 - 2 * i2 : o2 - i2;
          } else if (/\s/.test(e3.at(t3).value)) {
            let a3 = t3;
            for (; e3.at(a3) && "text" === e3.at(a3).mode && /\s/.test(e3.at(a3).value); ) a3 += i2;
            if (e3.at(a3)) {
              let t4 = true;
              do {
                t4 = "text" === e3.at(a3).mode && !/\s/.test(e3.at(a3).value), a3 += i2;
              } while (e3.at(a3) && t4);
              r2 = e3.at(a3) ? a3 - 2 * i2 : a3 - i2;
            } else r2 = a3 - i2;
          } else {
            let a3 = t3;
            for (; e3.at(a3) && "text" === e3.at(a3).mode && !/\s/.test(e3.at(a3).value); ) a3 += i2;
            r2 = e3.at(a3) ? a3 : a3 - i2;
            let o2 = true;
            for (; e3.at(a3) && o2; ) o2 = "text" === e3.at(a3).mode && /\s/.test(e3.at(a3).value), o2 && (r2 = a3), a3 += i2;
            r2 = e3.at(a3) ? a3 - 2 * i2 : a3 - i2;
          }
          return r2 - (i2 > 0 ? 0 : 1);
        }
        function Lo(e3, t3, a2) {
          var r2, i2, o2, n2, s2, l2, d2;
          let c2 = e3.position;
          null != (r2 = null == a2 ? void 0 : a2.extend) && r2 || e3.collapseSelection(t3);
          let u2 = e3.at(e3.position);
          if ("forward" === t3 && ("msubsup" === u2.type ? (u2 = u2.rightSibling, u2 || (u2 = e3.at(e3.position + 1))) : u2 = e3.at(e3.position + 1)), !u2) return e3.announce("plonk"), false;
          let p2 = e3.offsetOf(u2);
          if (u2 instanceof la) p2 = Mo(e3, p2, t3);
          else if (u2 instanceof Aa) if (u2.isSuggestion) for (; u2 && u2 instanceof Aa; ) u2.isSuggestion = false, p2 = e3.offsetOf(u2), u2 = u2.rightSibling;
          else if ("forward" === t3) {
            if (u2 = u2.rightSibling, !(u2 && u2 instanceof Aa)) return e3.announce("plonk"), false;
            for (; u2 && u2 instanceof Aa && /[a-zA-Z\*]/.test(u2.value); ) p2 = e3.offsetOf(u2), u2 = u2.rightSibling;
          } else {
            if (u2 = u2.leftSibling, !(u2 && u2 instanceof Aa)) return e3.announce("plonk"), false;
            for (; u2 && u2 instanceof Aa && /[a-zA-Z\*]/.test(u2.value); ) p2 = e3.offsetOf(u2), u2 = u2.leftSibling;
          }
          else if ("forward" === t3 && "mopen" === u2.type) {
            let t4 = 0;
            do {
              "mopen" === u2.type ? t4 += 1 : "mclose" === u2.type && (t4 -= 1), u2 = u2.rightSibling;
            } while (!u2.isLastSibling && 0 !== t4);
            p2 = e3.offsetOf(u2.leftSibling);
          } else if ("backward" === t3 && "mclose" === u2.type) {
            let t4 = 0;
            do {
              "mopen" === u2.type ? t4 += 1 : "mclose" === u2.type && (t4 -= 1), u2 = u2.leftSibling;
            } while (!u2.isFirstSibling && 0 !== t4);
            p2 = e3.offsetOf(u2);
          } else if ("backward" === t3) if ("first" === u2.type) for (; p2 > 0 && "first" === u2.type; ) p2 -= 1, u2 = e3.at(p2);
          else {
            let t4 = u2.type;
            "msubsup" === u2.type && (p2 = e3.offsetOf(e3.at(p2).leftSibling)), p2 -= 1;
            let a3 = null == (i2 = e3.at(p2)) ? void 0 : i2.type;
            for (; p2 >= 0 && a3 === t4; ) "msubsup" === (null == (o2 = e3.at(p2)) ? void 0 : o2.type) ? p2 = e3.offsetOf(e3.at(p2).leftSibling) : p2 -= 1, a3 = e3.at(p2).type;
          }
          else {
            let { type: t4 } = u2, a3 = null == (n2 = e3.at(p2)) ? void 0 : n2.type, { lastOffset: r3 } = e3;
            for (; p2 <= r3 && (a3 === t4 || "msubsup" === a3); ) {
              for (; "msubsup" === (null == (s2 = e3.at(p2).rightSibling) ? void 0 : s2.type); ) p2 = e3.offsetOf(e3.at(p2).rightSibling);
              p2 += 1, a3 = null == (l2 = e3.at(p2)) ? void 0 : l2.type;
            }
            p2 -= 1;
          }
          if (null != (d2 = null == a2 ? void 0 : a2.extend) && d2) {
            if (!e3.setSelection(e3.anchor, p2)) return e3.announce("plonk"), false;
          } else {
            if (p2 === e3.position) return e3.announce("plonk"), false;
            e3.position = p2;
          }
          return e3.announce("move", c2), true;
        }
        function Co(e3, t3, a2) {
          var r2, i2, o2, n2, s2, l2, d2, c2;
          if (a2 = null != a2 ? a2 : { extend: false }, "forward" !== t3) {
            let [t4, a3] = Si(e3);
            void 0 !== t4 && void 0 !== a3 && e3.deleteAtoms([t4, a3]);
          }
          if ("upward" === t3) return function(e4, t4) {
            var a3, r3, i3, o3;
            let n3 = null != (a3 = null == t4 ? void 0 : t4.extend) && a3;
            n3 || e4.collapseSelection("backward");
            let s3 = e4.at(e4.position), l3 = s3;
            for (; l3 && "below" !== l3.treeBranch && !(Array.isArray(l3.treeBranch) && l3.parent instanceof fa); ) l3 = l3.parent;
            if (Array.isArray(null == l3 ? void 0 : l3.treeBranch) && l3.parent instanceof fa) {
              let t5 = l3.parent, a4 = Math.max(0, l3.treeBranch[0] - 1);
              Ao(e4, s3, t5.array[a4][l3.treeBranch[1]], n3, "up");
            } else {
              if (!l3) {
                let t5 = true;
                return e4.suppressChangeNotifications || (t5 = null == (o3 = null == (i3 = e4.mathfield.host) ? void 0 : i3.dispatchEvent(new CustomEvent("move-out", { detail: { direction: "upward" }, cancelable: true, bubbles: true, composed: true }))) || o3), e4.announce(t5 ? "plonk" : "line"), t5;
              }
              Ao(e4, s3, null != (r3 = l3.parent.branch("above")) ? r3 : l3.parent.createBranch("above"), n3, "up");
            }
            return true;
          }(e3, a2);
          if ("downward" === t3) return function(e4, t4) {
            var a3, r3, i3, o3;
            let n3 = null != (a3 = null == t4 ? void 0 : t4.extend) && a3;
            n3 || e4.collapseSelection("forward");
            let s3 = e4.at(e4.position), l3 = s3;
            for (; l3 && "above" !== l3.treeBranch && !(Array.isArray(l3.treeBranch) && l3.parent instanceof fa); ) l3 = l3.parent;
            if (Array.isArray(null == l3 ? void 0 : l3.treeBranch) && l3.parent instanceof fa) {
              let t5 = l3.parent, a4 = Math.min(t5.array.length - 1, l3.treeBranch[0] + 1);
              Ao(e4, s3, t5.array[a4][l3.treeBranch[1]], n3, "down");
            } else {
              if (!l3) {
                let t5 = true;
                return e4.suppressChangeNotifications || (t5 = null == (o3 = null == (i3 = e4.mathfield.host) ? void 0 : i3.dispatchEvent(new CustomEvent("move-out", { detail: { direction: "downward" }, cancelable: true, bubbles: true, composed: true }))) || o3), e4.announce(t5 ? "plonk" : "line"), t5;
              }
              Ao(e4, s3, null != (r3 = l3.parent.branch("below")) ? r3 : l3.parent.createBranch("below"), n3, "down");
            }
            return true;
          }(e3, a2);
          let u2 = e3.position;
          if (a2.extend) return e3.extendSelection(t3);
          if (e3.selectionIsPlaceholder) return e3.collapseSelection(t3), Co(e3, t3);
          if (!e3.collapseSelection(t3)) {
            let u3 = e3.position + ("forward" === t3 ? 1 : -1), p2 = e3.at(u3);
            if (u3 >= 0 && u3 <= e3.lastOffset) {
              if ("forward" === t3) if (p2.inCaptureSelection) {
                for (; !p2.captureSelection; ) p2 = p2.parent;
                u3 = e3.offsetOf(p2);
              } else if (!p2.isFirstSibling && p2.isLastSibling && null != (r2 = p2.parent) && r2.skipBoundary) {
                if (u3 + 1 !== e3.lastOffset) return e3.position = u3, Co(e3, "forward", a2);
                u3 += 1;
              } else null != (i2 = p2.parent) && i2.skipBoundary && null != (o2 = p2.rightSibling) && o2.isLastSibling ? u3 += 2 : null != (n2 = p2.parent) && n2.skipBoundary && "first" === p2.type ? u3 += 1 : p2 instanceof Aa && p2.isSuggestion && (p2.isSuggestion = false);
              else if ("backward" === t3) if (null != (s2 = p2.parent) && s2.inCaptureSelection) {
                for (; !p2.captureSelection; ) p2 = p2.parent;
                u3 = Math.max(0, e3.offsetOf(p2.leftSibling));
              } else (p2.skipBoundary || null != (l2 = p2.parent) && l2.skipBoundary && "first" === p2.type) && (u3 = Math.max(0, e3.position - 2));
            }
            if (u3 < 0 || u3 > e3.lastOffset) {
              let a3 = true;
              return e3.suppressChangeNotifications || (a3 = null == (c2 = null == (d2 = e3.mathfield.host) ? void 0 : d2.dispatchEvent(new CustomEvent("move-out", { detail: { direction: t3 }, cancelable: true, bubbles: true, composed: true }))) || c2), a3 && e3.announce("plonk"), a3;
            }
            e3.setPositionHandlingPlaceholder(u3);
          }
          return e3.announce("move", u2), true;
        }
        function Ao(e3, t3, a2, r2, i2) {
          let o2 = Ir(e3.mathfield.getHTMLElement(t3)).right, n2 = e3.offsetOf(function(e4, t4, a3) {
            let r3 = 1 / 0, i3 = 0;
            for (; i3 < t4.length; i3++) {
              let o3 = Ir(e4.getHTMLElement(t4[i3])).right, n3 = Math.abs(a3 - o3);
              if (!(n3 <= r3)) break;
              r3 = n3;
            }
            return t4[i3 - 1];
          }(e3.mathfield, a2, o2));
          if (r2) {
            let t4, [a3, r3] = e3.selection.ranges[0];
            t4 = n2 < ("up" === i2 ? a3 : r3) ? { ranges: [[n2, r3]], direction: "backward" } : { ranges: [[a3, n2]], direction: "forward" }, e3.setSelection(t4);
          } else e3.setPositionHandlingPlaceholder(n2);
          e3.announce(`move ${i2}`);
        }
        function Do(e3) {
          let t3 = e3.position, a2 = e3.at(t3).parent;
          return a2 && "root" !== a2.type ? (e3.position = e3.offsetOf(a2), e3.announce("move", t3), true) : (e3.announce("plonk"), false);
        }
        function To(e3) {
          var t3;
          if (e3.collapseSelection(), function(e4) {
            let t4 = 0, a3 = e4.at(e4.position), r2 = false;
            for (; a3; ) (!a3.hasEmptyBranch("superscript") || !a3.hasEmptyBranch("subscript")) && (t4 += 1), a3.hasEmptyBranch("superscript") ? a3.hasEmptyBranch("subscript") || (r2 = false) : r2 = true, a3 = a3.parent;
            return r2 ? t4 : 0;
          }(e3) >= e3.mathfield.options.scriptDepth[1]) return e3.announce("plonk"), false;
          let a2 = e3.at(e3.position);
          return void 0 === a2.subsupPlacement && ("msubsup" !== (null == (t3 = a2.rightSibling) ? void 0 : t3.type) && a2.parent.addChildAfter(new ia(e3.mathfield, { style: a2.computedStyle }), a2), a2 = a2.rightSibling), a2.createBranch("superscript"), e3.setSelection(e3.getSiblingsRange(e3.offsetOf(a2.superscript[0]))), true;
        }
        function zo(e3) {
          var t3;
          if (e3.collapseSelection(), function(e4) {
            let t4 = 0, a3 = e4.at(e4.position), r2 = false;
            for (; a3; ) (!a3.hasEmptyBranch("superscript") || !a3.hasEmptyBranch("subscript")) && (t4 += 1), a3.hasEmptyBranch("superscript") ? a3.hasEmptyBranch("subscript") || (r2 = true) : r2 = false, a3 = a3.parent;
            return r2 ? t4 : 0;
          }(e3) >= e3.mathfield.options.scriptDepth[0]) return e3.announce("plonk"), false;
          let a2 = e3.at(e3.position);
          return void 0 === a2.subsupPlacement && ("msubsup" !== (null == (t3 = e3.at(e3.position + 1)) ? void 0 : t3.type) && a2.parent.addChildAfter(new ia(e3.mathfield, { style: e3.at(e3.position).computedStyle }), a2), a2 = e3.at(e3.position + 1)), a2.createBranch("subscript"), e3.setSelection(e3.getSiblingsRange(e3.offsetOf(a2.subscript[0]))), true;
        }
        function Bo(e3, t3, a2 = true) {
          var r2, i2;
          let o2 = "forward" === t3 ? 1 : -1;
          "placeholder" === e3.at(e3.anchor).type && Co(e3, t3);
          let n2 = e3.getAllAtoms(Math.max(e3.position + o2, 0));
          "backward" === t3 && n2.reverse();
          let s2 = n2.filter((e4) => "placeholder" === e4.type || e4.treeDepth > 2 && e4.isFirstSibling && e4.isLastSibling);
          if (0 === s2.length) {
            if (!a2 || null != (i2 = null == (r2 = e3.mathfield.host) ? void 0 : r2.dispatchEvent(new CustomEvent("focus-out", { detail: { direction: t3 }, cancelable: true, bubbles: true, composed: true }))) && !i2) return e3.announce("plonk"), false;
            let n3 = function() {
              function e4(e5) {
                return !(!function(e6) {
                  return !(e6.disabled || "hidden" === e6.type && "INPUT" === e6.tagName.toUpperCase() || function(e7) {
                    if (!L() || e7 === document.activeElement || e7.contains(document.activeElement)) return false;
                    if ("hidden" === getComputedStyle(e7).visibility) return true;
                    let t5 = e7.getBoundingClientRect();
                    if (0 === t5.width || 0 === t5.height) return true;
                    for (; e7; ) {
                      if ("none" === getComputedStyle(e7).display) return true;
                      e7 = e7.parentElement;
                    }
                    return false;
                  }(e6));
                }(e5) || function(e6) {
                  return "INPUT" === e6.tagName.toUpperCase() && "radio" === e6.type && !function(e7) {
                    var t5;
                    if (!e7.name) return true;
                    let a3 = function(e8, t6) {
                      for (let a4 of e8) if (a4.checked && a4.form === t6) return a4;
                      return null;
                    }((null != (t5 = e7.form) ? t5 : e7.ownerDocument).querySelectorAll('input[type="radio"][name="' + e7.name + '"]'), e7.form);
                    return !a3 || a3 === e7;
                  }(e6);
                }(e5) || t4(e5) < 0);
              }
              function t4(e5) {
                var t5;
                let a3 = Number.parseInt(null != (t5 = e5.getAttribute("tabindex")) ? t5 : "NaN", 10);
                return Number.isNaN(a3) ? "true" === e5.contentEditable || ("AUDIO" === e5.nodeName || "VIDEO" === e5.nodeName) && null === e5.getAttribute("tabindex") ? 0 : e5.tabIndex : a3;
              }
              return L() ? function(a3) {
                let r3 = [], i3 = [];
                return [...a3.querySelectorAll('input, select, textarea, a[href], button,\n        [tabindex], audio[controls], video[controls],\n        [contenteditable]:not([contenteditable="false"]), details>summary')].filter(e4).forEach((e5, a4) => {
                  let o3 = t4(e5);
                  0 === o3 ? r3.push(e5) : i3.push({ documentOrder: a4, tabIndex: o3, node: e5 });
                }), i3.sort((e5, t5) => e5.tabIndex === t5.tabIndex ? e5.documentOrder - t5.documentOrder : e5.tabIndex - t5.tabIndex).map((e5) => e5.node).concat(r3);
              }(document.body) : [];
            }();
            if (!document.activeElement || 1 === n3.length) return e3.announce("plonk"), false;
            let s3 = n3.indexOf(document.activeElement) + o2;
            return !!(document.activeElement instanceof jn && l2(document.activeElement, t3, o2) || (s3 < 0 && (s3 = n3.length - 1), s3 >= n3.length && (s3 = 0), n3[s3] instanceof jn && l2(n3[s3], t3, o2))) || (n3[s3].focus(), 0 !== s3 || (e3.announce("plonk"), false));
          }
          function l2(e4, t4, a3) {
            var r3, i3, o3;
            let n3 = [...null != (i3 = null == (r3 = e4.shadowRoot) ? void 0 : r3.querySelectorAll("math-field")) ? i3 : []];
            if (n3.length) {
              let r4 = null == (o3 = e4.shadowRoot) ? void 0 : o3.activeElement, i4 = n3.indexOf(r4), s3 = i4 + a3;
              if (i4 < 0 && "backward" === t4 && (s3 = n3.length - 1), s3 >= 0 && s3 < n3.length) return n3[s3].focus(), true;
            }
            return false;
          }
          let d2 = e3.position, c2 = e3.offsetOf(s2[0]);
          return "placeholder" === s2[0].type ? e3.setSelection(c2 - 1, c2) : e3.position = c2, e3.announce("move", d2), true;
        }
        function Ko(e3) {
          var t3, a2, r2, i2, o2, n2;
          if ("text" === wo(e3, e3.position)) {
            let t4 = Math.min(e3.anchor, e3.position), a3 = Math.max(e3.anchor, e3.position), r3 = false;
            for (; !r3 && t4 > 0; ) {
              let a4 = e3.at(t4);
              "text" === a4.mode && Q.test(a4.value) ? t4 -= 1 : r3 = true;
            }
            for (r3 = false; !r3 && a3 <= e3.lastOffset; ) {
              let t5 = e3.at(a3);
              "text" === t5.mode && Q.test(t5.value) ? a3 += 1 : r3 = true;
            }
            if (r3 && (a3 -= 1), t4 >= a3) return e3.setSelection(a3 - 1, a3), true;
            e3.setSelection(t4, a3);
          } else {
            let s2 = e3.at(e3.position);
            if (s2.isDigit()) {
              let r3 = Math.min(e3.anchor, e3.position), i3 = Math.max(e3.anchor, e3.position);
              for (; null != (t3 = e3.at(r3)) && t3.isDigit(); ) r3 -= 1;
              for (; null != (a2 = e3.at(i3)) && a2.isDigit(); ) i3 += 1;
              e3.setSelection(r3, i3 - 1);
            } else if (s2.style.variant || s2.style.variantStyle) {
              let t4 = Math.min(e3.anchor, e3.position), a3 = Math.max(e3.anchor, e3.position), l2 = null == (r2 = e3.at(t4)) ? void 0 : r2.style;
              for (; l2 && l2.variant === s2.style.variant && l2.variantStyle === s2.style.variantStyle; ) t4 -= 1, l2 = null == (i2 = e3.at(t4)) ? void 0 : i2.style;
              for (l2 = null == (o2 = e3.at(a3)) ? void 0 : o2.style; l2 && l2.variant === s2.style.variant && l2.variantStyle === s2.style.variantStyle; ) a3 += 1, l2 = null == (n2 = e3.at(a3)) ? void 0 : n2.style;
              e3.setSelection(t4, a3 - 1);
            } else e3.setSelection(e3.offsetOf(s2.firstSibling), e3.offsetOf(s2.lastSibling));
          }
          return true;
        }
        Ri({ addRowAfter: bo, addColumnAfter: go, addRowBefore: function(e3) {
          return !!xi(e3, { inputType: "insertText" }) && (yo(e3, "before row"), wi(e3, { inputType: "insertText" }), true);
        }, addColumnBefore: function(e3) {
          return !!xi(e3, { inputType: "insertText" }) && (yo(e3, "before column"), wi(e3, { inputType: "insertText" }), true);
        }, removeRow: function(e3) {
          return !!xi(e3, { inputType: "deleteContent" }) && (vo(e3, "row"), wi(e3, { inputType: "deleteContent" }), true);
        }, removeColumn: function(e3) {
          return !!xi(e3, { inputType: "deleteContent" }) && (vo(e3, "column"), wi(e3, { inputType: "deleteContent" }), true);
        } }, { target: "model", category: "array-edit" }), Ri({ deleteAll: (e3) => xi(e3, { inputType: "deleteContent" }) && xo(e3, [0, -1], "deleteContent"), deleteForward: (e3) => function(e4) {
          return !!xi(e4, { inputType: "deleteContentForward" }) && (e4.selectionIsCollapsed ? e4.deferNotifications({ content: true, selection: true, type: "deleteContentForward" }, () => {
            var t3, a2;
            let r2 = e4.at(e4.position).rightSibling;
            if (r2 && ko(e4, "forward", r2)) return;
            if (r2) {
              if (e4.at(e4.position).isLastSibling && ko(e4, "forward", r2.parent, r2.treeBranch)) return;
            } else {
              if (r2 = e4.at(e4.position), r2.isLastSibling && ko(e4, "forward", r2.parent, r2.treeBranch)) return;
              r2 = null;
            }
            if (e4.position === e4.lastOffset || !r2) return void e4.announce("plonk");
            r2.parent.removeChild(r2);
            let i2 = null == (t3 = e4.at(e4.position)) ? void 0 : t3.rightSibling;
            for (; "msubsup" === (null == i2 ? void 0 : i2.type); ) i2.parent.removeChild(i2), i2 = null == (a2 = e4.at(e4.position)) ? void 0 : a2.rightSibling;
            e4.announce("delete", void 0, [r2]);
          }) : xo(e4, Qa(e4.selection), "deleteContentForward"));
        }(e3), deleteBackward: (e3) => function(e4) {
          return !!xi(e4, { inputType: "deleteContentBackward" }) && (e4.selectionIsCollapsed ? e4.deferNotifications({ content: true, selection: true, type: "deleteContentBackward" }, () => {
            let t3 = e4.at(e4.position);
            if (!t3 || !ko(e4, "backward", t3)) {
              if (null != t3 && t3.isFirstSibling) {
                if (ko(e4, "backward", t3.parent, t3.treeBranch)) return;
                t3 = null;
              }
              if (!t3) return void e4.announce("plonk");
              e4.position = e4.offsetOf(t3.leftSibling), t3.parent.removeChild(t3), e4.announce("delete", void 0, [t3]);
            }
          }) : xo(e4, Qa(e4.selection), "deleteContentBackward"));
        }(e3), deleteNextWord: (e3) => xi(e3, { inputType: "deleteWordForward" }) && xo(e3, [e3.anchor, Mo(e3, e3.position, "forward")], "deleteWordForward"), deletePreviousWord: (e3) => xi(e3, { inputType: "deleteWordBackward" }) && xo(e3, [e3.anchor, Mo(e3, e3.position, "backward")], "deleteWordBackward"), deleteToGroupStart: (e3) => xi(e3, { inputType: "deleteSoftLineBackward" }) && xo(e3, [e3.anchor, e3.offsetOf(e3.at(e3.position).firstSibling)], "deleteSoftLineBackward"), deleteToGroupEnd: (e3) => xi(e3, { inputType: "deleteSoftLineForward" }) && xo(e3, [e3.anchor, e3.offsetOf(e3.at(e3.position).lastSibling)], "deleteSoftLineForward"), deleteToMathFieldStart: (e3) => xi(e3, { inputType: "deleteHardLineBackward" }) && xo(e3, [e3.anchor, 0], "deleteHardLineBackward"), deleteToMathFieldEnd: (e3) => xi(e3, { inputType: "deleteHardLineForward" }) && xo(e3, [e3.anchor, -1], "deleteHardLineForward") }, { target: "model", category: "delete" }), Ri({ moveToOpposite: (e3) => {
          let t3 = e3.at(e3.position), { parent: a2 } = t3;
          if (!a2) return e3.announce("plonk"), false;
          let r2, i2 = t3.treeBranch;
          return "string" == typeof i2 && (r2 = { superscript: "subscript", subscript: "superscript", above: "below", below: "above" }[i2]), r2 ? (a2.branch(r2) || a2.createBranch(r2), e3.setSelection(e3.getBranchRange(e3.offsetOf(a2), r2))) : t3.subsupPlacement ? zo(e3) : To(e3);
        }, moveBeforeParent: (e3) => {
          let { parent: t3 } = e3.at(e3.position);
          return t3 ? (e3.position = e3.offsetOf(t3), true) : (e3.announce("plonk"), false);
        }, moveAfterParent: (e3) => Do(e3), moveToNextPlaceholder: (e3) => Bo(e3, "forward"), moveToPreviousPlaceholder: (e3) => Bo(e3, "backward"), moveToNextChar: (e3) => Co(e3, "forward"), moveToPreviousChar: (e3) => Co(e3, "backward"), moveUp: (e3) => Co(e3, "upward"), moveDown: (e3) => Co(e3, "downward"), moveToNextWord: (e3) => Lo(e3, "forward"), moveToPreviousWord: (e3) => Lo(e3, "backward"), moveToGroupStart: (e3) => {
          let t3 = e3.offsetOf(e3.at(e3.position).firstSibling);
          return t3 === e3.position ? (e3.announce("plonk"), false) : (e3.position = t3, true);
        }, moveToGroupEnd: (e3) => {
          let t3 = e3.offsetOf(e3.at(e3.position).lastSibling);
          return t3 === e3.position ? (e3.announce("plonk"), false) : (e3.position = t3, true);
        }, moveToMathfieldStart: (e3) => 0 === e3.position ? (e3.announce("plonk"), false) : (e3.position = 0, true), moveToMathfieldEnd: (e3) => e3.position === e3.lastOffset ? (e3.announce("plonk"), false) : (e3.position = e3.lastOffset, true), moveToSuperscript: (e3) => To(e3), moveToSubscript: (e3) => zo(e3) }, { target: "model", category: "selection-anchor" }), Ri({ selectGroup: (e3) => {
          let t3 = Ko(e3);
          return t3 || e3.announce("plonk"), t3;
        }, selectAll: (e3) => e3.setSelection(0, e3.lastOffset), extendSelectionForward: (e3) => {
          let t3 = e3.extendSelection("forward");
          return t3 || e3.announce("plonk"), t3;
        }, extendSelectionBackward: (e3) => {
          let t3 = e3.extendSelection("backward");
          return t3 || e3.announce("plonk"), t3;
        }, extendToNextWord: (e3) => Lo(e3, "forward", { extend: true }), extendToPreviousWord: (e3) => Lo(e3, "backward", { extend: true }), extendSelectionUpward: (e3) => Co(e3, "upward", { extend: true }), extendSelectionDownward: (e3) => Co(e3, "downward", { extend: true }), extendToNextBoundary: (e3) => Lo(e3, "forward", { extend: true }), extendToPreviousBoundary: (e3) => Lo(e3, "backward", { extend: true }), extendToGroupStart: (e3) => {
          let t3 = e3.setSelection(e3.anchor, e3.offsetOf(e3.at(e3.position).firstSibling));
          return t3 || e3.announce("plonk"), t3;
        }, extendToGroupEnd: (e3) => {
          let t3 = e3.setSelection(e3.anchor, e3.offsetOf(e3.at(e3.position).lastSibling));
          return t3 || e3.announce("plonk"), t3;
        }, extendToMathFieldStart: (e3) => {
          let t3 = e3.setSelection(e3.anchor, 0);
          return t3 || e3.announce("plonk"), t3;
        }, extendToMathFieldEnd: (e3) => {
          let t3 = e3.setSelection(e3.anchor, e3.lastOffset);
          return t3 || e3.announce("plonk"), t3;
        } }, { target: "model", category: "selection-extend" });
        var Eo = class {
          constructor(e3) {
            var t3, a2;
            this.preventOverlayClose = null != (t3 = null == e3 ? void 0 : e3.preventOverlayClose) && t3, this.translucent = null != (a2 = null == e3 ? void 0 : e3.translucent) && a2, this.state = "closed";
          }
          get element() {
            if (this._element) return this._element;
            let e3 = document.createElement("div");
            return e3.setAttribute("role", "presentation"), e3.style.position = "fixed", e3.style.contain = "content", e3.style.top = "0", e3.style.left = "0", e3.style.right = "0", e3.style.bottom = "0", e3.style.zIndex = "var(--scrim-zindex, 10099)", e3.style.outline = "none", this.translucent ? (e3.style.background = "rgba(255, 255, 255, .2)", e3.style.backdropFilter = "contrast(40%)") : e3.style.background = "transparent", this._element = e3, e3;
          }
          open(e3) {
            var t3;
            if ("closed" !== this.state) return;
            this.state = "opening", this.savedActiveElement = $o();
            let { element: a2 } = this;
            (null != (t3 = null == e3 ? void 0 : e3.root) ? t3 : document.body).appendChild(a2), a2.addEventListener("click", this), document.addEventListener("touchmove", this, false), document.addEventListener("scroll", this, false);
            let r2 = window.innerWidth - document.documentElement.clientWidth;
            this.savedMarginRight = document.body.style.marginRight, this.savedOverflow = document.body.style.overflow, document.body.style.overflow = "hidden";
            let i2 = Number.parseFloat(getComputedStyle(document.body).marginRight);
            document.body.style.marginRight = `${i2 + r2}px`, null != e3 && e3.child && a2.append(e3.child), this.state = "open";
          }
          close() {
            var e3, t3, a2, r2;
            if ("open" !== this.state) return;
            this.state = "closing", "function" == typeof this.onClose && this.onClose();
            let { element: i2 } = this;
            i2.removeEventListener("click", this), document.removeEventListener("touchmove", this, false), document.removeEventListener("scroll", this, false), i2.remove(), document.body.style.overflow = null != (e3 = this.savedOverflow) ? e3 : "", document.body.style.marginRight = null != (t3 = this.savedMarginRight) ? t3 : "", $o() !== this.savedActiveElement && (null == (r2 = null == (a2 = this.savedActiveElement) ? void 0 : a2.focus) || r2.call(a2)), i2.innerHTML = "", this.state = "closed";
          }
          handleEvent(e3) {
            this.preventOverlayClose || (e3.target === this._element && "click" === e3.type || e3.target === document && ("touchmove" === e3.type || "scroll" === e3.type)) && (this.close(), e3.preventDefault(), e3.stopPropagation());
          }
        };
        function $o() {
          var e3;
          let t3 = document.activeElement;
          for (; null != (e3 = null == t3 ? void 0 : t3.shadowRoot) && e3.activeElement; ) t3 = t3.shadowRoot.activeElement;
          return t3;
        }
        var qo = /* @__PURE__ */ new Set(["Backquote", "Digit0", "Digit1", "Digit2", "Digit3", "Digit4", "Digit5", "Digit6", "Digit7", "Digit8", "Digit9", "Minus", "Equal", "IntlYen", "KeyQ", "KeyW", "KeyE", "KeyR", "KeyT", "KeyY", "KeyU", "KeyI", "KeyO", "KeyP", "BracketLeft", "BracketRight", "Backslash", "KeyA", "KeyS", "KeyD", "KeyF", "KeyG", "KeyH", "KeyJ", "KeyK", "KeyL", "Semicolon", "Quote", "IntlBackslash", "KeyZ", "KeyX", "KeyC", "KeyV", "KeyB", "KeyN", "KeyM", "Comma", "Period", "Slash", "IntlRo", "Space", "Numpad0", "Numpad1", "Numpad2", "Numpad3", "Numpad4", "Numpad5", "Numpad6", "Numpad7", "Numpad8", "Numpad9", "NumpadAdd", "NumpadComma", "NumpadDecimal", "NumpadDivide", "NumpadEqual", "NumpadHash", "NumpadMultiply", "NumpadParenLeft", "NumpadParenRight", "NumpadStar", "NumpadSubstract"]);
        function Oo(e3) {
          return !e3.ctrlKey && !e3.metaKey && "Dead" !== e3.key && ("" === e3.code || qo.has(e3.code));
        }
        function Po(e3) {
          e3 = function(e4) {
            if (e4.code) return e4;
            let t4 = Object.entries(ci().mapping), a2 = false, r2 = false, i2 = "";
            for (let o2 = 0; o2 < 4; o2++) {
              for (let [n2, s2] of t4) if (s2[o2] === e4.key) {
                i2 = n2, 3 === o2 ? (a2 = true, r2 = true) : 2 === o2 ? a2 = true : 1 === o2 && (r2 = true);
                break;
              }
              if (i2) break;
            }
            return new KeyboardEvent(e4.type, S(_({}, e4), { altKey: a2, shiftKey: r2, code: i2 }));
          }(e3);
          let t3 = [];
          return e3.ctrlKey && t3.push("ctrl"), e3.metaKey && t3.push("meta"), e3.altKey && t3.push("alt"), e3.shiftKey && t3.push("shift"), 0 === t3.length ? "[" + e3.code + "]" : (t3.push("[" + e3.code + "]"), t3.join("+"));
        }
        function No() {
          var e3;
          if (!L()) return null;
          let t3 = document.activeElement;
          for (; null != (e3 = null == t3 ? void 0 : t3.shadowRoot) && e3.activeElement; ) t3 = t3.shadowRoot.activeElement;
          return t3;
        }
        function Fo(e3) {
          var t3;
          if (!e3) return "";
          let a2;
          return "Unidentified" === e3.key && e3.target && (a2 = e3.target.value), a2 = null != (t3 = null != a2 ? a2 : e3.key) ? t3 : e3.code, /^(Dead|Return|Enter|Tab|Escape|Delete|PageUp|PageDown|Home|End|Help|ArrowLeft|ArrowRight|ArrowUp|ArrowDown)$/.test(a2) && (a2 = ""), a2;
        }
        var Ro, Io = ".ML__keyboard{--hue:206;--keyboard-background:rgba(209,213,217,0.97);--keyboard-text:#000;--keyboard-text-active:var(--primary, hsl(var(--hue), 40%, 50%));--keyboard-background-border:#ddd;--keycap-background:white;--keycap-background-active:#e5e5e5;--keycap-background-border:#e5e6e9;--keycap-background-border-bottom:#8d8f92;--keycap-text:#000;--keycap-text-active:#fff;--keycap-secondary-text:#000;--keycap-modifier-background:#b9bdc7;--keycap-modifier-border:#c5c9d0;--keycap-modifier-border-bottom:#989da6;--keyboard-alternate-background:#fff;--keyboard-alternate-background-active:var(--primary, hsl(var(--hue), 40%, 50%));--keyboard-alternate-text:var(--keycap-text, #000);--keyboard-alternate-text-active:#fff;--keyboard-alternate-key-length:70px;--keyboard-alternate-key-font-size:30px;--keyboard-alternate-key-aside-font-size:12px;--keyboard-height:276px;--keycap-height:52px;--keycap-font-size:20px;--keycap-small-font-size:calc(var(--keycap-font-size) * .8);--keycap-extra-small-font-size:calc(var(--keycap-font-size) / 1.42);--keycap-tt-font-size:calc(var(--keycap-font-size) * 1.5);position:fixed;top:0;left:0;height:100%;width:100%;z-index:var(--keyboard-zindex, 105);pointer-events:none}.ML__keyboard.is-visible .ML__keyboard--plate{transform:translate(0, calc(-1 * var(--keyboard-height, 276px)));opacity:1;visibility:visible;transition-timing-function:cubic-bezier(.4, 0, 1, 1)}.ML__keyboard.alternate-keys{visibility:hidden;max-width:286px;background-color:var(--keyboard-alternate-background);text-align:center;border-radius:6px;position:fixed;bottom:auto;top:0;box-sizing:content-box;transform:none;z-index:calc(var(--keyboard-zindex, 105) + 1);display:flex;flex-direction:row;justify-content:center;align-content:center;box-shadow:0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);transition:none}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys{max-width:320px}}.ML__keyboard.alternate-keys.is-visible{visibility:visible}.ML__keyboard.alternate-keys.compact{--keyboard-alternate-key-length:50px;--keyboard-alternate-key-font-size:24px;--keyboard-alternate-key-aside-font-size:10px}.ML__keyboard.alternate-keys ul{list-style:none;margin:3px;padding:0;display:flex;flex-flow:row wrap-reverse;justify-content:center}.ML__keyboard.alternate-keys ul>li{display:flex;flex-flow:column;align-items:center;justify-content:center;font-size:var(--keyboard-alternate-key-font-size);height:var(--keyboard-alternate-key-length);width:var(--keyboard-alternate-key-length);box-sizing:border-box;margin:0;background:transparent;border:1px solid transparent;border-radius:5px;pointer-events:all;cursor:pointer;color:var(--keyboard-alternate-text);fill:currentColor}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys ul>li{font-size:24px;height:50px;width:50px}}.ML__keyboard.alternate-keys ul>li .ML__mathlive{pointer-events:none}.ML__keyboard.alternate-keys ul>li:hover,.ML__keyboard.alternate-keys ul>li.is-pressed,.ML__keyboard.alternate-keys ul>li.is-active{background:var(--keyboard-alternate-background-active);color:var(--keyboard-alternate-text-active)}.ML__keyboard.alternate-keys ul>li.small{font-size:var(--keycap-small-font-size, 16px)}.ML__keyboard.alternate-keys ul>li.small-button{width:42px;height:42px;margin:2px;background:#fbfbfb}.ML__keyboard.alternate-keys ul>li.small-button:hover{background:var(--keyboard-alternate-background-active)}.ML__keyboard.alternate-keys ul>li.box>div,.ML__keyboard.alternate-keys ul>li.box>span{border:1px dashed rgba(0,0,0,0.24)}.ML__keyboard.alternate-keys ul>li .warning{min-height:60px;min-width:60px;background:#cd0030;color:white;padding:5px;display:flex;align-items:center;justify-content:center;border-radius:5px}.ML__keyboard.alternate-keys ul>li .warning:hover,.ML__keyboard.alternate-keys ul>li .warning.is-pressed,.ML__keyboard.alternate-keys ul>li .warning.is-active{background:red}.ML__keyboard.alternate-keys ul>li .warning svg.svg-glyph{width:50px;height:50px}.ML__keyboard.alternate-keys ul>li aside{font-size:var(--keyboard-alternate-key-aside-font-size);line-height:12px;opacity:.78;padding-top:2px}.ML__keyboard .ML__keyboard--plate{position:absolute;left:0;bottom:calc(-1 * var(--keyboard-height, 276px));width:100%;padding-top:5px;transform:translate(0, 0);opacity:0;visibility:hidden;transition:.28s cubic-bezier(0, 0, .2, 1);transition-property:transform, opacity;backdrop-filter:grayscale(50%);background-color:var(--keyboard-background);border:1px solid var(--keyboard-background-border);font-family:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;font-size:16px;font-weight:400;margin:0;text-shadow:none;box-sizing:border-box;touch-action:none;-webkit-user-select:none;user-select:none;box-shadow:0 3px 6px rgba(0,0,0,0.16),0 3px 6px rgba(0,0,0,0.23);pointer-events:all}.ML__keyboard .ML__keyboard--plate .tex{font-family:'KaTeX_Math',KaTeX_Main,'Cambria Math','Asana Math',OpenSymbol,Symbola,STIX,Times,serif !important}.ML__keyboard .ML__keyboard--plate .tex-math{font-family:KaTeX_Math,'Cambria Math','Asana Math',OpenSymbol,Symbola,STIX,Times,serif !important}.ML__keyboard .ML__keyboard--plate .tt{font-family:'IBM Plex Mono','Source Code Pro',Consolas,'Roboto Mono',Menlo,'Bitstream Vera Sans Mono','DejaVu Sans Mono',Monaco,Courier,monospace !important;font-size:var(--keycap-tt-font-size, 30px);font-weight:400}.ML__keyboard .ML__keyboard--plate>div.keyboard-layer{display:none;outline:none}.ML__keyboard .ML__keyboard--plate>div.keyboard-layer.is-visible{display:flex;flex-flow:column}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar{align-self:center;display:flex;flex-flow:row;justify-content:space-between;min-width:736px}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar{min-width:556px}}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar{width:365px;min-width:365px;max-width:100vw}}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar svg{height:20px;width:20px}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar svg{height:13px;width:17px}}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>.left{position:relative;display:flex;justify-content:flex-start;flex-flow:row}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>.right{display:flex;justify-content:flex-end;flex-flow:row}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div{display:flex;align-items:baseline;justify-content:center;color:var(--keyboard-text);fill:currentColor;background:0;font-size:110%;padding:4px 15px;cursor:pointer;min-height:0;border:none;padding-left:10px;padding-right:10px;margin-top:7px;margin-bottom:6px;margin-left:4px;margin-right:4px;box-shadow:none;border-bottom:2px solid transparent}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.disabled svg,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.disabled:hover svg,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.disabled.is-pressed svg{color:var(--keyboard-text);opacity:.2}@media only screen and (max-width:414px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div{font-size:100%;padding:0 6px 0 0}}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div{padding-left:4px;padding-right:4px;font-size:90%}}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div:hover,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div:active,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.is-pressed,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.is-active{color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.selected{color:var(--keyboard-text-active);border-bottom:2px solid var(--keyboard-text-active);margin-bottom:8px;padding-bottom:0}.ML__keyboard .ML__keyboard--plate [data-tooltip]{position:relative}.ML__keyboard .ML__keyboard--plate [data-tooltip]::after{position:absolute;display:inline-table;content:attr(data-tooltip);top:inherit;bottom:100%;width:max-content;max-width:200px;padding:8px 8px;background:#616161;color:#fff;text-align:center;z-index:2;box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 1px 5px 0 rgba(0,0,0,0.12),0 3px 1px -2px rgba(0,0,0,0.2);border-radius:2px;font-family:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;font-weight:400;font-size:12px;transition:all .15s cubic-bezier(.4, 0, 1, 1) 1s;opacity:0;transform:scale(.5)}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate [data-tooltip]::after{padding:8px 16px;font-size:16px}}.ML__keyboard .ML__keyboard--plate [data-tooltip]:hover{position:relative}.ML__keyboard .ML__keyboard--plate [data-tooltip]:hover::after{opacity:1;transform:scale(1)}.ML__keyboard .ML__keyboard--plate div .rows{border:0;border-collapse:separate;clear:both;margin:auto;display:flex;flex-flow:column;align-items:center}.ML__keyboard .ML__keyboard--plate div .rows>ul{list-style:none;height:40px;margin:0 0 3px 0;padding:0}.ML__keyboard .ML__keyboard--plate div .rows>ul>li{display:flex;flex-flow:column;align-items:center;justify-content:center;width:34px;margin-right:2px;height:40px;box-sizing:border-box;padding:8px 0;vertical-align:top;text-align:center;float:left;color:var(--keycap-text);fill:currentColor;font-size:var(--keycap-font-size, 20px);background:var(--keycap-background);border:1px solid var(--keycap-background-border);border-bottom-color:var(--keycap-background-border-bottom);border-radius:5px;cursor:pointer;position:relative;overflow:hidden;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.ML__keyboard .ML__keyboard--plate div .rows>ul>li .ML__mathlive{pointer-events:none}.ML__keyboard .ML__keyboard--plate div .rows>ul>li:last-child{margin-right:0}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.small{font-size:var(--keycap-small-font-size, 16px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.tt{color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.bottom{justify-content:flex-end}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.left{align-items:flex-start;padding-left:4px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.right{align-items:flex-end;padding-right:4px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li svg.svg-glyph{width:20px;height:20px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning{height:25px;width:25px;min-height:25px;min-width:25px;background:#cd0030;color:white;border-radius:100%;padding:5px;display:flex;align-items:center;justify-content:center;margin-bottom:-2px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning svg.svg-glyph{width:16px;height:16px}@media only screen and (max-width:768px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning{height:16px;width:16px;min-height:16px;min-width:16px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning svg.svg-glyph{width:14px;height:14px}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w0{width:0}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w5{width:16px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w15{width:52px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w20{width:70px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w50{width:178px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.separator{background:transparent;border:none;pointer-events:none}@media only screen and (max-width:560px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.if-wide{display:none}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.tex-math{font-size:25px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.is-pressed{background:var(--keycap-background-active);color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.keycap.is-active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.is-active{transform:translateY(calc(-0.2 * var(--keycap-height, 52px))) scale(1.4, 1.4);z-index:calc(var(--keyboard-zindex, 105) - 5);color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.is-active{background:var(--keyboard-text-active);color:var(--keycap-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.font-glyph,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.font-glyph{font-size:18px}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.font-glyph,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.font-glyph{font-size:16px}}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.fnbutton{font-size:12px}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.bigfnbutton{font-size:var(--keycap-extra-small-font-size, 14px)}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.bigfnbutton{font-size:calc(var(--keycap-extra-small-font-size, 14px) / 1.55)}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action{background-color:var(--keycap-modifier-background);border-color:var(--keycap-modifier-border);border-bottom-color:var(--keycap-modifier-border-bottom);font-size:65%;font-weight:100}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected{color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected:hover,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected:hover,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected:active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected:active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected.is-pressed,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected.is-pressed,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected.is-active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected.is-active{color:white}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.keycap.w50{font-size:80%;padding-top:10px;font-weight:100}.ML__keyboard .ML__keyboard--plate div .rows>ul>li small{color:var(--keycap-secondary-text)}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li small{font-size:9px}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li aside{font-family:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;font-size:10px;line-height:10px;color:var(--keycap-secondary-text)}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li aside{display:none}}@media only screen and (max-width:414px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li{width:calc(10vw - 2px);margin-right:2px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:calc(5vw -2px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:calc(15vw - 2px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:calc(20vw - 2px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:calc(50vw - 2px)}}@media only screen and (min-width:415px) and (max-width:768px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li{width:37px;margin-right:3px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:17px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:57px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:77px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:197px}}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard .ML__keyboard--plate div .rows>ul{height:var(--keycap-height, 52px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li{height:var(--keycap-height, 52px);width:51px;margin-right:4px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:23.5px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:78.5px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:106px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:271px}}@media only screen and (min-width:1025px){.ML__keyboard .ML__keyboard--plate div .rows>ul{height:var(--keycap-height, 52px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li{height:var(--keycap-height, 52px);width:66px;margin-right:6px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.modifier,.ML__keyboard .ML__keyboard--plate div .rows>ul>.action{font-size:80%}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:30px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:102px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:138px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:354px}}@media (prefers-color-scheme:dark){body:not([theme='light']) .ML__keyboard{--hue:206;--keyboard-background:hsl(206,19%,38%);--keyboard-background:hsl(212,19%,38%);--keyboard-background:hsl(var(--hue), 19%, 38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue), 100%, 60%);--keyboard-background-border:hsl(0,0%,20%);--keycap-background:hsl(var(--hue), 25%, 39%);--keycap-background-active:hsl(var(--hue), 35%, 42%);--keycap-background-border:hsl(var(--hue), 25%, 35%);--keycap-background-border-bottom:hsl(206,35%,40%);--keycap-text:hsl(0,0%,81.6%);--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue), 35%, 40%);--keycap-modifier-border:hsl(var(--hue), 35%, 35%);--keycap-modifier-border-bottom:hsl(var(--hue), 35%, 42%);--keyboard-alternate-background:hsl(var(--hue), 19%, 38%)}}body[theme='dark'] .ML__keyboard{--hue:206;--keyboard-background:hsl(var(--hue), 19%, 38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue), 100%, 60%);--keyboard-background-border:hsl(0,0%,20%);--keycap-background:hsl(var(--hue), 25%, 39%);--keycap-background-active:hsl(var(--hue), 35%, 42%);--keycap-background-border:hsl(var(--hue), 25%, 35%);--keycap-background-border-bottom:hsl(206,35%,40%);--keycap-text:hsl(0,0%,81.6%);--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue), 35%, 40%);--keycap-modifier-border:hsl(var(--hue), 35%, 35%);--keycap-modifier-border-bottom:hsl(var(--hue), 35%, 42%);--keyboard-alternate-background:hsl(var(--hue), 19%, 38%)}div.ML__keyboard.material{--keyboard-background:rgba(209,213,217,0.9);--keyboard-background-border:#ddd;--keycap-background:transparent;--keycap-background-active:#cccfd1;--keycap-background-border:transparent;--keyboard-alternate-background:#efefef;--keyboard-alternate-text:#000;font-family:Roboto,sans-serif}div.ML__keyboard.material.alternate-keys{background:var(--keyboard-alternate-background);border:1px solid transparent;border-radius:5px;box-shadow:0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22)}div.ML__keyboard.material.alternate-keys ul li:hover,div.ML__keyboard.material.alternate-keys ul li:active,div.ML__keyboard.material.alternate-keys ul li.is-active,div.ML__keyboard.material.alternate-keys ul li.is-pressed{border:1px solid transparent;background:#5f97fc;color:white;fill:currentColor}div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar>div>div{font-size:16px}div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div div:hover,div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div div:active,div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div.div.is-active,div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div.div.is-pressed{color:#5f97fc;fill:currentColor}div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar>div>.selected{color:#5f97fc;fill:currentColor;border-bottom:2px solid #5f97fc;margin-bottom:8px;padding-bottom:0}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap{background:transparent;border:1px solid transparent;border-radius:5px;color:var(--keycap-text);fill:currentColor;transition:none}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap.tt{color:#5f97fc}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=' ']{margin-top:10px;margin-bottom:10px;height:20px;background:#e0e0e0}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=' ']:hover,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=' ']:active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=' '].is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=' '].is-pressed{background:#d0d0d0;box-shadow:none;transform:none}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']):hover{border:1px solid transparent;background:var(--keycap-background-active);box-shadow:none}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']).is-pressed,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']).is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']):active{background:var(--keyboard-alternate-background);color:var(--keyboard-alternate-text);box-shadow:0 10px 20px rgba(0,0,0,0.19),0 6px 6px rgba(0,0,0,0.23)}@media only screen and (max-width:767px){div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']).is-pressed,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']).is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']):active{box-shadow:0 10px 20px rgba(0,0,0,0.19),0 6px 6px rgba(0,0,0,0.23);font-size:10px;vertical-align:top;width:19.5px;margin-right:10px;margin-left:10px;transform:translateY(-10px) scale(2, 2);transition:none;justify-content:flex-start;padding:2px 0 0 0;z-index:calc(var(--ML_keyboard-zindex, 105) - 5)}}@media only screen and (max-width:414px){div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']).is-pressed,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']).is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=' ']):active{width:16.5px}}@media only screen and (max-width:767px){div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:last-child:active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:last-child.is-active{margin-right:0;margin-left:14px}}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action{background:transparent;border:0;color:#869096;fill:currentColor;font-size:16px;transition:none}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier.selected,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action.selected{color:#5f97fc;border-radius:0;border-bottom:2px solid #5f97fc}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier:hover,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action:hover,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier.is-active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action.is-active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier.is-pressed,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action.is-pressed{border:0;color:var(--keycap-text);background:var(--keycap-background-active);box-shadow:none}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton{background:transparent;border:0}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton.selected,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton.selected,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton.selected,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton.selected{color:#5f97fc;fill:currentColor;border-radius:0;border-bottom:2px solid #5f97fc}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton:hover,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton:hover,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton.is-pressed,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton.is-pressed,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton.is-active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton.is-active{border:0;color:#5f97fc;fill:currentColor;background:var(--keycap-background-active);box-shadow:none}@media (prefers-color-scheme:dark){body:not([theme='light']) div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue), 19%, 18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:hsl(0,0%,20%);--keycap-background:hsl(var(--hue), 25%, 39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:hsl(0,0%,81.6%);--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue), 35%, 40%);--keycap-modifier-border:hsl(var(--hue), 35%, 35%);--keycap-modifier-border-bottom:hsl(var(--hue), 35%, 42%);--keyboard-alternate-background:hsl(var(--hue), 8%, 2%);--keyboard-alternate-background-active:hsl(var(--hue), 35%, 42%);--keyboard-alternate-text:hsl(0,0%,82%)}}body[theme='dark'] div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue), 19%, 18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:hsl(0,0%,20%);--keycap-background:hsl(var(--hue), 25%, 39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:hsl(0,0%,81.6%);--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue), 35%, 40%);--keycap-modifier-border:hsl(var(--hue), 35%, 35%);--keycap-modifier-border-bottom:hsl(var(--hue), 35%, 42%);--keyboard-alternate-background:hsl(var(--hue), 8%, 2%);--keyboard-alternate-background-active:hsl(var(--hue), 35%, 42%);--keyboard-alternate-text:hsl(0,0%,82%)}";
        function jo(e3, t3, a2) {
          let r2, i2;
          a2.default && (e3.dataset.command = JSON.stringify(a2.default)), a2.alt && (e3.dataset.commandAlt = JSON.stringify(a2.alt)), a2.shift && (e3.dataset.commandShift = JSON.stringify(a2.shift)), a2.pressed && (e3.dataset.commandPressed = JSON.stringify(a2.pressed)), a2.pressAndHoldStart && (e3.dataset.commandPressAndHoldStart = JSON.stringify(a2.pressAndHoldStart)), a2.pressAndHoldEnd && (e3.dataset.commandPressAndHoldEnd = JSON.stringify(a2.pressAndHoldEnd)), zr(e3, "pointerdown:passive", (a3) => {
            if (1 !== a3.buttons) return;
            a3.stopPropagation(), r2 = Date.now(), e3.classList.add("is-pressed");
            let o2 = a3.target;
            o2.hasPointerCapture(a3.pointerId) && o2.releasePointerCapture(a3.pointerId);
            let n2 = e3.getAttribute("data-command-pressed");
            n2 && t3(JSON.parse(n2));
            let s2 = e3.getAttribute("data-command-press-and-hold-start");
            s2 && (i2 && clearTimeout(i2), i2 = setTimeout(() => {
              e3.classList.contains("is-pressed") && (e3.classList.remove("is-pressed"), t3(JSON.parse(s2)));
            }, 300));
          }), zr(e3, "pointerenter", (t4) => {
            let a3 = t4.target;
            a3.hasPointerCapture(t4.pointerId) && a3.releasePointerCapture(t4.pointerId), 1 === t4.buttons && e3.classList.add("is-pressed");
          }), zr(e3, "pointercancel", () => e3.classList.remove("is-pressed")), zr(e3, "pointerleave", () => e3.classList.remove("is-pressed")), zr(e3, "pointerup", (a3) => {
            let i3 = e3.classList.contains("is-pressed");
            e3.classList.remove("is-pressed"), e3.classList.add("is-active"), setTimeout(() => e3.classList.remove("is-active"), 150);
            let o2 = Date.now() >= r2 && !i3 ? e3.getAttribute("data-command-press-and-hold-end") : null;
            !o2 && a3.altKey && (o2 = e3.getAttribute("data-command-alt")), !o2 && a3.shiftKey && (o2 = e3.getAttribute("data-command-shift")), o2 || (o2 = e3.getAttribute("data-command")), o2 && t3(JSON.parse(o2)), a3.stopPropagation(), a3.preventDefault();
          });
        }
        function Vo() {
          var e3;
          C();
          let t3 = document.querySelector("#mathlive-alternate-keys-panel");
          return t3 && (t3.classList.remove("is-visible"), t3.innerHTML = ""), null == (e3 = Eo.scrim) || e3.close(), false;
        }
        var Ho = { numeric: { tooltip: "keyboard.tooltip.numeric", layer: "math", label: "123", layers: ["math"] }, roman: { tooltip: "keyboard.tooltip.roman", layer: "lower-roman", label: "ABC", layers: ["lower-roman", "upper-roman"] }, greek: { tooltip: "keyboard.tooltip.greek", layer: "lower-greek", label: "&alpha;&beta;&gamma;", classes: "tex-math", layers: ["lower-greek", "upper-greek"] }, functions: { tooltip: "keyboard.tooltip.functions", layer: "functions", label: "<i>f</i>&thinsp;()", classes: "tex", layers: ["functions"] }, symbols: { tooltip: "keyboard.tooltip.symbols", layer: "symbols", label: "&infin;≠∈", classes: "tex", layers: ["symbols"] } }, Wo = { "\\varphi ": ["&Phi;", "\\Phi "], "\\varsigma ": ["&Sigma;", "\\Sigma "], "\\epsilon ": ["&#x0190;", '\\char"0190'], "\\rho ": ["&#x3A1", '\\char"3A1'], "\\tau ": ["&#x3A4;", '\\char"3A4'], "\\upsilon ": ["&Upsilon;", "\\Upsilon "], "\\theta ": ["&Theta;", "\\Theta "], "\\iota ": ["&Iota;", '\\char"399'], "\\omicron ": ["&#x039F;", '\\char"39F'], "\\pi ": ["&Pi;", "\\Pi "], "\\alpha ": ["&Alpha;", '\\char"391'], "\\sigma ": ["&Sigma;", "\\Sigma "], "\\delta ": ["&Delta;", "\\Delta "], "\\phi ": ["&#x03a6;", "\\Phi "], "\\gamma ": ["&Gamma;", "\\Gamma "], "\\eta ": ["&Eta;", '\\char"397'], "\\xi ": ["&Xi;", "\\Xi "], "\\kappa ": ["&Kappa;", '\\char"39A'], "\\lambda ": ["&Lambda;", "\\Lambda "], "\\zeta ": ["&Zeta;", '\\char"396'], "\\chi ": ["&Chi;", '\\char"3A7'], "\\psi ": ["&Psi;", "\\Psi "], "\\omega ": ["&Omega;", "\\Omega "], "\\beta ": ["&Beta;", '\\char"392'], "\\nu ": ["&Nu;", '\\char"39D'], "\\mu ": ["&Mu;", '\\char"39C'] }, Xo = { 0: ["\\emptyset", "\\varnothing", "\\infty", { latex: "#?_0", insert: "#@_0" }, "\\circ", "\\bigcirc", "\\bullet"], 2: ["\\frac{1}{2}", { latex: "#?^2", insert: "#@^2" }], 3: ["\\frac{1}{3}", { latex: "#?^3", insert: "#@^3" }], ".": [".", ",", ";", "\\colon", { latex: ":", aside: "ratio" }, { latex: "\\cdotp", aside: "center dot", class: "box" }, { latex: "\\cdots", aside: "center ellipsis", class: "box" }, { latex: "\\ldotp", aside: "low dot", class: "box" }, { latex: "\\ldots", aside: "low ellipsis", class: "box" }, { latex: "\\vdots", aside: "", class: "box" }, { latex: "\\ddots", aside: "", class: "box" }, "\\odot", "\\oslash", "\\circledcirc"], "*": ["\\cdot", "\\ast", "\\star", "\\bigstar", "\\ltimes", "\\rtimes", "\\rightthreetimes", "\\leftthreetimes", "\\intercal", "\\prod", { latex: "\\prod_{n\\mathop=0}^{\\infty}", class: "small" }], "+": ["\\pm", "\\mp", "\\sum", { latex: "\\sum_{n\\mathop=0}^{\\infty}", class: "small" }, "\\dotplus", "\\oplus"], "-": ["\\pm", "\\mp", "\\ominus", "\\vert #0  \\vert"], "/": ["\\divideontimes", "/", "\\div", "\\%"], "(": ["\\left( #0\\right)", "\\left[ #0\\right]", "\\left\\{ #0\\right\\}", "\\left\\langle #0\\right\\rangle", "\\lfloor", "\\llcorner", "(", "\\lbrack", "\\lvert", "\\lVert", "\\lgroup", "\\langle", "\\lceil", "\\ulcorner", "\\lmoustache", "\\lbrace"], ")": ["\\rfloor", "\\lrcorner", ")", "\\rbrack", "\\rvert", "\\rVert", "\\rgroup", "\\rangle", "\\rceil", "\\urcorner", "\\rmoustache", "\\rbrace"], "=": ["\\cong", "\\asymp", "\\equiv", "\\differencedelta", "\\varpropto", "\\thickapprox", "\\approxeq", "\\thicksim", "\\backsim", "\\eqsim", "\\simeq", "\\Bumpeq", "\\bumpeq", "\\doteq", "\\Doteq", "\\fallingdotseq", "\\risingdotseq", "\\coloneq", "\\eqcirc", "\\circeq", "\\triangleq", "\\between"], "!=": ["\\neq", "\\ncong", "", "\\nsim"], "<": ["\\leq", "\\leqq", "\\lneqq", "\\ll", "\\lessgtr", "\\nless", "\\nleq", "\\lesssim", "\\precsim", "\\prec", "\\nprec", "\\preccurlyeq", "\\lessdot"], ">": ["\\geq", "\\geqq", "\\gneqq", "\\gg", "\\gtrless", "\\ngtr", "\\ngeq", "\\gtrsim", "\\succsim", "\\succ", "\\nsucc", "\\succcurlyeq", "\\gtrdot"], in: ["\\owns"], "!in": ["\\backepsilon"], subset: ["\\subseteq", "\\nsubset", "\\nsubseteq"], superset: ["\\supseteq", "\\nsupset", "\\nsupseteq"], infinity: ["\\aleph_0", "\\aleph_1", "\\omega", "\\mathfrak{m}"], "numeric-pi": ["\\prod", "\\theta", "\\rho", "\\sin", "\\cos", "\\tan"], ee: ["\\times 10^{#?}", "\\ln", "\\ln_{10}", "\\log"], "^": ["_{#?}"], int: [{ latex: "\\int_{#?}^{#?}", class: "small" }, { latex: "\\int", class: "small" }, { latex: "\\smallint", class: "small" }, { latex: "\\iint", class: "small" }, { latex: "\\iiint", class: "small" }, { latex: "\\oint", class: "small" }, { latex: "\\dfrac{\\rd}{\\rd x}", class: "small" }, { latex: "\\frac{\\partial}{\\partial x}", class: "small" }, "\\capitalDifferentialD", "\\rd", "\\partial"], nabla: ["\\nabla\\times", "\\nabla\\cdot", "\\nabla^{2}"], "!": ["!!", "\\Gamma", "\\Pi"], accents: ["\\bar{#@}", "\\vec{#@}", "\\hat{#@}", "\\check{#@}", "\\dot{#@}", "\\ddot{#@}", "\\mathring{#@}", "\\breve{#@}", "\\acute{#@}", "\\tilde{#@}", "\\grave{#@}"], underline: ["\\underbrace{#@}", "\\underlinesegment{#@}", "\\underleftrightarrow{#@}", "\\underrightarrow{#@}", "\\underleftarrow{#@}", "\\undergroup{#@}"], overline: ["\\overbrace{#@}", "\\overlinesegment{#@}", "\\overleftrightarrow{#@}", "\\overrightarrow{#@}", "\\overleftarrow{#@}", "\\overgroup{#@}"], xleftarrows: ["\\xlongequal{#@}", "\\xleftrightarrow{#@}", "\\xLeftrightarrow{#@}", "\\xleftrightharpoons{#@}", "\\xLeftarrow{#@}", "\\xleftharpoonup{#@}", "\\xleftharpoondown{#@}", "\\xtwoheadleftarrow{#@}", "\\xhookleftarrow{#@}", "\\xtofrom{#@}", "\\xleftequilibrium{#@}", "\\xrightleftarrows{#@}"], xrightarrows: ["\\xrightarrow{#@}", "\\xlongequal{#@}", "\\xleftrightarrow{#@}", "\\xLeftrightarrow{#@}", "\\xleftrightharpoons{#@}", "\\xRightarrow{#@}", "\\xrightharpoonup{#@}", "\\xrightharpoondown{#@}", "\\xtwoheadrightarrow{#@}", "\\xrightleftharpoons{#@}", "\\xhookrightarrow{#@}", "\\xmapsto{#@}", "\\xrightequilibrium{#@}", "\\xrightleftarrows{#@}"], A: [{ latex: "\\aleph", aside: "aleph" }, { latex: "\\forall", aside: "for all" }], a: [{ latex: "\\aleph", aside: "aleph" }, { latex: "\\forall", aside: "for all" }], b: [{ latex: "\\beth", aside: "beth" }], B: [{ latex: "\\beth", aside: "beth" }], c: [{ latex: "\\C", aside: "set of complex numbers" }], d: [{ latex: "\\daleth", aside: "daleth" }], D: [{ latex: "\\daleth", aside: "daleth" }], e: [{ latex: "\\exponentialE", aside: "exponential e" }, { latex: "\\exists", aside: "there is" }, { latex: "\\nexists", aside: "there isn’t" }], g: [{ latex: "\\gimel", aside: "gimel" }], G: [{ latex: "\\gimel", aside: "gimel" }], h: [{ latex: "\\hbar", aside: "h bar" }, { latex: "\\hslash", aside: "h slash" }], i: [{ latex: "\\imaginaryI", aside: "imaginary i" }], j: [{ latex: "\\imaginaryJ", aside: "imaginary j" }], l: [{ latex: "\\ell", aside: "ell" }], n: [{ latex: "\\mathbb{N}", aside: "set of natural numbers" }], p: [{ latex: "\\mathbb{P}", aside: "set of primes" }], q: [{ latex: "\\mathbb{Q}", aside: "set of rational numbers" }], r: [{ latex: "\\mathbb{R}", aside: "set of real numbers" }], z: [{ latex: "\\mathbb{Z}", aside: "set of integers" }], "x-var": ["y", "z", "t", "r", { latex: "f(#?)", class: "small" }, { latex: "g(#?)", class: "small" }, "x^2", "x^n", "x_n", "x_{n+1}", "x_i", "x_{i+1}"], "n-var": ["i", "j", "p", "k", "a", "u"], ii: ["\\Re", "\\Im", "\\imaginaryJ", "\\Vert #0 \\Vert"], logic: [{ latex: "\\exists", aside: "there is" }, { latex: "\\nexists", aside: "there isn’t" }, { latex: "\\ni", aside: "such that" }, { latex: "\\Colon", aside: "such that" }, { latex: "\\implies", aside: "implies" }, { latex: "\\impliedby", aside: "implied by" }, { latex: "\\iff", aside: "if and only if" }, { latex: "\\land", aside: "and" }, { latex: "\\lor", aside: "or" }, { latex: "\\oplus", aside: "xor" }, { latex: "\\lnot", aside: "not" }, { latex: "\\downarrow", aside: "nor" }, { latex: "\\uparrow", aside: "nand" }, { latex: "\\curlywedge", aside: "nor" }, { latex: "\\bar\\curlywedge", aside: "nand" }, { latex: "\\therefore", aside: "therefore" }, { latex: "\\because", aside: "because" }, { latex: "^\\biconditional", aside: "biconditional" }, "\\leftrightarrow", "\\Leftrightarrow", "\\to", "\\models", "\\vdash", "\\gets", "\\dashv", "\\roundimplies"], "set-operators": ["\\cap", "\\cup", "\\setminus", "\\smallsetminus", "\\complement"], "set-relations": ["\\in", "\\notin", "\\ni", "\\owns", "\\subset", "\\supset", "\\subseteq", "\\supseteq", "\\subsetneq", "\\supsetneq", "\\varsubsetneq", "\\subsetneqq", "\\nsubset", "\\nsupset", "\\nsubseteq", "\\nsupseteq"], space: [{ latex: '\\char"203A\\!\\char"2039', insert: "\\!", aside: "negative thin space<br>⁻³⧸₁₈ em" }, { latex: '\\unicode{"203A}\\,\\unicode{"2039}', insert: "\\,", aside: "thin space<br>³⧸₁₈ em" }, { latex: '\\unicode{"203A}\\:\\unicode{"2039}', insert: "\\:", aside: "medium space<br>⁴⧸₁₈ em" }, { latex: '\\unicode{"203A}\\;\\unicode{"2039}', insert: "\\;", aside: "thick space<br>⁵⧸₁₈ em" }, { latex: '\\unicode{"203A}\\ \\unicode{"2039}', insert: "\\ ", aside: "⅓ em" }, { latex: '\\unicode{"203A}\\enspace\\unicode{"2039}', insert: "\\enspace", aside: "½ em" }, { latex: '\\unicode{"203A}\\quad\\unicode{"2039}', insert: "\\quad", aside: "1 em" }, { latex: '\\unicode{"203A}\\qquad\\unicode{"2039}', insert: "\\qquad", aside: "2 em" }], delete: [{ label: '<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>', command: "deleteAll" }], "->|": [] }, Uo = {}, Jo = { math: `
        <div class='rows'>
            <ul>
                <li class='keycap tex' data-alt-keys='x-var'><i>x</i></li>
                <li class='keycap tex' data-alt-keys='n-var'><i>n</i></li>
                <li class='separator w5'></li>
                <row name='numpad-1'/>
                <li class='separator w5'></li>
                <li class='keycap tex' data-latex='\\exponentialE' data-alt-keys='ee'>e</li>
                <li class='keycap tex' data-latex='\\imaginaryI' data-alt-keys='ii'>i</li>
                <li class='keycap tex' data-latex='\\pi' data-alt-keys='numeric-pi'></li>
            </ul>
            <ul>
                <li class='keycap tex' data-key='<' data-alt-keys='<'>&lt;</li>
                <li class='keycap tex' data-key='>' data-alt-keys='>'>&gt;</li>
                <li class='separator w5'></li>
                <row name='numpad-2'/>
                <li class='separator w5'></li>
                <li class='keycap tex' data-latex='#@^{2}' data-latex='x^2'></li>
                <li class='keycap tex' data-alt-keys='^' data-insert='#@^{#?}' data-latex='x^\\placeholder'></li>
                <li class='keycap tex small' data-insert='\\sqrt{#0}' data-latex='\\sqrt{#0}'></li>
            </ul>
            <ul>
                <li class='keycap tex' data-alt-keys='(' >(</li>
                <li class='keycap tex' data-alt-keys=')' >)</li>
                <li class='separator w5'></li>
                <row name='numpad-3'/>
                <li class='separator w5'></li>
                <li class='keycap small' data-alt-keys='int' data-latex='\\int_0^\\infty'></li>
                <li class='keycap' data-latex='\\forall' data-alt-keys='logic' ></li>
                <li class='action font-glyph bottom right' data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li></ul>
            </ul>
            <ul>
                <li class='keycap' data-alt-keys='foreground-color' data-command='["applyStyle",{"color":"red"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428; box-sizing: border-box'></span></li>
                <li class='keycap' data-alt-keys='background-color' data-command='["applyStyle",{"backgroundColor":"yellow"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590; box-sizing: border-box'></span></li>
                <li class='separator w5'></li>
                <row name='numpad-4'/>
                <li class='separator w5'></li>
                <arrows/>
            </ul>
        </div>
    `, "lower-roman": "\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='lower-1' shift-layer='upper-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='lower-2'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='lower-3'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='keycap' >;</li>\n                <li class='keycap' >,</li>\n                <li class='keycap w50' data-key=' ' data-alt-keys='space'>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>", "upper-roman": "\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='upper-1'  shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='upper-2' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='upper-3' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='keycap' >;</li>\n                <li class='keycap' data-alt-keys='.'>;</li>\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>", symbols: `
        <div class='rows'>
            <ul>
                <row name='numpad-1' class='if-wide'/>
                <li class='keycap tex' data-alt-keys='(' data-insert='\\lbrace '>{</li>
                <li class='keycap tex' data-alt-keys=')' data-insert='\\rbrace '>}</li>
                <li class='separator w5'></li>
                <li class='keycap tex small' data-alt-keys='xleftarrows' data-latex='\\leftarrow' ></li>
                <li class='keycap tex small' data-alt-keys='xrightarrows' data-latex='\\rightarrow' ></li>
                <li class='keycap tex' data-alt-keys='overline' data-latex='\\overline{#@}' data-aside='overline'></li>
                <li class='keycap tex' data-alt-keys='underline' data-latex='\\underline{#@}' data-aside='underline'></li>
                <li class='keycap w15' data-insert='\\ulcorner#0\\urcorner '><span><sup>&#x250c;</sup><span><span style='color:#ddd'>o</span><sup>&#x2510;</sup></span><aside>ceil</aside></li>
                <li class='keycap tex' data-alt-keys='nabla' data-insert='\\nabla '>&#x2207;<aside>nabla</aside></li>
                <li class='keycap tex' data-alt-keys='infinity' data-insert='\\infty '>&#x221e;</li>

            </ul>
            <ul>
                <row name='numpad-2' class='if-wide'/>
                <li class='keycap tex' data-alt-keys='(' data-insert='\\lbrack '>[</li>
                <li class='keycap tex' data-alt-keys=')' data-insert='\\rbrack '>]</li>
                <li class='separator w5'></li>

                <li class='keycap tex' data-alt-keys='in' data-insert='\\in '>&#x2208;</li>
                <li class='keycap tex' data-alt-keys='!in' data-insert='\\notin '>&#x2209;</li>
                <li class='keycap tex' data-insert='\\Re '>&#x211c;<aside>Real</aside></li>
                <li class='keycap tex' data-insert='\\Im '>&#x2111;<aside>Imaginary</aside></li>
                <li class='keycap w15' data-insert='\\llcorner#0\\lrcorner '><span><sub>&#x2514;</sub><span style='color:#ddd'>o</span><sub>&#x2518;</sub></span><aside>floor</aside></li>

                <li class='keycap tex' data-insert='\\partial '>&#x2202;<aside>partial<br>derivative</aside></li>
                <li class='keycap tex' data-insert='\\emptyset '>&#x2205;<aside>empty set</aside></li>

            </ul>
            <ul>
                <row name='numpad-3' class='if-wide'/>
                <li class='keycap tex' data-alt-keys='(' data-insert='\\langle '>&#x27e8;</li>
                <li class='keycap tex' data-alt-keys=')' data-insert='\\rangle '>&#x27e9;</li>
                <li class='separator w5'></li>
                <li class='keycap tex' data-alt-keys='subset' data-insert='\\subset '>&#x2282;</li>
                <li class='keycap tex' data-alt-keys='superset' data-insert='\\supset '>&#x2283;</li>

                <li class='keycap tex' data-alt-keys='accents' data-insert='\\vec{#@}' data-latex='\\vec{#?}' data-aside='vector'></li>
                <li class='keycap tex' data-alt-keys='absnorm' data-insert='\\left| #0 \\right|' data-latex='\\left| #? \\right|' data-aside='abs'></li>

                <li class='keycap tex' data-key='!' data-alt-keys='!'>!<aside>factorial</aside></li>
                <li class='keycap' data-latex='^{\\prime} '><span><sup><span><span style='color:#ddd'>o</span>&#x2032</sup></span><aside>prime</aside></li>

                <li class='action font-glyph bottom right w15'
                    data-shifted='<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>'
                    data-shifted-command='"deleteAll"'
                    data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'
                ><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li>
            </ul>
            <ul>
                <row name='numpad-4' class='if-wide'/>
                <li class='keycap tex' data-insert=','>,</li>
                <li class='keycap tex' data-insert='\\cdot '>&#x22c5;<aside>centered dot</aside></li>
                <li class='keycap tex' data-insert='\\colon '>:<aside>colon</aside></li>
                <li class='keycap tex' data-insert='\\circ '>&#x2218;<aside>circle</aside></li>
                <li class='keycap tex' data-insert='\\approx '>&#x2248;<aside>approx.</aside></li>
                <li class='keycap tex' data-insert='\\ne '>&#x2260;</li>
                <li class='keycap tex' data-insert='\\pm '>&#x00b1;</li>
                <arrows/>
            </ul>
        </div>`, "lower-greek": `
        <div class='rows'>
            <ul><li class='keycap tex' data-insert='\\varphi '><i>&#x03c6;</i><aside>phi var.</aside></li>
                <li class='keycap tex' data-insert='\\varsigma '><i>&#x03c2;</i><aside>sigma var.</aside></li>
                <li class='keycap tex' data-insert='\\epsilon '><i>&#x03f5;</i></li>
                <li class='keycap tex' data-insert='\\rho '><i>&rho;</i></li>
                <li class='keycap tex' data-insert='\\tau '><i>&tau;</i></li>
                <li class='keycap tex' data-insert='\\upsilon '><i>&upsilon;</i></li>
                <li class='keycap tex' data-insert='\\theta '><i>&theta;</i></li>
                <li class='keycap tex' data-insert='\\iota '><i>&iota;</i></li>
                <li class='keycap tex' data-insert='\\omicron '>&omicron;</i></li>
                <li class='keycap tex' data-insert='\\pi '><i>&pi;</i></li>
            </ul>
            <ul><li class='keycap tex' data-insert='\\alpha ' data-shifted='&Alpha;' data-shifted-command='["insert","\\\\char\\"391"]'><i>&alpha;</i></li>
                <li class='keycap tex' data-insert='\\sigma '><i>&sigma;</i></li>
                <li class='keycap tex' data-insert='\\delta '><i>&delta;</i></li>
                <li class='keycap tex' data-insert='\\phi '><i>&#x03d5;</i></i></li>
                <li class='keycap tex' data-insert='\\gamma '><i>&gamma;</i></li>
                <li class='keycap tex' data-insert='\\eta '><i>&eta;</i></li>
                <li class='keycap tex' data-insert='\\xi '><i>&xi;</i></li>
                <li class='keycap tex' data-insert='\\kappa '><i>&kappa;</i></li>
                <li class='keycap tex' data-insert='\\lambda '><i>&lambda;</i></li>
            </ul>
            <ul><li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='upper-greek'><svg class="svg-glyph"><use xlink:href="#svg-shift" /></svg></li>
                <li class='keycap tex' data-insert='\\zeta '><i>&zeta;</i></li>
                <li class='keycap tex' data-insert='\\chi '><i>&chi;</i></li>
                <li class='keycap tex' data-insert='\\psi '><i>&psi;</i></li>
                <li class='keycap tex' data-insert='\\omega '><i>&omega;</i></li>
                <li class='keycap tex' data-insert='\\beta '><i>&beta;</i></li>
                <li class='keycap tex' data-insert='\\nu '><i>&nu;</i></li>
                <li class='keycap tex' data-insert='\\mu '><i>&mu;</i></li>
                <li class='action font-glyph bottom right w15'
                    data-shifted='<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>'
                    data-shifted-command='"deleteAll"'
                    data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'
                ><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li>
            </ul>
            <ul>
                <li class='keycap ' data-key=' '>&nbsp;</li>
                <li class='keycap'>,</li>
                <li class='keycap tex' data-insert='\\varepsilon '><i>&#x03b5;</i><aside>epsilon var.</aside></li>
                <li class='keycap tex' data-insert='\\vartheta '><i>&#x03d1;</i><aside>theta var.</aside></li>
                <li class='keycap tex' data-insert='\\varkappa '><i>&#x3f0;</i><aside>kappa var.</aside></li>
                <li class='keycap tex' data-insert='\\varpi '><i>&#x03d6;<aside>pi var.</aside></i></li>
                <li class='keycap tex' data-insert='\\varrho '><i>&#x03f1;</i><aside>rho var.</aside></li>
                <arrows/>
            </ul>
        </div>`, "upper-greek": `
        <div class='rows'>
            <ul><li class='keycap tex' data-insert='\\Phi '>&Phi;<aside>phi</aside></li>
                <li class='keycap tex' data-insert='\\Sigma '>&Sigma;<aside>sigma</aside></li>
                <li class='keycap tex' data-insert='\\char"0190'>&#x0190;<aside>epsilon</aside></li>
                <li class='keycap tex' data-insert='\\char"3A1'>&#x3A1;<aside>rho</aside></li>
                <li class='keycap tex' data-insert='\\char"3A4'>&#x3A4;<aside>tau</aside></li>
                <li class='keycap tex' data-insert='\\Upsilon '>&Upsilon;<aside>upsilon</aside></li>
                <li class='keycap tex' data-insert='\\Theta '>&Theta;<aside>theta</aside></li>
                <li class='keycap tex' data-insert='\\char"399'>&Iota;<aside>iota</aside></li>
                <li class='keycap tex' data-insert='\\char"39F'>&#x039F;<aside>omicron</aside></li>
                <li class='keycap tex' data-insert='\\Pi '>&Pi;<aside>pi</aside></li></ul>
            <ul><li class='keycap tex' data-insert='\\char"391'>&#x391;<aside>alpha</aside></li>
                <li class='keycap tex' data-insert='\\Sigma '>&Sigma;<aside>sigma</aside></li>
                <li class='keycap tex' data-insert='\\Delta '>&Delta;<aside>delta</aside></li>
                <li class='keycap tex' data-insert='\\Phi '>&#x03a6;<aside>phi</aside></li>
                <li class='keycap tex' data-insert='\\Gamma '>&Gamma;<aside>gamma</aside></li>
                <li class='keycap tex' data-insert='\\char"397'>&Eta;<aside>eta</aside></li>
                <li class='keycap tex' data-insert='\\Xi '>&Xi;<aside>xi</aside></li>
                <li class='keycap tex' data-insert='\\char"39A'>&Kappa;<aside>kappa</aside></li>
                <li class='keycap tex' data-insert='\\Lambda '>&Lambda;<aside>lambda</aside></li></ul>
            <ul><li class='shift modifier font-glyph bottom left selected w15 layer-switch' data-layer='lower-greek'><svg class="svg-glyph"><use xlink:href="#svg-shift" /></svg></li>
                <li class='keycap tex' data-insert='\\char"396'>&Zeta;<aside>zeta</aside></li>
                <li class='keycap tex' data-insert='\\char"3A7'>&Chi;<aside>chi</aside></li>
                <li class='keycap tex' data-insert='\\Psi '>&Psi;<aside>psi</aside></li>
                <li class='keycap tex' data-insert='\\Omega '>&Omega;<aside>omega</aside></li>
                <li class='keycap tex' data-insert='\\char"392'>&Beta;<aside>beta</aside></li>
                <li class='keycap tex' data-insert='\\char"39D'>&Nu;<aside>nu</aside></li>
                <li class='keycap tex' data-insert='\\char"39C'>&Mu;<aside>mu</aside></li>
                <li class='action font-glyph bottom right w15' data-command='["performWithFeedback","deleteBackward"]'><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li></ul>
            <ul>
                <li class='separator w10'>&nbsp;</li>
                <li class='keycap'>.</li>
                <li class='keycap w50' data-key=' '>&nbsp;</li>
                <arrows/>
            </ul>
        </div>`, functions: `
        <div class='rows'>
            <ul><li class='separator'></li>
                <li class='fnbutton' data-insert='\\sin'></li>
                <li class='fnbutton' data-insert='\\sin^{-1}'></li>
                <li class='fnbutton' data-insert='\\ln'></li>
                <li class='fnbutton' data-insert='\\exponentialE^{#?}'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{lcm}(#?)' data-latex='\\operatorname{lcm}()'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{ceil}(#?)' data-latex='\\operatorname{ceil}()'></li>
                <li class='bigfnbutton' data-insert='\\lim_{n\\to\\infty}'></li>
                <li class='bigfnbutton' data-insert='\\int'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{abs}(#?)' data-latex='\\operatorname{abs}()'></li>
            </ul>
            <ul><li class='separator'></li>
                <li class='fnbutton' data-latex='\\cos'></li>
                <li class='fnbutton' data-latex='\\cos^{-1}'></li>
                <li class='fnbutton' data-latex='\\ln_{10}'></li>
                <li class='fnbutton' data-latex='10^{#?}'></li>
                <li class='bigfnbutton' data-latex='\\operatorname{gcd}(#?)' data-latex='\\operatorname{gcd}()'></li>
                <li class='bigfnbutton' data-latex='\\operatorname{floor}(#?)' data-latex='\\operatorname{floor}()'></li>
                <li class='bigfnbutton' data-latex='\\sum_{n\\mathop=0}^{\\infty}'></li>
                <li class='bigfnbutton' data-latex='\\int_{0}^{\\infty}'></li>
                <li class='bigfnbutton' data-latex='\\operatorname{sign}(#?)' data-latex='\\operatorname{sign}()'></li>
            </ul>
            <ul><li class='separator'></li>
                <li class='fnbutton' data-latex='\\tan'></li>
                <li class='fnbutton' data-latex='\\tan^{-1}'></li>
                <li class='fnbutton' data-latex='\\log_{#?}'></li>
                <li class='fnbutton' data-latex='\\sqrt[#?]{#0}'></li>
                <li class='bigfnbutton' data-insert='#0 \\mod' data-latex='\\mod'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{round}(#?) ' data-latex='\\operatorname{round}()'></li>
                <li class='bigfnbutton' data-insert='\\prod_{n\\mathop=0}^{\\infty}' data-latex='{\\scriptstyle \\prod_{n=0}^{\\infty}}'></li>
                <li class='bigfnbutton' data-insert='\\frac{\\differentialD #0}{\\differentialD x}'></li>
                <li class='action font-glyph bottom right' data-command='["performWithFeedback","deleteBackward"]'><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li></ul>
            <ul><li class='separator'></li>
                <li class='fnbutton'>(</li>
                <li class='fnbutton'>)</li>
                <li class='fnbutton' data-insert='^{#?}' data-latex='x^{#?}'></li>
                <li class='fnbutton' data-insert='_{#?}' data-latex='x_{#?}'></li>
                <li class='keycap w20 ' data-key=' '>&nbsp;</li>
                <arrows/>
            </ul>
        </div>`, style: `
        <div class='rows'>
            <ul>
                <li class='keycap' data-alt-keys='foreground-color' data-command='["applyStyle",{"color":"red"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428'></span></li>
                <li class='keycap' data-alt-keys='background-color' data-command='["applyStyle",{"backgroundColor":"yellow"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590'></span></li>
                <li class='separator w5'></li>
                <li class='keycap' data-command='["applyStyle",{"size":"3"}]' data-latex='\\scriptsize\\text{small}'></li>
                <li class='keycap' data-command='["applyStyle",{"size":"5"}]' data-latex='\\scriptsize\\text{normal}'></li>
                <li class='keycap' data-command='["applyStyle",{"size":"9"}]' data-latex='\\huge\\text{big}'></li>
                <li class='separator w5'></li>
                <li class='keycap' data-latex='\\langle' data-command='["insert", "\\\\langle", {"smartFence":true}]'></li>
            </ul>
            <ul>
                <li class='keycap' data-command='["applyStyle",{"series":"l"}]' data-latex='\\fontseries{l}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"m"}]' data-latex='\\fontseries{m}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"b"}]' data-latex='\\fontseries{b}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"bx"}]' data-latex='\\fontseries{bx}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"sb"}]' data-latex='\\fontseries{sb}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"c"}]' data-latex='\\fontseries{c}\\text{Ab}'></li>
            </ul>
            <ul>
                <li class='keycap' data-command='["applyStyle",{"shape":"up"}]' data-latex='\\textup{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"shape":"it"}]' data-latex='\\textit{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"shape":"sl"}]' data-latex='\\textsl{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"shape":"sc"}]' data-latex='\\textsc{Ab}'></li>
                <li class='separator w5'></li>
                <li class='keycap' data-insert='\\emph{#@} ' data-latex='\\text{\\emph{emph}}'></li>
            </ul>
            <ul>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmr"}]' data-latex='\\textrm{Az}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmtt"}]' data-latex='\\texttt{Az}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmss"}]' data-latex='\\textsf{Az}'></li>

                <li class='keycap' data-command='["applyStyle",{"fontFamily":"bb"}]'  data-latex='\\mathbb{AZ}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"scr"}]'  data-latex='\\mathscr{AZ}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cal"}]' data-latex='\\mathcal{A1}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"frak"}]' data-latex='\\mathfrak{Az}'></li>
            </ul>
        </div>` };
        function Go(e3, t3) {
          e3 = e3.replace(/(^|[^\\])#@/g, "$1#?");
          let a2 = Fa(), r2 = new Et("root", a2);
          return r2.body = ua(e3, a2, { parseMode: "math", args: t3 }), ft(ut(mt(new dt(r2.render(new Ye({ registers: a2.registers }, { fontSize: 5 }, "displaystyle")), { classes: "ML__base" }))), { classes: "ML__mathlive" }).toMarkup();
        }
        function Zo(e3, t3, a2) {
          var r2, i2, o2;
          let n2 = "<div class='left'>", s2 = t3.replace(/\s+/g, " ").split(" ");
          if (s2.length > 1) {
            let t4 = _(_({}, Ho), null != (r2 = e3.customVirtualKeyboards) ? r2 : {});
            for (let e4 of s2) {
              if (!t4[e4]) break;
              n2 += "<div class='", e4 === a2 ? n2 += "selected " : t4[e4].command ? n2 += "action " : n2 += "layer-switch ", n2 += (null != (i2 = t4[e4].classes) ? i2 : "") + "'", t4[e4].tooltip && (n2 += "data-tooltip='" + (null != (o2 = K(t4[e4].tooltip)) ? o2 : t4[e4].tooltip) + "' "), e4 !== a2 && ("string" == typeof t4[e4].command ? n2 += `data-command='"${t4[e4].command}"'` : Array.isArray(t4[e4].command) && (n2 += `data-command='${JSON.stringify(t4[e4].command)}'`), t4[e4].layer && (n2 += "data-layer='" + t4[e4].layer + "'")), n2 += ">" + t4[e4].label + "</div>";
            }
          }
          n2 += "</div>";
          let l2 = "default" === e3.virtualKeyboardToolbar ? ["copyToClipboard", "undo", "redo"] : [], d2 = { copyToClipboard: `
            <div class='action'
                data-command='"copyToClipboard"'
                data-tooltip='${K("tooltip.copy to clipboard")}'>
                <svg><use xlink:href='#svg-copy' /></svg>
            </div>
        `, undo: `
            <div class='action disabled'
                data-command='"undo"'
                data-tooltip='${K("tooltip.undo")}'>
                <svg><use xlink:href='#svg-undo' /></svg>
            </div>
        `, redo: `
            <div class='action disabled'
                data-command='"redo"'
                data-tooltip='${K("tooltip.redo")}'>
                <svg><use xlink:href='#svg-redo' /></svg>
            </div>
        ` };
          return l2.length > 0 && (n2 += `
            <div class='right'>
                ${l2.map((e4) => d2[e4]).join("")}
            </div>
        `), "<div class='keyboard-toolbar' role='toolbar'>" + n2 + "</div>";
        }
        function Yo(e3, t3, a2) {
          var r2, i2;
          for (let o2 of t3) {
            let t4;
            o2.getAttribute("data-latex") ? t4 = Go(o2.getAttribute("data-latex").replace(/&quot;/g, '"'), () => "\\placeholder{}") : o2.getAttribute("data-insert") && "" === o2.innerHTML ? t4 = Go(o2.getAttribute("data-insert").replace(/&quot;/g, '"'), () => "\\placeholder{}") : o2.getAttribute("data-content") && (t4 = o2.getAttribute("data-content").replace(/&quot;/g, '"')), o2.getAttribute("data-aside") && (t4 = (null != t4 ? t4 : "") + "<aside>" + o2.getAttribute("data-aside").replace(/&quot;/g, '"') + "</aside>"), void 0 !== t4 && (o2.innerHTML = e3.options.createHTML(t4)), o2.getAttribute("data-classes") && o2.classList.add(o2.getAttribute("data-classes"));
            let n2 = null == (r2 = o2.getAttribute("data-insert")) ? void 0 : r2.replace(/&quot;/g, '"');
            n2 && Wo[n2] && (o2.dataset.shifted = Wo[n2][0], o2.dataset.shiftedCommand = JSON.stringify(["insertAndUnshiftKeyboardLayer", Wo[n2][1]]));
            let s2, l2 = o2.getAttribute("data-command");
            if (l2) if (/^[a-zA-Z]+$/.test(l2)) s2 = l2;
            else try {
              s2 = JSON.parse(l2);
            } catch (e4) {
            }
            else s2 = o2.getAttribute("data-insert") ? ["insert", o2.getAttribute("data-insert"), { focus: true, feedback: true, scrollIntoView: true, mode: "math", format: "latex", resetStyle: true }] : o2.getAttribute("data-latex") ? ["insert", o2.getAttribute("data-latex"), { focus: true, feedback: true, scrollIntoView: true, mode: "math", format: "latex", resetStyle: true }] : ["typedText", null != (i2 = o2.getAttribute("data-key")) ? i2 : o2.textContent, { focus: true, feedback: true, simulateKeystroke: true }];
            if (s2) {
              a2 && (s2 = [a2, s2]);
              let t5 = { default: s2 }, r3 = o2.getAttribute("data-alt-keys");
              r3 && Uo[r3] && (t5 = { default: s2, pressAndHoldStart: ["showAlternateKeys", r3], pressAndHoldEnd: "hideAlternateKeys" }), jo(o2, (t6) => e3.executeCommand(t6), t5);
            }
          }
        }
        function Qo(e3, t3) {
          var a2, r2, i2, o2;
          let n2 = { qwerty: { "lower-1": "qwertyuiop", "lower-2": " asdfghjkl ", "lower-3": "^zxcvbnm~", "upper-1": "QWERTYUIOP", "upper-2": " ASDFGHJKL ", "upper-3": "^ZXCVBNM~", "numpad-1": "789/", "numpad-2": "456*", "numpad-3": "123-", "numpad-4": "0.=+" }, azerty: { "lower-1": "azertyuiop", "lower-2": "qsdfghjklm", "lower-3": "^ wxcvbn ~", "upper-1": "AZERTYUIOP", "upper-2": "QSDFGHJKLM", "upper-3": "^ WXCVBN ~" }, qwertz: { "lower-1": "qwertzuiop", "lower-2": " asdfghjkl ", "lower-3": "^yxcvbnm~", "upper-1": "QWERTZUIOP", "upper-2": " ASDFGHJKL", "upper-3": "^YXCVBNM~" }, dvorak: { "lower-1": "^  pyfgcrl ", "lower-2": "aoeuidhtns", "lower-3": "qjkxbmwvz~", "upper-1": "^  PYFGCRL ", "upper-2": "AOEUIDHTNS", "upper-3": "QJKXBMWVZ~" }, colemak: { "lower-1": " qwfpgjluy ", "lower-2": "arstdhneio", "lower-3": "^zxcvbkm~", "upper-1": " QWFPGNLUY ", "upper-2": "ARSTDHNEIO", "upper-3": "^ZXCVBKM~" } }, s2 = e3.virtualKeyboardLayout;
          if ("auto" === s2) {
            let e4 = ci();
            e4 && (s2 = e4.virtualLayout), (!s2 || "auto" === s2) && (s2 = null != (a2 = { fr: "azerty", be: "azerty", al: "qwertz", ba: "qwertz", cz: "qwertz", de: "qwertz", hu: "qwertz", sk: "qwertz", ch: "qwertz" }[B.locale.slice(0, 2)]) ? a2 : "qwerty");
          }
          let l2, d2 = null != (r2 = n2[s2]) ? r2 : n2.qwerty, c2 = t3;
          c2 = c2.replace(/<arrows\/>/g, `
        <li class='action' data-command='["performWithFeedback","moveToPreviousChar"]'
            data-shifted='<svg class="svg-glyph"><use xlink:href="#svg-angle-double-left" /></svg>'
            data-shifted-command='["performWithFeedback","extendToPreviousChar"]'>
            <svg class="svg-glyph"><use xlink:href='#svg-arrow-left' /></svg>
        </li>
        <li class='action' data-command='["performWithFeedback","moveToNextChar"]'
            data-shifted='<svg class="svg-glyph"><use xlink:href="#svg-angle-double-right" /></svg>'
            data-shifted-command='["performWithFeedback","extendToNextChar"]'>
            <svg class="svg-glyph"><use xlink:href='#svg-arrow-right' /></svg>
        </li>
        <li class='action' data-command='["performWithFeedback","commit"]'>
        <svg class="svg-glyph"><use xlink:href='#svg-commit' /></svg></li>`);
          let u2 = c2.match(/(<row\s+)(.*)((?:<\/row|\/)>)/);
          for (; u2; ) {
            l2 = "";
            let t4 = u2[2].match(/[a-zA-Z][a-zA-Z\d-]*=(['"])(.*?)\1/g), a3 = {};
            if (t4) for (let e4 of t4) {
              let t5 = e4.match(/([a-zA-Z][a-zA-Z\d-]*)=(['"])(.*?)\2/);
              t5 && (a3[t5[1]] = t5[3]);
            }
            let r3 = d2[a3.name];
            if (r3 || (r3 = n2.qwerty[a3.name]), r3) for (let t5 of r3) {
              let n3 = null != (i2 = a3.class) ? i2 : "";
              n3 && (n3 = ` ${n3}`), "~" === t5 ? (l2 += "<li class='action font-glyph bottom right ", l2 += r3.length - (r3.match(/ /g) || []).length / 2 == 10 ? "w10" : "w15", l2 += `' data-shifted='<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>'
                        data-shifted-command='"deleteAll"'
                        data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'
                        ><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li>`) : " " === t5 ? l2 += "<li class='separator w5'></li>" : "^" === t5 ? l2 += "<li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='" + a3["shift-layer"] + `'><svg class="svg-glyph"><use xlink:href="#svg-shift" /></svg></li>` : "/" === t5 ? l2 += "<li class='keycap" + n3 + "' data-alt-keys='/' data-insert='\\frac{#@}{#?}'>&divide;</li>" : "*" === t5 ? l2 += "<li class='keycap" + n3 + "' data-alt-keys='*' data-insert='\\times '>&times;</li>" : "-" === t5 ? l2 += "<li class='keycap" + n3 + "' data-alt-keys='-' data-key='-'>&#x2212;</li>" : "." === t5 ? l2 += "<li class='keycap" + n3 + `' data-alt-keys='.' data-command='"insertDecimalSeparator"'>` + (null != (o2 = e3.decimalSeparator) ? o2 : ".") + "</li>" : n3.includes("tt") ? l2 += `<li class='keycap${n3}' data-alt-keys='${t5}' data-command='["typedText","${t5}",{"mode":"latex", "focus":true, "feedback":true}]'>${t5}</li>` : l2 += "<li class='keycap" + n3 + "' data-alt-keys='" + t5 + "'>" + t5 + "</li>";
            }
            c2 = c2.replace(new RegExp(u2[1] + u2[2] + u2[3]), l2), u2 = c2.match(/(<row\s+)(.*)((?:<\/row|\/)>)/);
          }
          return c2;
        }
        function en(e3) {
          Vo();
          let t3 = e3.element.querySelectorAll("div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action");
          if (t3) for (let a2 of t3) {
            let t4 = a2.getAttribute("data-unshifted-content");
            t4 && (a2.innerHTML = e3.options.createHTML(t4), a2.dataset.unshiftedContent = "");
            let r2 = a2.getAttribute("data-unshifted-command");
            r2 && (a2.dataset.command = r2, a2.dataset.unshiftedCommand = "");
          }
          return false;
        }
        function tn(e3) {
          return Object.keys(e3).map((t3) => `${t3} {${function(e4) {
            return "string" == typeof e4 ? e4 : Object.entries(e4).map(([e5, t4]) => `${e5}:${t4} !important`).join(";");
          }(e3[t3])}}`).join("");
        }
        function an(e3, t3) {
          rn(e3), Vo(), en(e3);
          let a2 = null == e3 ? void 0 : e3.element.querySelectorAll(".keyboard-layer"), r2 = false;
          for (let e4 of a2) if (e4.dataset.layer === t3) {
            r2 = true;
            break;
          }
          if (r2) for (let e4 of a2) e4.dataset.layer === t3 ? e4.classList.add("is-visible") : e4.classList.remove("is-visible");
          return e3.focusMathfield(), true;
        }
        function rn(e3, t3 = "") {
          let a2 = e3.options.virtualKeyboardContainer;
          if (!a2) return false;
          if (e3.element ? e3.element.classList.add("is-visible") : e3.buildAndAttachElement(t3), !e3.visible) {
            let t4 = Un();
            t4.visibleVirtualKeyboard && on(t4.visibleVirtualKeyboard), t4.visibleVirtualKeyboard = e3;
            let r2 = a2.style.paddingBottom;
            e3.originalContainerBottomPadding = r2, a2.style.paddingBottom = r2 ? `calc(${r2} + var(--keyboard-height, 276px) - 1px)` : "calc(var(--keyboard-height, 276px) - 1px)";
          }
          return setTimeout(() => {
            var t4;
            null == (t4 = e3.element) || t4.classList.add("is-visible"), e3.focusMathfield();
          }, 1), e3.visible = true, e3.stateChanged(), false;
        }
        function on(e3) {
          var t3, a2, r2;
          let i2 = e3.options.virtualKeyboardContainer;
          return i2 && (e3.element && (Un().visibleVirtualKeyboard = void 0, e3.disable(), Vo(), e3.visible = false, null == (t3 = e3.coreStylesheet) || t3.release(), e3.coreStylesheet = null, null == (a2 = e3.virtualKeyboardStylesheet) || a2.release(), e3.virtualKeyboardStylesheet = null, null == (r2 = e3._element) || r2.remove(), e3._element = void 0, null !== e3.originalContainerBottomPadding && (i2.style.paddingBottom = e3.originalContainerBottomPadding)), e3.visible = false, e3.stateChanged()), false;
        }
        function nn(e3, t3, a2) {
          "function" == typeof t3 && (a2 = t3, t3 = 1 / 0), void 0 === t3 && (t3 = 1 / 0);
          let r2 = e3.position, i2 = false, o2 = "";
          for (; !i2; ) {
            let n2 = e3.at(r2);
            i2 = 0 === t3 || void 0 === n2 || "math" !== n2.mode || !(/mord|textord|mpunct/.test(n2.type) || "mop" === n2.type && /[a-zA-Z]+/.test(n2.value)) || !n2.hasEmptyBranch("superscript") || !n2.hasEmptyBranch("subscript") || "function" == typeof a2 && !a2(n2), i2 || (n2.mode = "text", n2.command = n2.value, n2.verbatimLatex = void 0, o2 += n2.value), r2 -= 1, t3 -= 1;
          }
          wi(e3, { data: o2, inputType: "insertText" });
        }
        function sn(e3, t3, a2) {
          "function" == typeof t3 && (a2 = t3, t3 = 1 / 0), void 0 === t3 && (t3 = 1 / 0);
          let r2 = e3.position, i2 = false, o2 = [];
          for (; !i2; ) {
            let n2 = e3.at(r2);
            i2 = 0 === t3 || !n2 || n2.isFirstSibling || "text" !== n2.mode || " " === n2.value || a2 && !a2(n2), i2 || (o2.push(n2.serialize({ defaultMode: "math" })), n2.mode = "math"), r2 -= 1, t3 -= 1;
          }
          ln(e3), wi(e3, { data: Ct(o2), inputType: "insertText" });
        }
        function ln(e3) {
          var t3;
          let a2 = e3.position - 1;
          for (; a2 >= 0 && "math" === (null == (t3 = e3.at(a2)) ? void 0 : t3.mode); ) a2 -= 1;
          if (!(a2 < 0) && "text" === e3.at(a2).mode && " " === e3.at(a2).value && "math" === e3.at(a2 - 1).mode) {
            e3.at(a2 - 1).parent.removeChild(e3.at(a2 - 1));
            let t4 = e3.suppressChangeNotifications;
            e3.suppressChangeNotifications = true, e3.position -= 1, e3.suppressChangeNotifications = t4, wi(e3, { inputType: "deleteContent" });
          }
        }
        Ri({ showAlternateKeys: function(e3, t3) {
          var a2;
          C();
          let r2 = Uo[t3], i2 = document.createElement("div");
          i2.setAttribute("aria-hidden", "true"), i2.className = "ML__keyboard alternate-keys" + (e3.element.classList.contains("material") ? " material" : ""), i2.id = "mathlive-alternate-keys-panel", r2.length >= 14 ? i2.style.width = "236px" : r2.length >= 7 ? i2.style.width = "286px" : 4 === r2.length || 2 === r2.length ? i2.style.width = "146px" : 1 === r2.length ? i2.style.width = "86px" : i2.style.width = "146px", i2.style.height = "auto";
          let o2 = "";
          for (let e4 of r2) o2 += "<li", "string" == typeof e4 ? o2 += ' data-latex="' + e4.replace(/"/g, "&quot;") + '"' : (e4.latex && (o2 += ' data-latex="' + e4.latex.replace(/"/g, "&quot;") + '"'), e4.content && (o2 += ' data-content="' + e4.content.replace(/"/g, "&quot;") + '"'), e4.insert && (o2 += ' data-insert="' + e4.insert.replace(/"/g, "&quot;") + '"'), e4.command && ("string" == typeof e4.command ? o2 += ` data-command="${e4.command.replace(/"/g, "&quot;")}"` : o2 += " data-command='" + JSON.stringify(e4.command).replace(/"/g, "&quot;") + "'"), e4.aside && (o2 += ` data-aside="${e4.aside.replace(/"/g, "&quot;")}"`), e4.class && (o2 += ` data-classes="${e4.class}"`)), o2 += ">", o2 += "string" == typeof e4 ? e4 : null != (a2 = e4.label) ? a2 : "", o2 += "</li>";
          o2 = "<ul>" + o2 + "</ul>", i2.innerHTML = e3.options.createHTML(o2), Yo(e3, [...i2.querySelectorAll("li")], "performAlternateKeys"), Eo.scrim || (Eo.scrim = new Eo()), Eo.scrim.open({ root: e3.options.virtualKeyboardContainer, child: i2 });
          let n2 = null == e3 ? void 0 : e3.element.querySelector('div.keyboard-layer.is-visible div.rows ul li[data-alt-keys="' + t3 + '"]'), s2 = null == n2 ? void 0 : n2.getBoundingClientRect();
          if (s2) {
            s2.top - i2.clientHeight < 0 && (i2.style.width = "auto", r2.length <= 6 ? i2.style.height = "56px" : r2.length <= 12 ? i2.style.height = "108px" : r2.length <= 18 ? i2.style.height = "205px" : i2.classList.add("compact"));
            let e4 = (s2.top - i2.clientHeight + 5).toString() + "px", t4 = Math.max(0, Math.min(window.innerWidth - i2.offsetWidth, (s2.left + s2.right - i2.offsetWidth) / 2)) + "px";
            i2.style.transform = "translate(" + t4 + "," + e4 + ")", i2.classList.add("is-visible");
          }
          return false;
        } }, { target: "virtual-keyboard" }), Ri({ shiftKeyboardLayer: function(e3) {
          let t3 = null == e3 ? void 0 : e3.element.querySelectorAll("div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action");
          if (t3) for (let a2 of t3) {
            if (a2.dataset.unshiftedContent) return false;
            let t4 = a2.getAttribute("data-shifted");
            if (t4 || /^[a-z]$/.test(a2.innerHTML)) {
              a2.dataset.unshiftedContent = a2.innerHTML, t4 || (t4 = a2.innerHTML.toUpperCase()), a2.innerHTML = e3.options.createHTML(t4);
              let r2 = a2.getAttribute("data-command");
              if (r2) {
                a2.dataset.unshiftedCommand = r2;
                let e4 = a2.getAttribute("data-shifted-command");
                if (e4) a2.dataset.command = e4;
                else {
                  let e5 = JSON.parse(r2);
                  M(e5) && (e5[1] = e5[1].toUpperCase()), a2.dataset.command = JSON.stringify(e5);
                }
              }
            }
          }
          return false;
        } }, { target: "virtual-keyboard" }), Ri({ hideAlternateKeys: () => Vo(), performAlternateKeys: function(e3, t3) {
          return Vo(), e3.executeCommand(t3);
        }, switchKeyboardLayer: (e3, t3) => an(e3, t3), unshiftKeyboardLayer: (e3) => en(e3), insertAndUnshiftKeyboardLayer: function(e3, t3) {
          return e3.executeCommand(["insert", t3]), en(e3), true;
        } }, { target: "virtual-keyboard" }), Ri({ toggleVirtualKeyboardAlt: function(e3) {
          let t3 = false;
          return null != e3 && e3.element && (t3 = null == e3 ? void 0 : e3.element.classList.contains("material"), e3.disable()), rn(e3, t3 ? "" : "material"), false;
        }, toggleVirtualKeyboardShift: function(e3) {
          var t3, a2;
          e3.options.virtualKeyboardLayout = { qwerty: "azerty", azerty: "qwertz", qwertz: "dvorak", dvorak: "colemak", colemak: "qwerty" }[e3.options.virtualKeyboardLayout];
          let r2 = null != (a2 = null == (t3 = null == e3 ? void 0 : e3.element.querySelector("div.keyboard-layer.is-visible")) ? void 0 : t3.id) ? a2 : "";
          return e3 && e3.disable(), rn(e3), r2 && an(e3, r2), false;
        } }, { target: "virtual-keyboard" }), Ri({ toggleVirtualKeyboard: (e3, t3) => function(e4, t4) {
          return e4.visible ? on(e4) : rn(e4, t4), false;
        }(e3, t3), hideVirtualKeyboard: (e3) => on(e3), showVirtualKeyboard: (e3, t3) => rn(e3, t3), onUndoStateChanged: (e3, t3, a2) => function(e4, t4, a3) {
          var r2;
          let i2 = null == (r2 = e4.element) ? void 0 : r2.querySelector(".keyboard-toolbar");
          if (!i2) return false;
          let o2 = i2.querySelector(`[data-command='"undo"']`), n2 = i2.querySelector(`[data-command='"redo"']`);
          return n2 && (a3 ? n2.classList.remove("disabled") : n2.classList.add("disabled")), o2 && (t4 ? o2.classList.remove("disabled") : o2.classList.add("disabled")), false;
        }(e3, t3, a2) }, { target: "virtual-keyboard" });
        var dn, cn = "#mathlive-keystroke-caption-panel{visibility:hidden;background:var(--secondary, hsl(var(--hue, 212), 19%, 26%));border-color:var(--secondary-border, hsl(0,0%,91%));box-shadow:0 3px 6px rgba(0,0,0,0.16),0 3px 6px rgba(0,0,0,0.23);text-align:center;border-radius:6px;padding:16px;position:absolute;z-index:1;display:flex;flex-direction:row-reverse;justify-content:center;--keystroke:white;--on-keystroke:#555;--keystroke-border:#f7f7f7}@media (prefers-color-scheme:dark){body:not([theme='light']) #mathlive-keystroke-caption-panel{--keystroke:hsl(var(--hue, 212), 50%, 30%);--on-keystroke:hsl(0,0%,98%);--keystroke-border:hsl(var(--hue, 212), 50%, 25%)}}body[theme='dark'] #mathlive-keystroke-caption-panel{--keystroke:hsl(var(--hue, 212), 50%, 30%);--on-keystroke:hsl(0,0%,98%);--keystroke-border:hsl(var(--hue, 212), 50%, 25%)}#mathlive-keystroke-caption-panel>span{min-width:14px;margin:0 8px 0 0;padding:4px;background-color:var(--keystroke);color:var(--on-keystroke);fill:currentColor;font-family:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;font-size:1em;border-radius:6px;border:2px solid var(--keystroke-border)}", un = null, pn = null;
        function hn(e3) {
          return e3.keystrokeCaption || (e3.keystrokeCaption = Kr("mathlive-keystroke-caption-panel"), void 0 === dn && (dn = Qr(cn).toString(36)), un = ei(null, cn, dn), pn = ei(null, vi, Qr(vi).toString(36))), e3.keystrokeCaption;
        }
        function mn(e3) {
          if (!e3 || e3.length > 1) return null;
          let t3 = e3[0];
          return t3 instanceof ra && "(" === t3.leftDelim && ")" === t3.rightDelim ? t3.removeBranch("body") : null;
        }
        function fn(e3) {
          if (e3) {
            for (let t3 = 0; e3[t3]; t3++) {
              let a2 = e3[t3];
              if (a2 instanceof ra && "(" === a2.leftDelim) {
                let r2 = 0, i2 = 0, o2 = 0;
                for (let e4 = 0; a2.body[e4]; e4++) "genfrac" === a2.body[e4].type && (r2++, i2 = e4), o2++;
                0 === o2 && 1 === r2 && (e3[t3] = a2.body[i2]);
              }
            }
            for (let t3 of e3) {
              for (let e4 of t3.branches) if (!t3.hasEmptyBranch(e4)) {
                fn(t3.branch(e4));
                let a2 = mn(t3.branch(e4));
                a2 && t3.setChildren(a2, e4);
              }
              if (t3 instanceof fa) for (let e4 of t3.cells) fn(e4);
            }
          }
        }
        function yn(e3) {
          if (!e3) return [];
          let t3 = [];
          for (let a2 of e3) {
            for (let e4 of a2.branches) if (!a2.hasEmptyBranch(e4)) {
              let r2 = yn(a2.branch(e4));
              t3.push(...r2);
            }
            a2 instanceof oa && t3.push(a2);
          }
          return t3;
        }
        function bn(e3) {
          return !!/^(mord|surd|msubsup|leftright|mop|mclose)$/.test(e3.type) && !(e3.isExtensibleSymbol || e3.isFunction);
        }
        function gn(e3, t3, a2) {
          let r2 = e3.at(e3.position), { parent: i2 } = r2, o2 = i2 instanceof ra ? i2.leftDelim + i2.rightDelim : "";
          if ("\\lbrace\\rbrace" === o2 && (o2 = "{}"), "\\{\\}" === o2 && (o2 = "{}"), "\\lparen\\rparen" === o2 && (o2 = "()"), "{}" === o2 && /\||\\vert|\\Vert|\\mvert|\\mid/.test(t3)) return cr.insert("math", e3, "\\,\\middle" + t3 + "\\, ", { format: "latex", style: a2 }), true;
          if (("{" === t3 || "\\{" === t3) && (t3 = "\\lbrace"), ("}" === t3 || "\\}" === t3) && (t3 = "\\rbrace"), "[" === t3 && (t3 = "\\lbrack"), "]" === t3 && (t3 = "\\rbrack"), Pt[t3]) {
            let o3 = i2;
            if ("leftright" === o3.type && o3.firstChild === r2 && ("?" === o3.leftDelim || "." === o3.leftDelim)) return o3.leftDelim = t3, o3.isDirty = true, true;
            if (!(i2 instanceof ra && "|" === i2.leftDelim)) {
              if (cr.insert("math", e3, `\\left${t3}\\right?`, { format: "latex", style: a2 }), "first" !== r2.lastSibling.type) {
                let t4 = e3.offsetOf(r2.lastSibling), a3 = e3.extractAtoms([e3.position, t4]);
                e3.at(e3.position).body = a3, e3.position -= 1;
              }
              return true;
            }
          }
          let n2 = "";
          if (Object.keys(Pt).forEach((e4) => {
            t3 === Pt[e4] && (n2 = e4);
          }), n2) {
            if (i2 instanceof ra && r2.isLastSibling) return i2.isDirty = true, i2.rightDelim = t3, e3.position += 1, wi(e3, { data: t3, inputType: "insertText" }), true;
            let o3, n3 = e3.offsetOf(r2.firstSibling);
            for (o3 = e3.position; o3 >= n3; o3--) {
              let t4 = e3.at(o3);
              if (t4 instanceof ra && "?" === t4.rightDelim) break;
            }
            let s2 = e3.at(o3);
            if (o3 >= n3 && s2 instanceof ra) return s2.rightDelim = t3, s2.addChildren(e3.extractAtoms([o3, e3.position]), r2.treeBranch), e3.position = o3, wi(e3, { data: t3, inputType: "insertText" }), true;
            if (i2 instanceof ra && "?" === i2.rightDelim) return i2.isDirty = true, i2.rightDelim = t3, i2.parent.addChildren(e3.extractAtoms([e3.position, e3.offsetOf(r2.lastSibling)]), i2.treeBranch), e3.position = e3.offsetOf(i2), wi(e3, { data: t3, inputType: "insertText" }), true;
            let l2 = i2.parent;
            return !!(l2 instanceof ra && "?" === l2.rightDelim && e3.at(e3.position).isLastSibling) && (e3.position = e3.offsetOf(l2), gn(e3, t3, a2));
          }
          return false;
        }
        function vn(e3, t3, a2) {
          var r2, i2, o2, n2;
          let { model: s2 } = e3;
          !function(e4) {
            var t4, a3;
            if (!e4 || "Unidentified" === e4.key || "Dead" === e4.key) return;
            let r3 = e4.shiftKey && e4.altKey ? 3 : e4.altKey ? 2 : e4.shiftKey ? 1 : 0;
            for (let i3 of ni) (null == (t4 = i3.mapping[e4.code]) ? void 0 : t4[r3]) === e4.key ? i3.score += 1 : null != (a3 = i3.mapping[e4.code]) && a3[r3] && (i3.score = 0);
            ni.sort((e5, t5) => t5.score - e5.score);
          }(a2);
          let l2 = ci();
          if (e3.keyboardLayout !== l2.id && (e3.keyboardLayout = l2.id, e3._keybindings = void 0), clearTimeout(e3.inlineShortcutBufferFlushTimer), e3.inlineShortcutBufferFlushTimer = 0, function(e4, t4) {
            if (e4.options.readOnly || !e4.keystrokeCaptionVisible) return;
            let a3 = hn(e4), r3 = e4.element.getBoundingClientRect();
            a3.style.left = `${r3.left}px`, a3.style.top = r3.top - 64 + "px", a3.innerHTML = e4.options.createHTML("<span>" + (fi(t4) || t4) + "</span>" + a3.innerHTML), a3.style.visibility = "visible", setTimeout(() => {
              a3.childNodes.length > 0 && a3.childNodes[a3.childNodes.length - 1].remove(), 0 === a3.childNodes.length && (a3.style.visibility = "hidden");
            }, 3e3);
          }(e3, t3), a2.defaultPrevented) return e3.flushInlineShortcutBuffer(), false;
          let d2, c2, u2 = "";
          if (!e3.options.readOnly) {
            if ("math" === e3.mode && !a2.ctrlKey && !a2.metaKey) if ("[Backspace]" === t3) e3.inlineShortcutBuffer.pop(), e3.flushInlineShortcutBuffer({ defer: true });
            else if (Oo(a2)) {
              let t4 = Fo(a2), o3 = (null != (i2 = null == (r2 = e3.inlineShortcutBuffer[e3.inlineShortcutBuffer.length - 1]) ? void 0 : r2.keystrokes) ? i2 : "") + t4;
              e3.inlineShortcutBuffer.push({ state: s2.getState(), keystrokes: o3, leftSiblings: xn(e3) });
              let n3 = 0, l3 = "";
              for (; !d2 && n3 < o3.length; ) {
                c2 = e3.inlineShortcutBuffer.length - (o3.length - n3), l3 = o3.slice(n3);
                let t5 = e3.inlineShortcutBuffer[c2].leftSiblings;
                d2 = er(t5, l3, e3.options.inlineShortcuts), !d2 && /^[a-zA-Z][a-zA-Z0-9]+?([_\^][a-zA-Z0-9\*\+\-]+?)?$/.test(l3) && (d2 = e3.options.onInlineShortcut(e3, l3)), n3 += 1;
              }
              e3.flushInlineShortcutBuffer({ defer: true });
            } else e3.flushInlineShortcutBuffer(), e3.snapshot();
            if (e3.options.smartMode) {
              let r3 = e3.mode;
              d2 ? e3.mode = "math" : function(e4, t4, a3) {
                if (e4.smartModeSuppressed) return false;
                let { model: r4 } = e4;
                if (!r4.at(r4.position).isLastSibling || !a3 || !Oo(a3)) return false;
                let i3 = Fo(a3);
                if (!r4.selectionIsCollapsed) return !("text" !== e4.mode || !/[/_^]/.test(i3));
                let o3 = function(e5) {
                  let t5 = "", a4 = e5.position, r5 = false;
                  for (; !r5; ) {
                    let i4 = e5.at(a4);
                    r5 = !(i4 && ("text" === i4.mode || "math" === i4.mode && /mord|textord|mpunct/.test(i4.type))), r5 || (t5 = i4.value + t5), a4 -= 1;
                  }
                  return t5;
                }(r4) + i3;
                if ("text" === e4.mode) {
                  if ("Esc" === t4 || /[/\\]/.test(i3)) return true;
                  if (/[\^_]/.test(i3)) return /(^|\s)[a-zA-Z][^_]$/.test(o3) && sn(r4, 1), true;
                  let e5 = { ")": "(", "}": "{", "]": "[" }[i3], { parent: a4 } = r4.at(r4.position);
                  if (e5 && a4 instanceof ra && a4.leftDelim === e5) return true;
                  if (/(^|[^a-zA-Z])(a|I) $/.test(o3)) return false;
                  if (/[$€£₤₺¥¤฿¢₡₧₨₹₩₱]/u.test(i3)) return true;
                  if (/(^|[^a-zA-Z'’])[a-zA-Z] $/.test(o3)) return sn(r4, 1), false;
                  if (/\D\.[^\d\s]$/.test(o3)) {
                    sn(r4, 1);
                    let e6 = r4.at(r4.position);
                    return e6.value = "⋅", e6.style.variant = "normal", e6.command = "\\cdot", e6.verbatimLatex = void 0, wi(r4, { data: "\\cdot", inputType: "insertText" }), true;
                  }
                  if (/(^|\s)[a-zA-Z][^a-zA-Z]$/.test(o3) || /\.\d$/.test(o3) || /\([\d+\-.]$/.test(o3)) return sn(r4, 1), true;
                  if (/\([a-z][,;]$/.test(o3)) return sn(r4, 2), true;
                  if (/[\d+\-=><*|]$/.test(i3)) return ln(r4), true;
                } else {
                  if ("[Space]" === t4) return nn(r4, void 0, (e5) => /[a-z][:,;.]$/.test(e5.value)), true;
                  if (/[a-zA-Z]{3,}$/.test(o3) && !/(dxd|abc|xyz|uvw)$/.test(o3)) return nn(r4, void 0, (e5) => /[a-zA-Z]/.test(e5.value)), true;
                  if (/(^|\W)(if)$/i.test(o3)) return nn(r4, 1), true;
                  if (/(\u0393|\u0394|\u0398|\u039B|\u039E|\u03A0|\u03A3|\u03A5|\u03A6|\u03A8|\u03A9|[\u03B1-\u03C9]|\u03D1|\u03D5|\u03D6|\u03F1|\u03F5){3,}$/u.test(o3) && !/(αβγ)$/.test(o3)) return nn(r4, void 0, (e5) => /(:|,|;|.|\u0393|\u0394|\u0398|\u039B|\u039E|\u03A0|\u03A3|\u03A5|\u03A6|\u03A8|\u03A9|[\u03B1-\u03C9]|\u03D1|\u03D5|\u03D6|\u03F1|\u03F5)/u.test(e5.value)), true;
                  if ("?" === i3 || "." === i3 && !/[\d-+]\.$/.test(o3)) return true;
                }
                return false;
              }(e3, t3, a2) && (e3.mode = { math: "text", text: "math" }[e3.mode], u2 = ""), e3.mode !== r3 && (null != (o2 = e3.host) && o2.dispatchEvent(new Event("mode-change", { bubbles: true, composed: true, cancelable: true })) || (e3.mode = r3));
            }
          }
          if (!d2) {
            if (u2 || (u2 = function(e4, t4, a3) {
              if (0 === e4.length) return "";
              let r3 = ai(ti(a3));
              for (let a4 = e4.length - 1; a4 >= 0; a4--) if (e4[a4].key === r3 && (!e4[a4].ifMode || e4[a4].ifMode === t4)) return e4[a4].command;
              return "";
            }(e3.keybindings, e3.mode, t3)), !u2 && ("[Enter]" === t3 || "[Return]" === t3)) {
              let t4 = false;
              return xi(s2, { inputType: "insertLineBreak" }) && (e3.host && (t4 = !e3.host.dispatchEvent(new Event("change", { bubbles: true, composed: true }))), t4 || a2.preventDefault && (a2.preventDefault(), a2.stopPropagation()), wi(s2, { inputType: "insertLineBreak" })), t4;
            }
            if ("math" === e3.mode) {
              if ("[Space]" === t3) {
                if (e3.flushInlineShortcutBuffer(), e3.options.mathModeSpace) return e3.snapshot(), cr.insert("math", s2, e3.options.mathModeSpace, { format: "latex" }), u2 = "", e3.dirty = true, e3.scrollIntoView(), a2.preventDefault && (a2.preventDefault(), a2.stopPropagation()), false;
                let t4 = s2.at(s2.position + 1), r3 = s2.at(s2.position - 1);
                ("text" === (null == t4 ? void 0 : t4.mode) || "text" === (null == r3 ? void 0 : r3.mode)) && (e3.snapshot(), cr.insert("text", s2, " "), e3.dirty = true);
              }
              null != (n2 = s2.at(s2.position)) && n2.isDigit() && "," === e3.options.decimalSeparator && "," === Fo(a2) && (u2 = "insertDecimalSeparator");
            }
          }
          if (!d2 && !u2) return true;
          let p2 = s2.at(Math.max(s2.position, s2.anchor)), { parent: h2 } = p2;
          if ("moveAfterParent" === u2 && "leftright" === (null == h2 ? void 0 : h2.type) && p2.isLastSibling && e3.options.smartFence && gn(s2, ".", e3.style) && (u2 = "", Oi(e3)), u2) e3.executeCommand(u2);
          else if (d2) {
            e3.keyboardDelegate.cancelComposition();
            let t4 = _(_({}, s2.at(s2.position).computedStyle), e3.style);
            if (!/^\\({|}|\[|]|@|#|\$|%|&|\^|_|backslash)$/.test(d2)) {
              let r3 = e3.mode;
              cr.insert(e3.mode, s2, Fo(a2), { suppressChangeNotifications: true, style: t4 }), e3.snapshot(), s2.setState(e3.inlineShortcutBuffer[c2].state), e3.mode = r3;
            }
            s2.deferNotifications({ content: true, selection: true, data: null != d2 ? d2 : null, type: "insertText" }, () => (cr.insert(e3.mode, s2, d2, { format: "latex", style: t4 }), ln(e3.model), d2.endsWith(" ") && (e3.mode = "text", cr.insert("text", s2, " ", { style: t4 })), true)), e3.snapshot(), e3.dirty = true, s2.announce("replacement");
          }
          return e3.scrollIntoView(), a2.preventDefault && a2.preventDefault(), false;
        }
        function kn(e3, t3, a2) {
          var r2;
          let { model: i2 } = e3;
          if (e3.options.readOnly) return void i2.announce("plonk");
          if ((a2 = null != a2 ? a2 : {}).focus && e3.focus(), a2.feedback && (e3.options.keypressVibration && D() && navigator.vibrate(3), e3.playSound("keypress")), "string" == typeof a2.mode && e3.switchMode(a2.mode), a2.simulateKeystroke) {
            let a3 = t3.charAt(0), r3 = new KeyboardEvent("keypress", { key: a3 });
            if (!vn(e3, a3, r3)) return;
          }
          let o2 = i2.at(i2.position), n2 = _(_({}, o2.computedStyle), e3.style);
          i2.selectionIsCollapsed || (i2.deleteAtoms(Qa(i2.selection)), e3.snapshot());
          let s2 = St(t3);
          if ("latex" === e3.mode) i2.deferNotifications({ content: true, selection: true, data: t3, type: "insertText" }, () => {
            Mi(e3);
            for (let e4 of s2) cr.insert("latex", i2, e4);
            Li(e3);
          });
          else if ("text" === e3.mode) for (let e4 of s2) cr.insert("text", i2, e4, { style: n2 });
          else if ("math" === e3.mode) for (let t4 of s2) {
            let a3 = { "^": "moveToSuperscript", _: "moveToSubscript", " ": "moveAfterParent" }[t4];
            " " === t4 && e3.options.mathModeSpace && (a3 = ["insert", e3.options.mathModeSpace]), a3 ? e3.executeCommand(a3) : /\d/.test(t4) && e3.options.smartSuperscript && "superscript" === o2.treeBranch && "mop" !== (null == (r2 = o2.parent) ? void 0 : r2.type) && o2.hasNoSiblings ? (cr.insert("math", i2, t4, { style: n2 }), Do(i2)) : ("mord" === o2.type && /[a-zA-Z]/.test(o2.value) && /[a-zA-Z]/.test(t4) && (o2.style.variant && (n2.variant = o2.style.variant), o2.style.variantStyle && (n2.variantStyle = o2.style.variantStyle)), cr.insert("math", i2, t4, { style: n2 }));
          }
          e3.snapshotAndCoalesce(), e3.dirty = true, e3.scrollIntoView();
        }
        function xn(e3) {
          let t3 = e3.model, a2 = [], r2 = t3.at(Math.min(t3.position, t3.anchor));
          for (; "first" !== r2.type; ) a2.push(r2), r2 = r2.leftSibling;
          return a2;
        }
        function wn(e3, t3) {
          var a2, r2, i2, o2, n2, s2;
          let l2 = {};
          "string" == typeof t3.color && (l2.verbatimColor = t3.color, l2.color = null != (a2 = e3.colorMap(t3.color)) ? a2 : "none"), "string" == typeof t3.backgroundColor && (l2.verbatimBackgroundColor = t3.backgroundColor, l2.backgroundColor = null != (r2 = e3.backgroundColorMap(t3.backgroundColor)) ? r2 : "none"), "string" == typeof t3.fontFamily && (l2.fontFamily = t3.fontFamily), "string" == typeof t3.series && (l2.fontSeries = t3.series), "string" == typeof t3.fontSeries && (l2.fontSeries = t3.fontSeries.toLowerCase()), l2.fontSeries && (l2.fontSeries = null != (i2 = { bold: "b", medium: "m", normal: "m" }[l2.fontSeries]) ? i2 : l2.fontSeries), "string" == typeof t3.shape && (l2.fontShape = t3.shape), "string" == typeof t3.fontShape && (l2.fontShape = t3.fontShape.toLowerCase()), l2.fontShape && (l2.fontShape = null != (o2 = { italic: "it", up: "n", upright: "n", normal: "n" }[l2.fontShape]) ? o2 : l2.fontShape);
          let d2 = null != (n2 = t3.size) ? n2 : t3.fontSize;
          return "number" == typeof d2 ? l2.fontSize = Math.max(1, Math.min(10, d2)) : "string" == typeof d2 && (l2.fontSize = null != (s2 = { size1: 1, size2: 2, size3: 3, size4: 4, size5: 5, size6: 6, size7: 7, size8: 8, size9: 9, size10: 10 }[d2.toLowerCase()]) ? s2 : { tiny: 1, scriptsize: 2, footnotesize: 3, small: 4, normal: 5, normalsize: 5, large: 6, Large: 7, LARGE: 8, huge: 9, Huge: 10 }[d2]), l2;
        }
        new class extends cr {
          constructor() {
            super("math");
          }
          onPaste(e3, t3) {
            if (!t3.clipboardData || !xi(e3.model, { dataTransfer: t3.clipboardData, inputType: "insertFromPaste" })) return false;
            let a2 = "", r2 = "auto", i2 = t3.clipboardData.getData("application/json+mathlive");
            if (i2) try {
              let a3 = JSON.parse(i2);
              if (a3 && Array.isArray(a3)) {
                e3.snapshot();
                let r3 = Va(a3, e3), { model: i3 } = e3;
                i3.selectionIsCollapsed || i3.deleteAtoms(Qa(i3.selection));
                let o2 = i3.at(i3.position);
                if (o2.parent instanceof fa) {
                  let e4 = [], t4 = [];
                  "first" === r3[0].type && r3.shift(), "first" === r3[r3.length - 1].type && r3.pop();
                  for (let a5 of r3) "first" === a5.type && t4.length > 0 ? (e4.push(t4), t4 = [a5]) : t4.push(a5);
                  t4.length > 0 && e4.push(t4);
                  let a4 = Number(o2.treeBranch[0]), i4 = Number(o2.treeBranch[1]), n2 = o2.parent.maxColumns;
                  for (; o2.parent.colCount - i4 < e4.length && o2.parent.colCount < n2; ) o2.parent.addColumn();
                  o2.parent.addChildrenAfter(e4[0], o2);
                  for (let t5 = 1; t5 < e4.length; t5++) i4++, i4 >= n2 && (i4 = 0, o2.parent.addRowAfter(a4), a4++), o2.parent.setCell(a4, i4, e4[t5]);
                } else o2.parent.addChildrenAfter(r3.filter((e4) => "first" !== e4.type), o2);
                return i3.position = i3.offsetOf(r3[r3.length - 1]), wi(i3, { inputType: "insertFromPaste" }), Oi(e3), t3.preventDefault(), t3.stopPropagation(), true;
              }
            } catch (e4) {
            }
            if (i2 = t3.clipboardData.getData("application/json"), i2 && e3.computeEngine) try {
              let t4 = JSON.parse(i2);
              if ("object" == typeof t4 && "latex" in t4 && t4.latex && (a2 = t4.latex), !a2) {
                let r3 = e3.computeEngine.box(t4);
                r3 && !r3.has("Error") && (a2 = r3.latex);
              }
              a2 || (r2 = "latex");
            } catch (e4) {
            }
            if (a2 || (a2 = t3.clipboardData.getData("application/x-latex"), a2 && (r2 = "latex")), a2 || (a2 = t3.clipboardData.getData("text/plain")), a2) {
              let i3;
              return e3.snapshot(), [i3, a2] = sr(a2), "auto" === r2 && i3 && (r2 = "latex"), this.insert(e3.model, a2, { format: r2 }) && Oi(e3), t3.preventDefault(), t3.stopPropagation(), true;
            }
            return false;
          }
          insert(e3, t3, a2) {
            var r2, i2;
            let o2 = "string" == typeof t3 ? t3 : null != (i2 = null == (r2 = e3.mathfield.computeEngine) ? void 0 : r2.box(t3).latex) ? i2 : "";
            if (!a2.suppressChangeNotifications && !xi(e3, { data: o2, inputType: "insertText" })) return false;
            if (a2.insertionMode || (a2.insertionMode = "replaceSelection"), a2.selectionMode || (a2.selectionMode = "placeholder"), a2.format || (a2.format = "auto"), e3.mathfield.smartFence) {
              if (e3.selectionIsCollapsed && "string" == typeof t3 && gn(e3, t3, a2.style)) return true;
            } else if ("replaceAll" !== a2.insertionMode) {
              let { parent: a3 } = e3.at(e3.position);
              if (a3 instanceof ra && "?" === a3.rightDelim && e3.at(e3.position).isLastSibling && "string" == typeof t3 && /^[)}\]|]$/.test(t3)) return a3.isDirty = true, a3.rightDelim = t3, e3.position += 1, ki(e3), wi(e3, { data: o2, inputType: "insertText" }), true;
            }
            let { suppressChangeNotifications: n2 } = e3;
            a2.suppressChangeNotifications && (e3.suppressChangeNotifications = true);
            let s2 = e3.suppressChangeNotifications;
            e3.suppressChangeNotifications = true;
            let l2 = {};
            if (l2[0] = "replaceAll" === a2.insertionMode ? "" : e3.getValue(e3.selection, "latex-unstyled"), l2["?"] = "\\placeholder{}", l2["@"] = l2["?"], "replaceSelection" !== a2.insertionMode || e3.selectionIsCollapsed ? "replaceAll" === a2.insertionMode ? (e3.root.setChildren([], "body"), e3.position = 0) : "insertBefore" === a2.insertionMode ? e3.collapseSelection("backward") : "insertAfter" === a2.insertionMode && e3.collapseSelection("forward") : e3.deleteAtoms(Qa(e3.selection)), e3.at(e3.position).isLastSibling || "placeholder" !== e3.at(e3.position + 1).type ? "placeholder" === e3.at(e3.position).type && e3.deleteAtoms([e3.position - 1, e3.position]) : e3.deleteAtoms([e3.position, e3.position + 1]), l2[0]) l2["@"] = l2[0];
            else if ("string" == typeof t3 && /(^|[^\\])#@/.test(t3)) {
              let t4 = function(e4) {
                let t5 = e4.at(e4.position);
                if ("text" === t5.mode) {
                  for (; !t5.isFirstSibling && "text" === t5.mode; ) t5 = t5.leftSibling;
                  return e4.offsetOf(t5);
                }
                let a3 = t5, r3 = [];
                for (; !t5.isFirstSibling && (bn(t5) || r3.length > 0); ) "mclose" === t5.type && r3.unshift(t5.value), "mopen" === t5.type && r3.length > 0 && t5.value === Nt[r3[0]] && r3.shift(), t5 = t5.leftSibling;
                return a3 === t5 ? -1 : e4.offsetOf(t5);
              }(e3);
              t4 >= 0 && (l2["@"] = e3.getValue(t4, e3.position, "latex-unstyled"), e3.deleteAtoms([t4, e3.position]));
            }
            l2[0] || (l2[0] = l2["?"]);
            let d2 = false, [c2, u2] = function(e4, t4, a3, r3) {
              var i3;
              let o3, n3 = [];
              if ("string" != typeof t4 || "math-json" === r3.format) {
                if (!e4.mathfield.computeEngine) return ["math-json", []];
                [o3, t4] = ["latex", e4.mathfield.computeEngine.box(t4).latex], n3 = ua(t4, e4.mathfield, { parseMode: "math" });
              } else "string" == typeof t4 && "ascii-math" === r3.format ? ([o3, t4] = ar(t4, { format: "ascii-math", inlineShortcuts: e4.mathfield.options.inlineShortcuts }), n3 = ua(t4, e4.mathfield, { parseMode: "math" }), "latex" !== o3 && e4.options.removeExtraneousParentheses && fn(n3)) : ("auto" === r3.format || null != (i3 = r3.format) && i3.startsWith("latex")) && ("auto" === r3.format && ([o3, t4] = ar(t4, { format: "auto", inlineShortcuts: e4.mathfield.options.inlineShortcuts })), "latex" === r3.format && ([, t4] = sr(t4)), n3 = ua(t4, e4.mathfield, { parseMode: "math", args: (e5) => (d2 = true, l2[e5]) }), "latex" !== r3.format && e4.options.removeExtraneousParentheses && fn(n3));
              return _o(n3, r3.style), [null != o3 ? o3 : "latex", n3];
            }(e3, t3, 0, a2);
            if (!u2) return false;
            let p2 = yn(u2), h2 = p2.filter((t4) => t4.placeholderId && !e3.mathfield.placeholders.has(t4.placeholderId)), m2 = p2.map((e4) => e4.placeholderId);
            [...e3.mathfield.placeholders.keys()].filter((e4) => !m2.includes(e4)).forEach((t4) => {
              var a3;
              e3.mathfield.placeholders.has(t4) && (null == (a3 = e3.mathfield.placeholders.get(t4)) || a3.field.remove(), e3.mathfield.placeholders.delete(t4));
            }), h2.forEach((t4) => {
              var a3, r3;
              let i3 = e3.mathfield.options.virtualKeyboardMode;
              "manual" === i3 && (i3 = "onfocus");
              let o3 = new jn(S(_({}, e3.mathfield.options), { virtualKeyboardMode: i3, readOnly: false })), n3 = t4.defaultValue ? Et.serialize(t4.defaultValue, { defaultMode: "math" }) : "";
              o3.value = n3, o3.addEventListener("input", () => {
                (function(e4, t5) {
                  e4.suppressChangeNotifications || !e4.mathfield.host || (e4.suppressChangeNotifications = true, e4.mathfield.host.dispatchEvent(new CustomEvent("placeholder-change", { detail: { placeholderId: t5 }, bubbles: true, composed: true })), e4.suppressChangeNotifications = false);
                })(e3, t4.placeholderId), setTimeout(() => Oi(e3.mathfield));
              }), null == (r3 = null == (a3 = e3.mathfield.element) ? void 0 : a3.querySelector(".ML__placeholdercontainer")) || r3.appendChild(o3), e3.mathfield.placeholders.set(t4.placeholderId, { atom: t4, field: o3 });
            });
            let { parent: f2 } = e3.at(e3.position);
            if ("latex" !== c2 && e3.options.removeExtraneousParentheses && f2 instanceof ra && "(" === f2.leftDelim && f2.hasEmptyBranch("body") && 1 === u2.length && "genfrac" === u2[0].type) {
              let e4 = f2.parent, t4 = f2.treeBranch;
              e4.removeChild(f2), e4.setChildren(u2, t4);
            }
            let y2 = f2.hasEmptyBranch("body"), b2 = e3.at(e3.position);
            b2.parent.addChildrenAfter(u2, b2), "latex" === c2 && "string" == typeof t3 && "root" === f2.type && y2 && !d2 && (f2.verbatimLatex = t3), e3.suppressChangeNotifications = s2;
            let g2 = u2[u2.length - 1];
            if ("placeholder" === a2.selectionMode) {
              let t4 = u2.reduce((e4, t5) => [...e4, ...t5.children.filter((e5) => "placeholder" === e5.type)], []);
              if (t4.length > 0) {
                let a3 = e3.offsetOf(t4[0]);
                e3.setSelection(a3 - 1, a3), e3.announce("move");
              } else g2 && (e3.position = e3.offsetOf(g2));
            } else "before" === a2.selectionMode || ("after" === a2.selectionMode ? g2 && (e3.position = e3.offsetOf(g2)) : "item" === a2.selectionMode && e3.setSelection(e3.anchor, e3.offsetOf(g2)));
            return wi(e3, { data: o2, inputType: "insertText" }), e3.suppressChangeNotifications = n2, true;
          }
        }(), Ri({ undo: (e3) => (Ai(e3, "accept"), e3.undo(), true), redo: (e3) => (Ai(e3, "accept"), e3.redo(), true), scrollIntoView: (e3) => (e3.scrollIntoView(), true), scrollToStart: (e3) => (e3.field.scroll(0, 0), true), scrollToEnd: (e3) => {
          let t3 = e3.field.getBoundingClientRect();
          return e3.field.scroll(t3.left - window.scrollX, 0), true;
        }, toggleKeystrokeCaption: function(e3) {
          return e3.keystrokeCaptionVisible = !e3.keystrokeCaptionVisible, e3.keystrokeCaptionVisible ? (e3.keystrokeCaption = hn(e3), e3.keystrokeCaption.innerHTML = "") : e3.keystrokeCaption && (e3.keystrokeCaption.style.visibility = "hidden"), false;
        }, plonk: (e3) => (e3.model.announce("plonk"), true), switchMode: (e3, t3, a2, r2) => (e3.switchMode(t3, a2, r2), true), insert: (e3, t3, a2) => e3.insert(t3, a2), typedText: (e3, t3, a2) => (kn(e3, t3, a2), true), insertDecimalSeparator: (e3) => {
          if ("math" === e3.mode && "," === e3.options.decimalSeparator) {
            let t3 = e3.model;
            if (t3.at(Math.max(t3.position, t3.anchor)).isDigit()) return e3.snapshot(), e3.insert("{,}", { format: "latex" }), true;
          }
          return e3.insert("."), true;
        }, commit: (e3) => (xi(e3.model, { inputType: "insertLineBreak" }) && (e3.host && e3.host.dispatchEvent(new Event("change", { bubbles: true, composed: true })), wi(e3.model, { inputType: "insertLineBreak" })), true) }), Ri({ copyToClipboard: (e3) => (e3.focus(), e3.model.selectionIsCollapsed && e3.select(), document.execCommand("copy"), false), cutToClipboard: (e3) => (e3.focus(), document.execCommand("cut"), true), pasteFromClipboard: (e3) => (e3.focus(), document.execCommand("paste"), true) }, { target: "mathfield", category: "clipboard" }), Ri({ applyStyle: function(e3, t3) {
          e3.flushInlineShortcutBuffer();
          let a2 = wn(e3, t3), { model: r2 } = e3;
          return r2.selectionIsCollapsed ? (e3.style.fontSeries && a2.fontSeries === e3.style.fontSeries && (a2.fontSeries = "auto"), a2.fontShape && a2.fontShape === e3.style.fontShape && (a2.fontShape = "auto"), a2.color && a2.color === e3.style.color && (a2.color = "none"), a2.backgroundColor && a2.backgroundColor === e3.style.backgroundColor && (a2.backgroundColor = "none"), a2.fontSize && a2.fontSize === e3.style.fontSize && (a2.fontSize = "auto"), e3.style = _(_({}, e3.style), a2)) : e3.model.deferNotifications({ content: true, type: "insertText" }, () => {
            r2.selection.ranges.forEach((e4) => So(r2, e4, a2, { operation: "toggle" })), e3.snapshot();
          }), true;
        } }, { target: "mathfield" });
        var _n = null, Sn = 0;
        function Mn(e3) {
          return L() && "TouchEvent" in globalThis && e3 instanceof TouchEvent;
        }
        function Ln(e3) {
          return L() && "PointerEvent" in globalThis && e3 instanceof PointerEvent;
        }
        function Cn(e3, t3, a2) {
          if (e3 >= a2.left && e3 <= a2.right && t3 >= a2.top && t3 <= a2.bottom) return 0;
          let r2 = e3 - (a2.left + a2.right) / 2, i2 = t3 - (a2.top + a2.bottom) / 2;
          return r2 * r2 + i2 * i2;
        }
        function An(e3, t3, a2, r2, i2) {
          if (!a2.id) return [1 / 0, null];
          if (t3.has(a2.id)) return t3.get(a2.id);
          let o2 = Fr(e3, a2);
          if (!o2) return [1 / 0, null];
          let n2 = [1 / 0, null];
          if (a2.hasChildren && !a2.captureSelection && r2 >= o2.left && r2 <= o2.right) for (let o3 of a2.children) {
            let a3 = An(e3, t3, o3, r2, i2);
            a3[0] <= n2[0] && (n2 = a3);
          }
          return n2[1] || (n2 = [Cn(r2, i2, o2), a2]), t3.set(a2.id, n2), n2;
        }
        function Dn(e3, t3, a2) {
          let [, r2] = An(e3, /* @__PURE__ */ new Map(), e3.model.root, t3, a2);
          return r2;
        }
        function Tn(e3, t3, a2, r2) {
          var i2;
          let o2 = e3.fieldContent.getBoundingClientRect();
          if (t3 > o2.right || a2 > o2.bottom + 8) return e3.model.lastOffset;
          if (t3 < o2.left || a2 < o2.top - 8) return 0;
          (r2 = null != r2 ? r2 : {}).bias = null != (i2 = r2.bias) ? i2 : 0;
          let n2 = Dn(e3, t3, a2), s2 = [], l2 = n2;
          for (; l2; ) s2.unshift(l2), l2 = l2.parent;
          for (let e4 of s2) if (e4.captureSelection) {
            n2 = e4;
            break;
          }
          let d2 = e3.model.offsetOf(n2);
          if (d2 < 0) return -1;
          if (n2.leftSibling) if (0 === r2.bias && "placeholder" !== n2.type) {
            let a3 = Fr(e3, n2);
            a3 && t3 < (a3.left + a3.right) / 2 && (d2 = e3.model.offsetOf(n2.leftSibling));
          } else r2.bias < 0 && (d2 = e3.model.offsetOf(n2.leftSibling));
          return d2;
        }
        new class extends cr {
          constructor() {
            super("text");
          }
          onPaste(e3, t3) {
            if (!t3.clipboardData) return false;
            let a2 = t3.clipboardData.getData("text/plain");
            return !(!a2 || !xi(e3.model, { inputType: "insertFromPaste", data: a2 }) || (e3.snapshot(), this.insert(e3.model, a2) && (wi(e3.model, { inputType: "insertFromPaste" }), Oi(e3)), t3.preventDefault(), t3.stopPropagation(), 0));
          }
          insert(e3, t3, a2 = {}) {
            if (!xi(e3, { data: t3, inputType: "insertText" })) return false;
            a2.insertionMode || (a2.insertionMode = "replaceSelection"), a2.selectionMode || (a2.selectionMode = "placeholder"), a2.format || (a2.format = "auto");
            let { suppressChangeNotifications: r2 } = e3;
            a2.suppressChangeNotifications && (e3.suppressChangeNotifications = true);
            let i2 = e3.suppressChangeNotifications;
            e3.suppressChangeNotifications = true, "replaceSelection" !== a2.insertionMode || e3.selectionIsCollapsed ? "replaceAll" === a2.insertionMode ? (e3.root.setChildren([], "body"), e3.position = 0) : "insertBefore" === a2.insertionMode ? e3.collapseSelection("backward") : "insertAfter" === a2.insertionMode && e3.collapseSelection("forward") : e3.deleteAtoms(Qa(e3.selection));
            let o2 = function(e4, t4) {
              return ua(e4 = (e4 = (e4 = (e4 = (e4 = (e4 = (e4 = (e4 = (e4 = (e4 = (e4 = e4.replace(/\\/g, "\\textbackslash ")).replace(/#/g, "\\#")).replace(/\$/g, "\\$")).replace(/%/g, "\\%")).replace(/&/g, "\\&")).replace(/_/g, "\\_")).replace(/{/g, "\\textbraceleft ")).replace(/}/g, "\\textbraceright ")).replace(/\^/g, "\\textasciicircum ")).replace(/~/g, "\\textasciitilde ")).replace(/£/g, "\\textsterling "), t4, { parseMode: "text" });
            }(t3, e3.mathfield);
            if (_o(o2, a2.style), !o2) return false;
            let n2 = e3.at(e3.position), s2 = n2.parent.addChildrenAfter(o2, n2);
            return e3.suppressChangeNotifications = i2, "before" === a2.selectionMode || ("item" === a2.selectionMode ? e3.setSelection(e3.anchor, e3.offsetOf(s2)) : s2 && (e3.position = e3.offsetOf(s2))), wi(e3, { data: t3, inputType: "insertText" }), e3.suppressChangeNotifications = r2, true;
          }
        }();
        var zn = "mathlive#remote-virtual-keyboard-message";
        function Bn(e3) {
          if ("object" != typeof e3) return {};
          let t3 = {};
          return e3.fontsDirectory && (t3.fontsDirectory = e3.fontsDirectory), e3.soundsDirectory && (t3.soundsDirectory = e3.soundsDirectory), e3.virtualKeyboards && (t3.virtualKeyboards = e3.virtualKeyboards), e3.virtualKeyboardLayout && (t3.virtualKeyboardLayout = e3.virtualKeyboardLayout), e3.customVirtualKeyboardLayers && (t3.customVirtualKeyboardLayers = e3.customVirtualKeyboardLayers), e3.customVirtualKeyboards && (t3.customVirtualKeyboards = e3.customVirtualKeyboards), e3.virtualKeyboardTheme && (t3.virtualKeyboardTheme = e3.virtualKeyboardTheme), e3.keypressVibration && (t3.keypressVibration = e3.keypressVibration), e3.keypressSound && (t3.keypressSound = e3.keypressSound), e3.plonkSound && (t3.plonkSound = e3.plonkSound), e3.virtualKeyboardToolbar && (t3.virtualKeyboardToolbar = e3.virtualKeyboardToolbar), e3.targetOrigin && (t3.targetOrigin = e3.targetOrigin), e3.originValidator && (t3.originValidator = e3.originValidator), t3;
        }
        var Kn, En, $n = L() ? document.createElement("template") : null;
        $n && ($n.innerHTML = '<style>\n:host { display: block; position: relative; overflow: hidden auto;}\n:host([hidden]) { display: none; }\n:host([disabled]) { opacity:  .5; }\n:host(:focus), :host(:focus-within) {\n  outline: Highlight auto 1px;    /* For Firefox */\n  outline: -webkit-focus-ring-color auto 1px;\n}\n:host([readonly]), :host([read-only]) { outline: none; }\n</style>\n<div></div><slot style="display:none"></slot>');
        var qn = /* @__PURE__ */ new WeakMap(), On = class extends HTMLElement {
          constructor(e3) {
            C(), super(), this.attachShadow({ mode: "open" }), this.shadowRoot.append($n.content.cloneNode(true));
            let t3 = this.shadowRoot.querySelector("slot:not([name])");
            this._slotValue = t3.assignedNodes().map((e4) => 3 === e4.nodeType ? e4.textContent : "").join("").trim(), e3 && this.setOptions(e3), this.shadowRoot.host.addEventListener("pointerdown", (e4) => this.onPointerDown(), true), this.shadowRoot.host.addEventListener("focus", () => {
              var e4;
              return null == (e4 = this._mathfield) ? void 0 : e4.focus();
            }, true), this.shadowRoot.host.addEventListener("blur", () => {
              var e4;
              return null == (e4 = this._mathfield) ? void 0 : e4.blur();
            }, true);
          }
          static get optionsAttributes() {
            return { "default-mode": "string", "fonts-directory": "string", "sounds-directory": "string", "horizontal-spacing-scale": "string", "math-mode-space": "string", "inline-shortcut-timeout": "string", "keypress-vibration": "on/off", "keypress-sound": "string", "plonk-sound": "string", "letter-shape-style": "string", locale: "string", "read-only": "boolean", "remove-extraneous-parentheses": "on/off", "smart-fence": "on/off", "smart-mode": "on/off", "smart-superscript": "on/off", "speech-engine": "string", "speech-engine-rate": "string", "speech-engine-voice": "string", "text-to-speech-markup": "string", "text-to-speech-rules": "string", "virtual-keyboard-layout": "string", "virtual-keyboard-mode": "string", "virtual-keyboard-theme": "string", "virtual-keyboards": "string", "use-shared-virtual-keyboard": "boolean", "shared-virtual-keyboard-target-origin": "string" };
          }
          static get observedAttributes() {
            return [...Object.keys(On.optionsAttributes), "disabled", "readonly", "read-only"];
          }
          onPointerDown() {
            window.addEventListener("pointerup", (e3) => {
              e3.target === this && this.dispatchEvent(new MouseEvent("click", { altKey: e3.altKey, button: e3.button, buttons: e3.buttons, clientX: e3.clientX, clientY: e3.clientY, ctrlKey: e3.ctrlKey, metaKey: e3.metaKey, movementX: e3.movementX, movementY: e3.movementY, relatedTarget: e3.relatedTarget, screenX: e3.screenX, screenY: e3.screenY, shiftKey: e3.shiftKey }));
            }, { once: true });
          }
          getPlaceholderField(e3) {
            var t3;
            return null == (t3 = this._mathfield) ? void 0 : t3.getPlaceholderField(e3);
          }
          addEventListener(e3, t3, a2) {
            return super.addEventListener(e3, t3, a2);
          }
          removeEventListener(e3, t3, a2) {
            super.removeEventListener(e3, t3, a2);
          }
          get mode() {
            var e3, t3;
            return null != (t3 = null == (e3 = this._mathfield) ? void 0 : e3.mode) ? t3 : "math";
          }
          set mode(e3) {
            this._mathfield && (this._mathfield.mode = e3);
          }
          get computeEngine() {
            if (this._mathfield) return this._mathfield.computeEngine;
          }
          set computeEngine(e3) {
            this._mathfield && this._mathfield.setOptions({ computeEngine: e3 });
          }
          get expression() {
            if (this._mathfield) return this._mathfield.expression;
          }
          set expression(e3) {
            var t3, a2;
            if (!this._mathfield) return;
            let r2 = null != (a2 = null == (t3 = this.computeEngine) ? void 0 : t3.box(e3).latex) ? a2 : null;
            null !== r2 && this._mathfield.setValue(r2);
          }
          get errors() {
            var e3, t3;
            return null != (t3 = null == (e3 = this._mathfield) ? void 0 : e3.errors) ? t3 : [];
          }
          get placeholders() {
            if (!this._mathfield) return {};
            let e3 = {};
            for (let [t3, a2] of this._mathfield.placeholders) e3[t3] = a2.field;
            return e3;
          }
          getOptions(e3) {
            return this._mathfield ? Ji(this._mathfield.options, e3) : qn.has(this) ? Ji(Ui(Zi(), qn.get(this).options), e3) : null;
          }
          getOption(e3) {
            return this.getOptions([e3])[e3];
          }
          setOptions(e3) {
            if (this._mathfield) this._mathfield.setOptions(e3), this._mathfield.placeholders.forEach((t3) => {
              t3.field.setOptions(S(_({}, e3), { readOnly: false }));
            });
            else if (qn.has(this)) {
              let t3 = _(_({}, qn.get(this).options), e3);
              qn.set(this, S(_({}, qn.get(this)), { selection: { ranges: t3.readOnly ? [[0, 0]] : [[0, -1]] }, options: t3 }));
            } else qn.set(this, { value: void 0, selection: { ranges: [[0, 0]] }, options: e3 });
            !function(e4) {
              let t3 = Zi(), a2 = e4.getOptions();
              Object.keys(On.optionsAttributes).forEach((r2) => {
                let i2 = Pn(r2);
                "on/off" === On.optionsAttributes[r2] ? t3[i2] !== a2[i2] ? e4.setAttribute(r2, a2[i2] ? "on" : "off") : e4.removeAttribute(r2) : t3[i2] !== a2[i2] && ("boolean" === On.optionsAttributes[r2] ? a2[i2] ? e4.setAttribute(r2, "") : e4.removeAttribute(r2) : ("string" == typeof a2[i2] || "number" == typeof a2[i2]) && e4.setAttribute(r2, a2[i2].toString()));
              });
            }(this);
          }
          executeCommand(e3) {
            var t3, a2;
            return null != (a2 = null == (t3 = this._mathfield) ? void 0 : t3.executeCommand(e3)) && a2;
          }
          getValue(e3, t3, a2) {
            var r2, i2;
            if (this._mathfield) return this._mathfield.model.getValue(e3, t3, a2);
            if (qn.has(this)) {
              let o2, n2, s2;
              if (lo(e3) ? ([o2, n2] = e3.ranges[0], s2 = t3) : so(e3) ? ([o2, n2] = e3, s2 = t3) : no(e3) && no(t3) ? (o2 = e3, n2 = t3, s2 = a2) : (o2 = 0, n2 = -1, s2 = e3), (void 0 === s2 || "latex" === s2) && 0 === o2 && -1 === n2) return null != (i2 = null != (r2 = qn.get(this).value) ? r2 : this.textContent) ? i2 : "";
            }
            return "";
          }
          setValue(e3, t3) {
            if (this._mathfield && void 0 !== e3) return t3 || (t3 = { suppressChangeNotifications: true }), void this._mathfield.setValue(e3, t3);
            if (qn.has(this)) {
              let t4 = qn.get(this).options;
              return void qn.set(this, { value: e3, selection: { ranges: t4.readOnly ? [[0, 0]] : [[0, -1]], direction: "forward" }, options: t4 });
            }
            let a2 = Nn(this);
            qn.set(this, { value: e3, selection: { ranges: a2.readOnly ? [[0, 0]] : [[0, -1]], direction: "forward" }, options: a2 });
          }
          hasFocus() {
            var e3, t3;
            return null != (t3 = null == (e3 = this._mathfield) ? void 0 : e3.hasFocus()) && t3;
          }
          get virtualKeyboardState() {
            var e3, t3;
            return null != (t3 = null == (e3 = this._mathfield) ? void 0 : e3.virtualKeyboardState) ? t3 : "hidden";
          }
          set virtualKeyboardState(e3) {
            this._mathfield && (this._mathfield.virtualKeyboardState = e3);
          }
          focus() {
            super.focus();
          }
          blur() {
            var e3;
            null == (e3 = this._mathfield) || e3.blur(), super.blur();
          }
          select() {
            var e3;
            null == (e3 = this._mathfield) || e3.select();
          }
          insert(e3, t3) {
            var a2, r2;
            return null != (r2 = null == (a2 = this._mathfield) ? void 0 : a2.insert(e3, t3)) && r2;
          }
          applyStyle(e3, t3) {
            var a2;
            return null == (a2 = this._mathfield) ? void 0 : a2.applyStyle(e3, t3);
          }
          get caretPoint() {
            var e3, t3;
            return null != (t3 = null == (e3 = this._mathfield) ? void 0 : e3.getCaretPoint()) ? t3 : null;
          }
          set caretPoint(e3) {
            var t3;
            e3 && (null == (t3 = this._mathfield) || t3.setCaretPoint(e3.x, e3.y));
          }
          setCaretPoint(e3, t3) {
            var a2, r2;
            return null != (r2 = null == (a2 = this._mathfield) ? void 0 : a2.setCaretPoint(e3, t3)) && r2;
          }
          offsetFromPoint(e3, t3, a2) {
            return this._mathfield ? Tn(this._mathfield, e3, t3, a2) : -1;
          }
          hitboxFromOffset(e3) {
            if (!this._mathfield) return null;
            let t3 = this._mathfield.model.at(e3);
            if (!t3) return null;
            let a2 = Fr(this._mathfield, t3);
            return a2 ? new DOMRect(a2.left, a2.top, a2.right - a2.left, a2.bottom - a2.top) : null;
          }
          resetUndo() {
            var e3;
            null == (e3 = this._mathfield) || e3.resetUndo();
          }
          canUndo() {
            return !!this._mathfield && this._mathfield.canUndo();
          }
          canRedo() {
            return !!this._mathfield && this._mathfield.canRedo();
          }
          connectedCallback() {
            var e3, t3, a2;
            this.hasAttribute("role") || this.setAttribute("role", "math"), this.setAttribute("dir", "ltr"), this.hasAttribute("aria-label") || this.setAttribute("aria-label", "math input field"), this.setAttribute("contenteditable", "true"), this.setAttribute("aria-multiline", "false"), this.hasAttribute("tabindex") || this.setAttribute("tabindex", "0");
            let r2 = this.shadowRoot.querySelector("slot:not([name])");
            try {
              this._style = r2.assignedElements().filter((e4) => "style" === e4.tagName.toLowerCase()).map((e4) => e4.textContent).join("");
            } catch (e4) {
            }
            if (this._style) {
              let e4 = document.createElement("style");
              e4.textContent = this._style, this.shadowRoot.appendChild(e4);
            }
            try {
              let e4 = r2.assignedElements().filter((e5) => "script" === e5.tagName.toLowerCase() && "application/json" === e5.type).map((e5) => e5.textContent).join("");
              e4 && this.setOptions(JSON.parse(e4));
            } catch (e4) {
            }
            let i2 = "";
            if (i2 = this.hasAttribute("value") ? null != (e3 = this.getAttribute("value")) ? e3 : "" : null != (t3 = null == r2 ? void 0 : r2.assignedNodes().map((e4) => 3 === e4.nodeType ? e4.textContent : "").join("").trim()) ? t3 : "", this._mathfield = new class {
              constructor(e4, t4) {
                var a3, r3, i3;
                this.focusBlurInProgress = false, this.stylesheets = [], this.audioBuffers = {}, this.options = Ui(S(_({}, Zi()), { registers: Na(this) }), t4.readOnly ? S(_({}, t4), { virtualKeyboardMode: "off" }) : _({ plonkSound: "plonk.wav", keypressSound: { spacebar: "keypress-spacebar.wav", return: "keypress-return.wav", delete: "keypress-delete.wav", default: "keypress-standard.wav" } }, t4)), "auto" === this.options.virtualKeyboardMode && (this.options.virtualKeyboardMode = A() ? "onfocus" : "off"), void 0 !== this.options.computeEngine && (this._computeEngine = t4.computeEngine), t4.eventSink && (this.host = t4.eventSink), this.placeholders = /* @__PURE__ */ new Map(), this.element = e4, e4.mathfield = this;
                let o2 = null != (a3 = t4.value) ? a3 : this.element.textContent;
                o2 && (o2 = o2.trim()), null !== this.options.fontsDirectory && oo(this.options.fontsDirectory), Kn || (Kn = Qr(vi).toString(36)), this.stylesheets.push(ei(e4, vi, Kn)), En || (En = Qr(to).toString(36)), this.stylesheets.push(ei(e4, to, En));
                let n2 = "<span class=ML__textarea>";
                if (A() ? n2 += "<span class=ML__textarea__textarea tabindex=-1 role=textbox></span>" : n2 += `<textarea class=ML__textarea__textarea autocapitalize=off autocomplete=off autocorrect=off spellcheck=false inputmode=none aria-hidden="true" tabindex="${null != (r3 = e4.tabIndex) ? r3 : 0}"></textarea>`, n2 += "</span>", n2 += '<span part="container" class="ML__container"><span part="content" class="ML__content"></span>', n2 += `<div part='virtual-keyboard-toggle' class="ML__virtual-keyboard-toggle" role="button" data-ML__tooltip="${K("tooltip.toggle virtual keyboard")}">`, n2 += null != (i3 = this.options.virtualKeyboardToggleGlyph) ? i3 : Gi, n2 += "</div>", n2 += "<div class='ML__placeholdercontainer'></div>", n2 += "</span>", n2 += '<div class="ML__sr-only"><span aria-role="status" aria-live="assertive" aria-atomic="true"></span><span></span></div>', this.element.innerHTML = this.options.createHTML(n2), !this.element.children) return;
                let s2 = 0, l2 = this.element.children[s2++].firstElementChild;
                this.field = this.element.children[s2].children[0], s2++, this.virtualKeyboardToggle = this.element.querySelector(".ML__virtual-keyboard-toggle"), this.ariaLiveText = this.element.children[s2].children[0], this.accessibleNode = this.element.children[s2++].children[1], this.keystrokeCaptionVisible = false, this.popoverVisible = false, this.suggestionIndex = 0, this.inlineShortcutBuffer = [], this.inlineShortcutBufferFlushTimer = 0, this.mode = Yi(this.options), this.smartModeSuppressed = false, this.style = {}, this.options.readOnly || "manual" !== this.options.virtualKeyboardMode ? this.virtualKeyboardToggle.classList.remove("is-visible") : this.virtualKeyboardToggle.classList.add("is-visible"), this.options.readOnly ? this.element.classList.add("ML__isReadOnly") : this.element.classList.remove("ML__isReadOnly"), "inline-math" === this.options.defaultMode ? this.element.classList.add("ML__isInline") : this.element.classList.remove("ML__isInline"), this.element.querySelector(".ML__content").addEventListener("click", (e5) => e5.stopImmediatePropagation(), { capture: false }), this.field.addEventListener("wheel", this, { passive: false }), jo(this.virtualKeyboardToggle, (e5) => this.executeCommand(e5), { default: "toggleVirtualKeyboard", alt: "toggleVirtualKeyboardAlt", shift: "toggleVirtualKeyboardShift" }), this.blurred = true, zr(this.element, "focus", this), zr(this.element, "blur", this), this.keyboardDelegate = function(e5, t5, a4) {
                  let r4, i4 = null, o3 = null, n3 = false, s3 = false, l3 = false;
                  function d2(e6) {
                    clearTimeout(r4), r4 = setTimeout(() => {
                      clearTimeout(r4), e6();
                    });
                  }
                  function c2() {
                    if (e5.selectionStart !== e5.selectionEnd) return;
                    let t6 = e5.value;
                    e5.value = "", t6.length > 0 && a4.typedText(t6);
                  }
                  let u2 = e5;
                  return u2.addEventListener("keydown", (t6) => {
                    n3 || "Process" === t6.key || "CapsLock" === t6.code || /(Control|Meta|Alt|Shift)(Left|Right)/.test(t6.code) ? i4 = null : (i4 = t6, o3 = null, a4.keystroke(Po(t6), t6) ? "textarea" !== e5.tagName.toLowerCase() && (1 === t6.key.length && a4.typedText(t6.key), t6.preventDefault()) : (i4 = null, e5.value = ""));
                  }, true), u2.addEventListener("keypress", (e6) => {
                    n3 || (i4 && o3 && a4.keystroke(Po(i4), i4), o3 = e6, d2(c2));
                  }, true), u2.addEventListener("keyup", () => {
                    n3 || i4 && !o3 && c2();
                  }, true), u2.addEventListener("paste", (t6) => {
                    e5.focus(), e5.value = "", a4.paste(t6) || t6.preventDefault(), t6.stopImmediatePropagation();
                  }, true), u2.addEventListener("cut", (e6) => a4.cut(e6), true), u2.addEventListener("copy", (e6) => a4.copy(e6), true), u2.addEventListener("blur", (r5) => {
                    var n4, d3, c3;
                    if ((null == (d3 = null == (n4 = r5.relatedTarget) ? void 0 : n4._mathfield) ? void 0 : d3.element) === t5) return e5.focus(), r5.preventDefault(), void r5.stopPropagation();
                    let u3 = null == (c3 = Eo.scrim) ? void 0 : c3.state;
                    return "open" === u3 || "opening" === u3 || r5.relatedTarget === r5.target.getRootNode().host ? (r5.preventDefault(), void r5.stopPropagation()) : void (l3 || s3 || (l3 = true, i4 = null, o3 = null, a4.blur && a4.blur(), l3 = false, r5.stopPropagation()));
                  }, true), u2.addEventListener("focus", (t6) => {
                    l3 || s3 || (s3 = true, a4.focus && a4.focus(), No() === e5 && "function" == typeof e5.select && e5.select(), s3 = false, t6.stopPropagation());
                  }, true), u2.addEventListener("compositionstart", (t6) => {
                    n3 = true, e5.value = "", a4.compositionStart && a4.compositionStart(t6.data);
                  }, true), u2.addEventListener("compositionupdate", (e6) => {
                    n3 && a4.compositionUpdate && a4.compositionUpdate(e6.data);
                  }, true), u2.addEventListener("compositionend", (t6) => {
                    e5.value = "", n3 && (n3 = false, a4.compositionEnd && a4.compositionEnd(t6.data));
                  }, true), u2.addEventListener("beforeinput", (e6) => {
                    e6.stopImmediatePropagation();
                  }), u2.addEventListener("input", (e6) => {
                    if (!n3 && "insertCompositionText" !== e6.inputType) {
                      if ("insertFromPaste" === e6.inputType) return e6.preventDefault(), void e6.stopPropagation();
                      d2(c2), e6.preventDefault(), e6.stopPropagation();
                    }
                  }), { cancelComposition: () => {
                    let t6 = a4.blur, r5 = a4.focus;
                    a4.blur = null, a4.focus = null, e5.blur(), e5.focus(), a4.blur = t6, a4.focus = r5;
                  }, blur: () => {
                    "function" == typeof e5.blur && e5.blur();
                  }, focus: () => {
                    "function" == typeof e5.focus && e5.focus();
                  }, hasFocus: () => No() === e5, setValue: (t6) => {
                    t6 ? (e5.value = t6, No() === e5 && "function" == typeof e5.select && e5.select()) : (e5.value = "", e5.setAttribute("aria-label", ""));
                  }, setAriaLabel: (t6) => {
                    e5.setAttribute("aria-label", "after: " + t6);
                  }, moveTo: (t6, a5) => {
                    e5.style.top = `${a5}px`, e5.style.left = `${t6}px`;
                  } };
                }(l2, this.element, { typedText: (e5) => kn(this, e5), cut: (e5) => {
                  this.options.readOnly ? this.model.announce("plonk") : xi(this.model, { inputType: "deleteByCut" }) && (this.snapshot(), cr.onCopy(this, e5), setTimeout(() => {
                    xo(this.model, Qa(this.model.selection), "deleteByCut"), Oi(this);
                  }, 0));
                }, copy: (e5) => cr.onCopy(this, e5), paste: (e5) => {
                  let t5 = true;
                  return this.options.readOnly && (t5 = false), t5 && (t5 = cr.onPaste(this.model.at(this.model.position).mode, this, e5)), t5 || this.model.announce("plonk"), t5;
                }, keystroke: (e5, t5) => vn(this, e5, t5), focus: () => this.onFocus(), blur: () => this.onBlur(), compositionStart: (e5) => this.onCompositionStart(e5), compositionUpdate: (e5) => this.onCompositionUpdate(e5), compositionEnd: (e5) => this.onCompositionEnd(e5) }), L() && "PointerEvent" in window ? zr(this.field, "pointerdown", this) : zr(this.field, "touchstart:active mousedown", this), zr(window, "resize", this), window.addEventListener("blur", () => {
                  $r(this) && this.hasFocus() && window.addEventListener("focus", (e5) => {
                    e5.target === window && $r(this) && this.focus();
                  }, { once: true });
                }, { capture: true }), this.model = new class {
                  constructor(e5, t5, a4) {
                    this.options = e5, this._selection = { ranges: [[0, 0]], direction: "none" }, this._anchor = 0, this._position = 0, this.mathfield = a4, this.suppressChangeNotifications = false, this.root = new Et("root", a4, { mode: e5.mode }), this.root.body = [], this.setListeners(t5);
                  }
                  get atoms() {
                    return this.root.children;
                  }
                  get selection() {
                    return this._selection;
                  }
                  set selection(e5) {
                    this.setSelection(e5);
                  }
                  setSelection(e5, t5) {
                    return this.deferNotifications({ selection: true }, () => {
                      let a4 = this.normalizeSelection(e5, t5);
                      if (void 0 === a4) throw new TypeError("Invalid selection");
                      if (1 === a4.ranges.length && a4.ranges[0][0] === a4.ranges[0][1]) {
                        let e6 = a4.ranges[0][0];
                        this._position = e6, this._anchor = e6, this._selection = a4;
                      } else {
                        let e6 = Qa(a4);
                        "backward" === a4.direction ? [this._position, this._anchor] = e6 : [this._anchor, this._position] = e6;
                        let t6 = this.at(e6[0] + 1), r4 = this.at(e6[1]), i4 = Et.commonAncestor(t6, r4);
                        "array" === (null == i4 ? void 0 : i4.type) && t6.parent === i4 && r4.parent, this._selection = { ranges: [e6], direction: a4.direction };
                      }
                    });
                  }
                  setPositionHandlingPlaceholder(e5) {
                    var t5, a4, r4;
                    "placeholder" === (null == (t5 = this.at(e5)) ? void 0 : t5.type) ? this.setSelection(e5 - 1, e5) : "placeholder" === (null == (r4 = null == (a4 = this.at(e5)) ? void 0 : a4.rightSibling) ? void 0 : r4.type) ? this.setSelection(e5, e5 + 1) : this.position = e5;
                  }
                  getState() {
                    return { content: this.root.toJson(), selection: this.selection };
                  }
                  setState(e5, t5) {
                    var a4;
                    let r4 = this.suppressChangeNotifications;
                    this.suppressChangeNotifications = null == (a4 = null == t5 ? void 0 : t5.suppressChangeNotifications) || a4;
                    let i4 = {};
                    "undo" === (null == t5 ? void 0 : t5.type) && (i4 = { inputType: "historyUndo" }), "redo" === (null == t5 ? void 0 : t5.type) && (i4 = { inputType: "historyRedo" }), xi(this, i4) && (this.root = Va(e5.content, this.mathfield), this.selection = e5.selection, wi(this, i4)), this.suppressChangeNotifications = r4;
                  }
                  get position() {
                    return this._position;
                  }
                  set position(e5) {
                    this.setSelection(e5, e5);
                  }
                  get anchor() {
                    return this._anchor;
                  }
                  get selectionIsCollapsed() {
                    return this._anchor === this._position;
                  }
                  get selectionIsPlaceholder() {
                    return 1 === Math.abs(this._anchor - this._position) && "placeholder" === this.at(Math.max(this._anchor, this._position)).type;
                  }
                  collapseSelection(e5 = "forward") {
                    return this._anchor !== this._position && (this.position = "backward" === e5 ? Math.min(this._anchor, this._position) : Math.max(this._anchor, this._position), true);
                  }
                  get lastOffset() {
                    return this.atoms.length - 1;
                  }
                  at(e5) {
                    return this.atoms[e5];
                  }
                  offsetOf(e5) {
                    return this.atoms.indexOf(e5);
                  }
                  getSiblingsRange(e5) {
                    let t5 = this.at(e5), { parent: a4 } = t5;
                    if (!a4) return [0, this.lastOffset];
                    let r4 = t5.parent.branch(t5.treeBranch);
                    return [this.offsetOf(r4[0]), this.offsetOf(r4[r4.length - 1])];
                  }
                  getBranchRange(e5, t5) {
                    let a4 = this.at(e5).branch(t5);
                    return [this.offsetOf(a4[0]), this.offsetOf(a4[a4.length - 1])];
                  }
                  getAtoms(e5, t5, a4) {
                    let r4, i4, o3 = null != a4 ? a4 : {};
                    if (lo(e5)) {
                      if (o3 = null != t5 ? t5 : {}, e5.ranges.length > 1) return e5.ranges.reduce((e6, t6) => [...e6, ...this.getAtoms(t6, o3)], []);
                      e5 = e5.ranges[0];
                    }
                    if (no(e5)) {
                      if (r4 = e5, !no(t5)) return [];
                      i4 = t5;
                    } else [r4, i4] = e5, o3 = null != t5 ? t5 : {};
                    if (!Number.isFinite(r4)) return [];
                    void 0 === o3.includeChildren && (o3.includeChildren = false), r4 < 0 && (r4 = this.lastOffset - r4 + 1), i4 < 0 && (i4 = this.lastOffset - i4 + 1);
                    let n3 = Math.min(r4, i4) + 1, s3 = Math.max(r4, i4);
                    if (1 === n3 && s3 === this.lastOffset) return [this.root];
                    let l3 = [];
                    for (let e6 = n3; e6 <= s3; e6++) {
                      let t6 = this.atoms[e6];
                      mo(this, t6, n3, s3) && l3.push(t6);
                    }
                    return o3.includeChildren || (l3 = l3.filter((e6) => {
                      let t6 = false, { parent: a5 } = e6;
                      for (; a5 && !t6; ) t6 = mo(this, a5, n3, s3), a5 = a5.parent;
                      return !t6;
                    })), l3;
                  }
                  getAllAtoms(e5) {
                    let t5 = [], a4 = this.lastOffset;
                    for (let r4 = e5; r4 <= a4; r4++) t5.push(this.atoms[r4]);
                    for (let a5 = 0; a5 < e5; a5++) t5.push(this.atoms[a5]);
                    return t5;
                  }
                  extractAtoms(e5) {
                    let t5 = this.getAtoms(e5);
                    1 === t5.length && "root" === t5[0].type && (t5 = t5[0].children);
                    for (let e6 of t5) e6.parent.removeChild(e6);
                    return t5;
                  }
                  deleteAtoms(e5) {
                    this.extractAtoms(e5), this.position = e5[0];
                  }
                  atomToString(e5, t5) {
                    let a4 = null != t5 ? t5 : "latex";
                    if (a4.startsWith("latex")) return rt.serialize([e5], { expandMacro: "latex-expanded" === a4, skipStyles: "latex-unstyled" === a4, defaultMode: this.mathfield.options.defaultMode });
                    if ("math-ml" === a4) return wr(e5, this.mathfield.options);
                    if ("spoken" === a4) return Tr(e5, this.mathfield.options);
                    if ("spoken-text" === a4) {
                      let t6 = this.mathfield.options.textToSpeechMarkup;
                      this.mathfield.options.textToSpeechMarkup = "";
                      let a5 = Tr(e5, this.mathfield.options);
                      return this.mathfield.options.textToSpeechMarkup = t6, a5;
                    }
                    if ("spoken-ssml" === a4 || "spoken-ssml-with-highlighting" === a4) {
                      let t6 = this.mathfield.options.textToSpeechMarkup;
                      this.mathfield.options.textToSpeechMarkup = "ssml";
                      let a5 = Tr(e5, this.mathfield.options);
                      return this.mathfield.options.textToSpeechMarkup = t6, a5;
                    }
                    if ("math-json" === a4) {
                      if (!this.mathfield.computeEngine) return "";
                      try {
                        let t6 = this.mathfield.computeEngine.parse(Et.serialize(e5, { expandMacro: false, defaultMode: "math" }));
                        return JSON.stringify(t6.json);
                      } catch (e6) {
                        return JSON.stringify(["Error", "Nothing", `'${e6.toString()}'`]);
                      }
                    }
                    return "ascii-math" === a4 ? po(e5) : "";
                  }
                  getValue(e5, t5, a4) {
                    if (void 0 === e5) return this.atomToString(this.root, "latex");
                    if ("string" == typeof e5) return this.atomToString(this.root, e5);
                    let r4, i4;
                    if (no(e5) && no(t5) ? (r4 = [this.normalizeRange([e5, t5])], i4 = null != a4 ? a4 : "latex") : so(e5) ? (r4 = [this.normalizeRange(e5)], i4 = t5) : lo(e5) ? (r4 = e5.ranges, i4 = t5) : (r4 = [], i4 = "latex"), i4.startsWith("latex")) {
                      let e6 = { expandMacro: "latex-expanded" === i4, skipStyles: "latex-unstyled" === i4, defaultMode: this.mathfield.options.defaultMode };
                      return Ct(r4.map((t6) => Et.serialize(this.getAtoms(t6), e6)));
                    }
                    return r4.map((e6) => this.getAtoms(e6).map((e7) => this.atomToString(e7, i4)).join("")).join("");
                  }
                  extendSelection(e5) {
                    let t5 = this._anchor;
                    if ("forward" === e5) {
                      let e6 = this._position;
                      do {
                        let t6 = this.at(e6 + 1);
                        if (null != t6 && t6.inCaptureSelection) {
                          for (; !t6.captureSelection; ) t6 = t6.parent;
                          e6 = this.offsetOf(null == t6 ? void 0 : t6.lastChild) + 1;
                        } else e6 += 1;
                      } while (e6 <= this.lastOffset && this.at(e6).isFirstSibling);
                      return e6 === t5 - 1 && "first" === this.at(t5).type && (e6 = t5), this.extendSelectionTo(t5, e6);
                    }
                    let a4 = this._position - 1;
                    if (a4 < 0) return false;
                    for (; a4 >= 0 && this.at(a4).isLastSibling; ) {
                      let e6 = this.at(a4);
                      if (null != e6 && e6.inCaptureSelection) {
                        for (; !e6.captureSelection; ) e6 = e6.parent;
                        a4 = this.offsetOf(e6.firstChild) - 1;
                      } else a4 -= 1;
                    }
                    return a4 < 0 && (a4 = 0), a4 === t5 + 1 && "first" === this.at(a4).type && (t5 = a4), this.extendSelectionTo(t5, a4);
                  }
                  extendSelectionTo(e5, t5) {
                    return this.deferNotifications({ selection: true }, () => {
                      let a4 = this.normalizeRange([e5, t5]), [r4, i4] = a4, { parent: o3 } = this.at(i4);
                      if (o3 && ("genfrac" === o3.type || "msubsup" === o3.type)) for (; o3 !== this.root && fo(this, o3, [r4, i4]); ) i4 = this.offsetOf(o3), o3 = o3.parent;
                      for (o3 = this.at(r4).parent; o3 !== this.root && fo(this, o3, [r4, i4]); ) r4 = this.offsetOf(o3.leftSibling), o3 = o3.parent;
                      if (o3 = this.at(i4).parent, "genfrac" === (null == o3 ? void 0 : o3.type)) for (; o3 !== this.root && fo(this, o3, [r4, i4]); ) i4 = this.offsetOf(o3), o3 = o3.parent;
                      this._position = this.normalizeOffset(t5), this._selection = { ranges: [[r4, i4]], direction: "none" };
                    });
                  }
                  setListeners(e5) {
                    this.listeners = e5;
                  }
                  announce(e5, t5, a4 = []) {
                    var r4, i4;
                    (null == (i4 = null == (r4 = this.mathfield.host) ? void 0 : r4.dispatchEvent(new CustomEvent("announce", { detail: { command: e5, previousPosition: t5, atoms: a4 }, cancelable: true, bubbles: true, composed: true }))) || i4) && function(e6, t6, a5, r5) {
                      let i5 = "";
                      "plonk" === t6 ? (e6.playSound("plonk"), e6.flushInlineShortcutBuffer()) : "delete" === t6 ? i5 = ji(e6.options, "deleted: ", r5) : "focus" === t6 || t6.includes("move") ? i5 = function(e7, t7) {
                        if (Number.isNaN(t7)) return "";
                        let a6 = e7.at(t7);
                        if (!a6 || a6.treeDepth <= e7.at(e7.position).treeDepth) return "";
                        let r6 = "", i6 = a6.parent, o4 = e7.at(e7.position).parent;
                        for (; i6 !== e7.root && i6 !== o4; ) r6 += `out of ${ho(i6)};`, i6 = i6.parent;
                        return r6;
                      }(e6.model, a5) + (e6.model.selectionIsCollapsed ? "" : "selected: ") + function(e7, t7) {
                        if (!e7.selectionIsCollapsed) return ji(t7, "", e7.getAtoms(e7.selection));
                        let a6 = "", r6 = e7.at(e7.position), i6 = ho(r6);
                        return r6.isFirstSibling && (a6 = (i6 ? "start of " + i6 : "unknown") + ": "), r6.isLastSibling ? r6.isFirstSibling || (a6 += i6 ? "end of " + i6 : "unknown") : a6 += ji(t7, "", r6), a6;
                      }(e6.model, e6.options) : "replacement" === t6 ? i5 = ji(e6.options, "", e6.model.at(e6.model.position)) : "line" === t6 ? (i5 = ji(e6.options, "", e6.model.root), e6.keyboardDelegate.setAriaLabel("after: " + i5)) : i5 = r5 ? ji(e6.options, t6 + " ", r5) : t6;
                      let o3 = e6.ariaLiveText.textContent.includes(" ") ? "   " : "   ";
                      e6.ariaLiveText.textContent = i5 + o3;
                    }(this.mathfield, e5, t5, a4);
                  }
                  deferNotifications(e5, t5) {
                    let a4 = this._selection, r4 = this._anchor, i4 = this._position, o3 = this.suppressChangeNotifications;
                    this.suppressChangeNotifications = true;
                    let n3 = this.root.changeCounter;
                    t5();
                    let s3 = this.root.changeCounter !== n3, l3 = r4 !== this._anchor || i4 !== this._position || "different" === function(e6, t6) {
                      if (e6.direction === t6.direction) {
                        let a5 = e6.ranges.length;
                        if (t6.ranges.length === a5) {
                          let r5 = 0;
                          for (; r5 < a5 && "equal" === Ya(e6.ranges[r5], t6.ranges[r5]); ) r5++;
                          return r5 === a5 ? "equal" : "different";
                        }
                      }
                      return "different";
                    }(this._selection, a4);
                    return this.suppressChangeNotifications = o3, e5.content && s3 && wi(this, { data: e5.data, inputType: e5.type }), e5.selection && l3 && ki(this), s3 || l3;
                  }
                  normalizeOffset(e5) {
                    return e5 > 0 ? e5 = Math.min(e5, this.lastOffset) : e5 < 0 && (e5 = this.lastOffset + e5 + 1), e5;
                  }
                  normalizeRange(e5) {
                    let [t5, a4] = e5;
                    return t5 = this.normalizeOffset(t5), a4 = this.normalizeOffset(a4), t5 < a4 ? [t5, a4] : [a4, t5];
                  }
                  normalizeSelection(e5, t5) {
                    var a4;
                    let r4;
                    if (no(e5)) {
                      let a5 = this.normalizeOffset(e5);
                      if (no(t5)) {
                        let e6 = this.normalizeOffset(t5);
                        r4 = a5 <= e6 ? { ranges: [[a5, e6]], direction: "none" } : { ranges: [[e6, a5]], direction: "backward" };
                      } else r4 = { ranges: [[a5, a5]], direction: "none" };
                    } else if (so(e5)) {
                      let t6 = this.normalizeOffset(e5[0]), a5 = this.normalizeOffset(e5[1]);
                      r4 = t6 <= a5 ? { ranges: [[t6, a5]], direction: "none" } : { ranges: [[a5, t6]], direction: "backward" };
                    } else lo(e5) && (r4 = { ranges: e5.ranges.map((e6) => this.normalizeRange(e6)), direction: null != (a4 = e5.direction) ? a4 : "none" });
                    return r4;
                  }
                }({ mode: Yi(this.options), macros: this.options.macros, removeExtraneousParentheses: this.options.removeExtraneousParentheses }, { onSelectionDidChange: (e5) => this._onSelectionDidChange() }, this), this.undoManager = new class {
                  constructor(e5) {
                    this.recording = false, this.canCoalesce = false, this.model = e5, this.reset();
                  }
                  get maximumDepth() {
                    return 1e3;
                  }
                  reset() {
                    this.stack = [], this.index = -1;
                  }
                  startRecording() {
                    this.recording = true;
                  }
                  canUndo() {
                    return this.index > 0;
                  }
                  canRedo() {
                    return this.index !== this.stack.length - 1;
                  }
                  undo() {
                    return !!this.canUndo() && (this.model.setState(this.stack[this.index - 1], { suppressChangeNotifications: false, type: "undo" }), this.index -= 1, this.canCoalesce = false, true);
                  }
                  redo() {
                    return !!this.canRedo() && (this.index += 1, this.model.setState(this.stack[this.index], { suppressChangeNotifications: false, type: "redo" }), this.canCoalesce = false, true);
                  }
                  pop() {
                    this.canUndo() && (this.index -= 1, this.stack.pop());
                  }
                  snapshot() {
                    return !!this.recording && (this.stack.splice(this.index + 1, this.stack.length - this.index - 1), this.stack.push(this.model.getState()), this.index++, this.stack.length > this.maximumDepth && this.stack.shift(), this.canCoalesce = false, true);
                  }
                  snapshotAndCoalesce() {
                    if (!this.recording) return false;
                    this.canCoalesce && this.pop();
                    let e5 = this.snapshot();
                    return this.canCoalesce = true, e5;
                  }
                }(this.model), o2 && cr.insert("math", this.model, o2, { insertionMode: "replaceAll", selectionMode: "after", format: "latex", suppressChangeNotifications: true }), this.undoManager.startRecording(), this.undoManager.snapshot(), this.model.setListeners({ onSelectionDidChange: (e5) => this._onSelectionDidChange() }), ri && !this.options.locale.startsWith(ri.locale) && di(this.options.locale), Oi(this), L() && document.fonts.ready.then(() => Pi(this));
              }
              get audioContext() {
                return this._audioContext || (this._audioContext = new AudioContext()), this._audioContext;
              }
              get colorMap() {
                return (e4) => {
                  var t4;
                  let a3;
                  return "function" == typeof (null == (t4 = this.options) ? void 0 : t4.colorMap) && (a3 = this.options.colorMap(e4)), a3 || (a3 = F(e4)), a3;
                };
              }
              get backgroundColorMap() {
                return (e4) => {
                  var t4;
                  let a3;
                  return "function" == typeof (null == (t4 = this.options) ? void 0 : t4.backgroundColorMap) && (a3 = this.options.backgroundColorMap(e4)), !a3 && "function" == typeof this.options.colorMap && (a3 = this.options.colorMap(e4)), a3 || (a3 = R(e4)), a3;
                };
              }
              get fractionNavigationOrder() {
                var e4, t4;
                return null != (t4 = null == (e4 = this.options) ? void 0 : e4.fractionNavigationOrder) ? t4 : "numerator-denominator";
              }
              get placeholderSymbol() {
                var e4, t4;
                return null != (t4 = null == (e4 = this.options) ? void 0 : e4.placeholderSymbol) ? t4 : "▢";
              }
              get smartFence() {
                var e4, t4;
                return null != (t4 = null == (e4 = this.options) ? void 0 : e4.smartFence) && t4;
              }
              get letterShapeStyle() {
                var e4, t4;
                return null != (t4 = null == (e4 = this.options) ? void 0 : e4.letterShapeStyle) ? t4 : "tex";
              }
              get registers() {
                var e4, t4;
                return null != (t4 = null == (e4 = this.options) ? void 0 : e4.registers) ? t4 : {};
              }
              getDefinition(e4, t4 = "math") {
                return Ra(e4, t4);
              }
              getMacro(e4) {
                return Ia(e4, this.options.macros);
              }
              get virtualKeyboard() {
                if (!this.options.readOnly) return this._virtualKeyboard || (this.options.useSharedVirtualKeyboard || Un().sharedVirtualKeyboard ? this._virtualKeyboard = new class {
                  constructor(e4) {
                    var t4, a3, r3;
                    this.targetOrigin = null != (a3 = null != (t4 = e4.targetOrigin) ? t4 : globalThis.origin) ? a3 : "*", this.originValidator = null != (r3 = e4.originValidator) ? r3 : "same-origin", this._mathfield = e4.mathfield;
                  }
                  get visible() {
                    var e4, t4;
                    return null != (t4 = null == (e4 = Un().sharedVirtualKeyboard) ? void 0 : e4.visible) && t4;
                  }
                  set visible(e4) {
                    Un().sharedVirtualKeyboard && (Un().sharedVirtualKeyboard.visible = e4);
                  }
                  setOptions(e4) {
                    this.sendMessage("setOptions", { options: JSON.stringify(Bn(e4)) });
                  }
                  create() {
                  }
                  dispose() {
                    this.disable();
                  }
                  enable() {
                    this.enabled || (this.enabled = true, globalThis.addEventListener("message", this));
                  }
                  disable() {
                    this.enabled && (globalThis.removeEventListener("message", this), this.enabled = false);
                  }
                  executeCommand(e4) {
                    var t4, a3, r3;
                    return "virtual-keyboard" === Ii(e4) ? (this._mathfield && (this.setOptions(Bn(this._mathfield.getOptions())), ("showVirtualKeyboard" === e4 || "toggleVirtualKeyboard" === e4 && false === this.visible) && (null == (a3 = (t4 = this._mathfield).focus) || a3.call(t4))), this.sendMessage("executeCommand", { command: e4 }), false) : null == (r3 = this._mathfield) ? void 0 : r3.executeCommand(e4);
                  }
                  focusMathfield() {
                  }
                  blurMathfield() {
                  }
                  stateChanged() {
                  }
                  handleEvent(e4) {
                    var t4, a3, r3, i3;
                    if ("message" === e4.type && e4.data && e4.data.type === zn) {
                      if (!function(e5, t5) {
                        return "*" === e5 || "none" === t5 || ("same-origin" === t5 ? !globalThis.origin || e5 === globalThis.origin : "function" == typeof t5 && t5(e5));
                      }(e4.origin, this.originValidator)) throw new Error(`Message from unknown origin (${e4.origin}) cannot be handled`);
                      let { action: o2 } = e4.data;
                      if ("executeCommand" === o2) {
                        if ("virtual-keyboard" === Ii(e4.data.command) && window === globalThis.parent) return;
                        this.executeCommand(e4.data.command);
                      } else "updateState" === o2 ? (this.visible = e4.data.state.visible, this.height = e4.data.state.height) : "focus" === o2 ? null == (a3 = null == (t4 = this._mathfield) ? void 0 : t4.focus) || a3.call(t4) : "blur" === o2 && (null == (i3 = null == (r3 = this._mathfield) ? void 0 : r3.blur) || i3.call(r3));
                    }
                  }
                  sendMessage(e4, t4 = {}) {
                    return !!globalThis.parent && (globalThis.parent.postMessage(_({ type: zn, action: e4 }, t4), this.targetOrigin), true);
                  }
                }({ targetOrigin: this.options.sharedVirtualKeyboardTargetOrigin, originValidator: this.options.originValidator, mathfield: this }) : this._virtualKeyboard = new class {
                  constructor(e4, t4) {
                    this.originalContainerBottomPadding = null, this.options = e4, this.visible = false, this._mathfield = t4, this.coreStylesheet = null, this.virtualKeyboardStylesheet = null;
                  }
                  setOptions(e4) {
                    var t4, a3;
                    let r3 = "";
                    if (this._element) {
                      let e5 = this._element.querySelector("div.keyboard-layer.is-visible");
                      e5 && (r3 = null != (t4 = e5.getAttribute("data-layer")) ? t4 : ""), this._element.remove(), this._element = void 0;
                    }
                    if (this.options = e4, this.visible) {
                      this.buildAndAttachElement(e4.virtualKeyboardTheme);
                      let t5 = this.element.querySelector(`.keyboard-layer[data-layer="${r3}"]`);
                      t5 && (null == (a3 = this.element.querySelector(".keyboard-layer.is-visible")) || a3.classList.remove("is-visible"), t5.classList.add("is-visible")), this.element.classList.add("is-visible");
                    }
                  }
                  get element() {
                    return this._element;
                  }
                  set element(e4) {
                    var t4;
                    this._element !== e4 && (null == (t4 = this._element) || t4.remove(), this._element = e4);
                  }
                  get visible() {
                    return this._visible;
                  }
                  set visible(e4) {
                    this._visible = e4;
                  }
                  get height() {
                    var e4, t4;
                    return null != (t4 = null == (e4 = this.element) ? void 0 : e4.offsetHeight) ? t4 : 0;
                  }
                  buildAndAttachElement(e4) {
                    var t4;
                    this.element = function(e5, t5) {
                      var a3, r3, i3, o2;
                      C();
                      let n2 = '<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">\n\n    <symbol id="svg-delete-backward" viewBox="0 0 576 512">\n      <path d="M432.1 208.1L385.9 256L432.1 303C442.3 312.4 442.3 327.6 432.1 336.1C423.6 346.3 408.4 346.3 399 336.1L352 289.9L304.1 336.1C295.6 346.3 280.4 346.3 271 336.1C261.7 327.6 261.7 312.4 271 303L318.1 256L271 208.1C261.7 199.6 261.7 184.4 271 175C280.4 165.7 295.6 165.7 304.1 175L352 222.1L399 175C408.4 165.7 423.6 165.7 432.1 175C442.3 184.4 442.3 199.6 432.1 208.1V208.1zM512 64C547.3 64 576 92.65 576 128V384C576 419.3 547.3 448 512 448H205.3C188.3 448 172 441.3 160 429.3L9.372 278.6C3.371 272.6 0 264.5 0 256C0 247.5 3.372 239.4 9.372 233.4L160 82.75C172 70.74 188.3 64 205.3 64L512 64zM528 128C528 119.2 520.8 112 512 112H205.3C201 112 196.9 113.7 193.9 116.7L54.63 256L193.9 395.3C196.9 398.3 201 400 205.3 400H512C520.8 400 528 392.8 528 384V128z"/>\n    </symbol>\n\n    <symbol id="svg-shift" viewBox="0 0 384 512">\n      <path d="M2.438 252.3C7.391 264.2 19.06 272 32 272h80v160c0 26.51 21.49 48 48 48h64C250.5 480 272 458.5 272 432v-160H352c12.94 0 24.61-7.797 29.56-19.75c4.953-11.97 2.219-25.72-6.938-34.88l-160-176C208.4 35.13 200.2 32 192 32S175.6 35.13 169.4 41.38l-160 176C.2188 226.5-2.516 240.3 2.438 252.3zM192 86.63L313.4 224H224v208H160V224H70.63L192 86.63z"/>\n    </symbol>\n\n    <symbol id="svg-commit" viewBox="0 0 512 512">\n      <path d="M135 432.1l-128-128C2.344 300.3 0 294.2 0 288s2.344-12.28 7.031-16.97l128-128c9.375-9.375 24.56-9.375 33.94 0s9.375 24.56 0 33.94L81.94 264H464v-208C464 42.75 474.8 32 488 32S512 42.75 512 56V288c0 13.25-10.75 24-24 24H81.94l87.03 87.03c9.375 9.375 9.375 24.56 0 33.94S144.4 442.3 135 432.1z"/>\n    </symbol>\n\n    <symbol id="svg-command" viewBox="0 0 640 512">\n      <path d="M34.495 36.465l211.051 211.05c4.686 4.686 4.686 12.284 0 16.971L34.495 475.535c-4.686 4.686-12.284 4.686-16.97 0l-7.071-7.07c-4.686-4.686-4.686-12.284 0-16.971L205.947 256 10.454 60.506c-4.686-4.686-4.686-12.284 0-16.971l7.071-7.07c4.686-4.687 12.284-4.687 16.97 0zM640 468v-10c0-6.627-5.373-12-12-12H300c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h328c6.627 0 12-5.373 12-12z"/>\n    </symbol>\n\n    <symbol id="svg-undo" viewBox="0 0 512 512">\n      <path d="M20 8h10c6.627 0 12 5.373 12 12v110.625C85.196 57.047 165.239 7.715 256.793 8.001 393.18 8.428 504.213 120.009 504 256.396 503.786 393.181 392.834 504 256 504c-63.926 0-122.202-24.187-166.178-63.908-5.113-4.618-5.354-12.561-.482-17.433l7.069-7.069c4.503-4.503 11.749-4.714 16.482-.454C150.782 449.238 200.935 470 256 470c117.744 0 214-95.331 214-214 0-117.744-95.331-214-214-214-82.862 0-154.737 47.077-190.289 116H180c6.627 0 12 5.373 12 12v10c0 6.627-5.373 12-12 12H20c-6.627 0-12-5.373-12-12V20c0-6.627 5.373-12 12-12z"/>\n    </symbol>\n    <symbol id="svg-redo" viewBox="0 0 512 512">\n      <path d="M492 8h-10c-6.627 0-12 5.373-12 12v110.625C426.804 57.047 346.761 7.715 255.207 8.001 118.82 8.428 7.787 120.009 8 256.396 8.214 393.181 119.166 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-7.069-7.069c-4.503-4.503-11.749-4.714-16.482-.454C361.218 449.238 311.065 470 256 470c-117.744 0-214-95.331-214-214 0-117.744 95.331-214 214-214 82.862 0 154.737 47.077 190.289 116H332c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h160c6.627 0 12-5.373 12-12V20c0-6.627-5.373-12-12-12z"/>\n    </symbol>\n    <symbol id="svg-arrow-left" viewBox="0 0 320 512">\n      <path d="M206.7 464.6l-183.1-191.1C18.22 267.1 16 261.1 16 256s2.219-11.97 6.688-16.59l183.1-191.1c9.152-9.594 24.34-9.906 33.9-.7187c9.625 9.125 9.938 24.37 .7187 33.91L73.24 256l168 175.4c9.219 9.5 8.906 24.78-.7187 33.91C231 474.5 215.8 474.2 206.7 464.6z"/>\n    </symbol>\n    <symbol id="svg-arrow-right" viewBox="0 0 320 512">\n      <path d="M113.3 47.41l183.1 191.1c4.469 4.625 6.688 10.62 6.688 16.59s-2.219 11.97-6.688 16.59l-183.1 191.1c-9.152 9.594-24.34 9.906-33.9 .7187c-9.625-9.125-9.938-24.38-.7187-33.91l168-175.4L78.71 80.6c-9.219-9.5-8.906-24.78 .7187-33.91C88.99 37.5 104.2 37.82 113.3 47.41z"/>\n    </symbol>\n    <symbol id="svg-tab" viewBox="0 0 448 512">\n      <path d="M32 217.1c0-8.8 7.2-16 16-16h144v-93.9c0-7.1 8.6-10.7 13.6-5.7l143.5 143.1c6.3 6.3 6.3 16.4 0 22.7L205.6 410.4c-5 5-13.6 1.5-13.6-5.7v-93.9H48c-8.8 0-16-7.2-16-16v-77.7m-32 0v77.7c0 26.5 21.5 48 48 48h112v61.9c0 35.5 43 53.5 68.2 28.3l143.6-143c18.8-18.8 18.8-49.2 0-68L228.2 78.9c-25.1-25.1-68.2-7.3-68.2 28.3v61.9H48c-26.5 0-48 21.6-48 48zM436 64h-8c-6.6 0-12 5.4-12 12v360c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12z"/>\n    </symbol>\n    <symbol id="svg-copy" viewBox="0 0 448 512">\n      <path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM352 32.491a15.88 15.88 0 0 1 7.431 4.195l51.882 51.883A15.885 15.885 0 0 1 415.508 96H352V32.491zM288 464c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V144c0-8.822 7.178-16 16-16h80v240c0 26.51 21.49 48 48 48h112v48zm128-96c0 8.822-7.178 16-16 16H176c-8.822 0-16-7.178-16-16V48c0-8.822 7.178-16 16-16h144v72c0 13.2 10.8 24 24 24h72v240z"/>\n    </symbol>\n    <symbol id="svg-angle-double-right" viewBox="0 0 320 512">\n      <path d="M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17zm128-17l-117.8-116c-4.7-4.7-12.3-4.7-17 0l-7.1 7.1c-4.7 4.7-4.7 12.3 0 17L255.3 256 153.1 356.4c-4.7 4.7-4.7 12.3 0 17l7.1 7.1c4.7 4.7 12.3 4.7 17 0l117.8-116c4.6-4.7 4.6-12.3-.1-17z"/>\n    </symbol>\n    <symbol id="svg-angle-double-left" viewBox="0 0 320 512">\n      <path d="M153.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L192.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L153 264.5c-4.6-4.7-4.6-12.3.1-17zm-128 17l117.8 116c4.7 4.7 12.3 4.7 17 0l7.1-7.1c4.7-4.7 4.7-12.3 0-17L64.7 256l102.2-100.4c4.7-4.7 4.7-12.3 0-17l-7.1-7.1c-4.7-4.7-12.3-4.7-17 0L25 247.5c-4.6 4.7-4.6 12.3.1 17z"/>\n    </symbol>\n    <symbol id="svg-trash" viewBox="0 0 448 512">\n      <path d="M336 64l-33.6-44.8C293.3 7.1 279.1 0 264 0h-80c-15.1 0-29.3 7.1-38.4 19.2L112 64H24C10.7 64 0 74.7 0 88v2c0 3.3 2.7 6 6 6h26v368c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V96h26c3.3 0 6-2.7 6-6v-2c0-13.3-10.7-24-24-24h-88zM184 32h80c5 0 9.8 2.4 12.8 6.4L296 64H152l19.2-25.6c3-4 7.8-6.4 12.8-6.4zm200 432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V96h320v368zm-176-44V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm-80 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm160 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12z"/>\n    </symbol>\n</svg>\n        ';
                      e5.create(), Xo["foreground-color"] = [];
                      for (let e6 of Object.keys(O)) Xo["foreground-color"].push({ class: "small-button", content: '<span style="border-radius:50%;width:32px;height:32px; box-sizing: border-box; border: 3px solid ' + O[e6] + '"></span>', command: ["applyStyle", { color: e6 }] });
                      Xo["background-color"] = [];
                      for (let e6 of Object.keys(q)) Xo["background-color"].push({ class: "small-button", content: '<span style="border-radius:50%;width:32px;height:32px; background:' + q[e6] + '"></span>', command: ["applyStyle", { backgroundColor: e6 }] });
                      Uo = _({}, Xo);
                      for (let e6 of Object.keys(Uo)) Uo[e6] = Uo[e6].slice();
                      for (let e6 = 0; e6 < 26; e6++) {
                        let t6 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[e6];
                        Uo[t6] || (Uo[t6] = []), Uo[t6].unshift({ latex: "\\mathbb{" + t6 + "}", aside: "blackboard", insert: "\\mathbb{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathbf{" + t6 + "}", aside: "bold", insert: "\\mathbf{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathsf{" + t6 + "}", aside: "sans", insert: "\\mathsf{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathtt{" + t6 + "}", aside: "monospace", insert: "\\mathtt{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathcal{" + t6 + "}", aside: "calligraphy", insert: "\\mathcal{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathfrak{" + t6 + "}", aside: "fraktur", insert: "\\mathfrak{" + t6 + "}" });
                      }
                      for (let e6 = 0; e6 <= 26; e6++) {
                        let t6 = "abcdefghijklmnopqrstuvwxyz"[e6];
                        Uo[t6] || (Uo[t6] = []), Uo[t6].unshift({ latex: "\\mathsf{" + t6 + "}", aside: "sans", insert: "\\mathsf{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathbf{" + t6 + "}", aside: "bold", insert: "\\mathbf{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathtt{" + t6 + "}", aside: "monospace", insert: "\\mathtt{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathfrak{" + t6 + "}", aside: "fraktur", insert: "\\mathfrak{" + t6 + "}" });
                      }
                      for (let e6 = 0; e6 < 10; e6++) {
                        let t6 = "0123456789"[e6];
                        Uo[t6] || (Uo[t6] = []), Uo[t6].unshift({ latex: "\\mathbf{" + t6 + "}", aside: "bold", insert: "\\mathbf{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathsf{" + t6 + "}", aside: "sans", insert: "\\mathsf{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathtt{" + t6 + "}", aside: "monospace", insert: "\\mathtt{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathcal{" + t6 + "}", aside: "script", insert: "\\mathcal{" + t6 + "}" }), Uo[t6].unshift({ latex: "\\mathfrak{" + t6 + "}", aside: "fraktur", insert: "\\mathfrak{" + t6 + "}" });
                      }
                      let s2 = e5.options.virtualKeyboards;
                      s2 || (s2 = "all"), s2 = s2.replace(/\ball\b/i, "numeric functions symbols roman greek");
                      let l2 = _(_({}, Jo), null != (a3 = e5.options.customVirtualKeyboardLayers) ? a3 : {}), d2 = _(_({}, Ho), null != (r3 = e5.options.customVirtualKeyboards) ? r3 : {}), c2 = s2.replace(/\s+/g, " ").split(" ");
                      for (let t6 of c2) {
                        if (!d2[t6]) continue;
                        let a4 = null != (i3 = d2[t6].layers) ? i3 : [];
                        d2[t6].layer && a4.push(d2[t6].layer), a4 = [...new Set(a4)];
                        for (let r4 of a4) {
                          if (!l2[r4]) break;
                          if ("object" == typeof l2[r4]) {
                            let e6 = l2[r4], t7 = "";
                            if ("string" == typeof e6.styles ? t7 += `<style>${e6.styles}</style>` : "object" == typeof e6.styles && (t7 += `<style>${tn(e6.styles)}</style>`), e6.backdrop && (t7 += `<div class='${e6.backdrop}'>`), e6.container && (t7 += `<div class='${e6.container}'>`), e6.rows) {
                              t7 += "<div class='rows'>";
                              for (let a6 of e6.rows) {
                                t7 += "<ul>";
                                for (let e7 of a6) {
                                  if (t7 += "<li", e7.class) {
                                    let a7 = e7.class;
                                    e7.layer && !/layer-switch/.test(a7) && (a7 += " layer-switch"), /separator/.test(a7) || (a7 += " keycap"), t7 += ` class="${a7}"`;
                                  } else t7 += ' class="keycap"';
                                  if (e7.key && (t7 += ` data-key="${e7.key}"`), e7.command && ("string" == typeof e7.command ? t7 += ` data-command='"${e7.command}"'` : (t7 += " data-command='", t7 += JSON.stringify(e7.command), t7 += "'")), e7.insert && (t7 += ` data-insert="${e7.insert}"`), e7.latex && (t7 += ` data-latex="${e7.latex}"`), e7.aside && (t7 += ` data-aside="${e7.aside}"`), e7.variants) {
                                    let a7 = Date.now().toString(36).slice(-2) + Math.floor(1e5 * Math.random()).toString(36);
                                    Uo[a7] = e7.variants, t7 += ` data-alt-keys="${a7}"`;
                                  }
                                  e7.shifted && (t7 += ` data-shifted="${e7.shifted}"`), e7.shiftedCommand && (t7 += ` data-shifted-command="${e7.shiftedCommand}"`), e7.layer && (t7 += ` data-layer="${e7.layer}"`), t7 += `>${e7.label ? e7.label : ""}</li>`;
                                }
                                t7 += "</ul>";
                              }
                              t7 += "</div>";
                            }
                            e6.container && (t7 += "</div>"), e6.backdrop && (t7 += "</div>"), l2[r4] = t7;
                          }
                          n2 += `<div tabindex="-1" class='keyboard-layer' data-layer='${r4}'>`, n2 += Zo(e5.options, s2, t6);
                          let a5 = l2[r4];
                          "string" == typeof a5 && (n2 += Qo(e5.options, a5)), n2 += "</div>";
                        }
                      }
                      let u2 = document.createElement("div");
                      u2.className = "ML__keyboard", t5 ? u2.classList.add(t5) : e5.options.virtualKeyboardTheme && u2.classList.add(e5.options.virtualKeyboardTheme);
                      let p2 = document.createElement("div");
                      p2.className = "ML__keyboard--plate", p2.innerHTML = e5.options.createHTML(n2), u2.appendChild(p2);
                      let h2 = u2.querySelectorAll(".keycap, .action, .fnbutton, .bigfnbutton");
                      for (let e6 of h2) e6.id = "ML__k" + Date.now().toString(36).slice(-2) + Math.floor(1e5 * Math.random()).toString(36);
                      Yo(e5, [...h2]);
                      let m2 = u2.querySelectorAll(".layer-switch");
                      for (let t6 of m2) t6.classList.contains("shift") ? jo(t6, (t7) => e5.executeCommand(t7), { pressed: "shiftKeyboardLayer", default: ["switchKeyboardLayer", t6.getAttribute("data-layer")], pressAndHoldEnd: "unshiftKeyboardLayer" }) : jo(t6, (t7) => e5.executeCommand(t7), { default: ["switchKeyboardLayer", t6.getAttribute("data-layer")] });
                      let f2 = u2.querySelectorAll(".keyboard-layer");
                      for (let e6 of f2) e6.addEventListener("mousedown", (e7) => {
                        e7.preventDefault(), e7.stopPropagation();
                      }), e6.addEventListener("touchstart", (e7) => {
                        e7.preventDefault(), e7.stopPropagation();
                      }, { passive: false });
                      return null == (o2 = f2[0]) || o2.classList.add("is-visible"), u2;
                    }(this, null != e4 ? e4 : ""), zr(this.element, "touchstart:passive mousedown", () => this.focusMathfield()), null == (t4 = this.options.virtualKeyboardContainer) || t4.appendChild(this.element);
                  }
                  handleEvent(e4) {
                    if (this.element) switch (e4.type) {
                      case "mouseup":
                      case "blur":
                      case "touchend":
                      case "touchcancel":
                        document.body.style.userSelect = "", en(this);
                    }
                  }
                  focusMathfield() {
                    var e4, t4;
                    null == (t4 = null == (e4 = this._mathfield) ? void 0 : e4.focus) || t4.call(e4);
                  }
                  blurMathfield() {
                    var e4, t4;
                    null == (t4 = null == (e4 = this._mathfield) ? void 0 : e4.blur) || t4.call(e4);
                  }
                  stateChanged() {
                    var e4, t4;
                    null == (t4 = null == (e4 = this._mathfield) ? void 0 : e4.element) || t4.dispatchEvent(new Event("virtual-keyboard-toggle", { bubbles: true, cancelable: false, composed: true }));
                  }
                  executeCommand(e4) {
                    var t4, a3, r3;
                    let i3, o2 = [];
                    return M(e4) ? (i3 = e4[0], o2 = e4.slice(1)) : i3 = e4, i3 = i3.replace(/-\w/g, (e5) => e5[1].toUpperCase()), "virtual-keyboard" === (null == (t4 = Fi[i3]) ? void 0 : t4.target) ? Fi[i3].fn(this, ...o2) : null != (r3 = null == (a3 = this._mathfield) ? void 0 : a3.executeCommand(e4)) && r3;
                  }
                  create() {
                    this.virtualKeyboardStylesheet || (Ro || (Ro = Qr(Io).toString(36)), this.virtualKeyboardStylesheet = ei(null, Io, Ro)), this.coreStylesheet || (this.coreStylesheet = ei(null, vi, Qr(vi).toString(36))), null !== this.options.fontsDirectory && oo(this.options.fontsDirectory);
                  }
                  enable() {
                    L() && (window.addEventListener("mouseup", this), window.addEventListener("blur", this), window.addEventListener("touchend", this), window.addEventListener("touchcancel", this));
                  }
                  disable() {
                    L() && (window.removeEventListener("mouseup", this), window.removeEventListener("blur", this), window.removeEventListener("touchend", this), window.removeEventListener("touchcancel", this));
                  }
                  dispose() {
                  }
                }(this.options, this)), this._virtualKeyboard;
              }
              get computeEngine() {
                var e4, t4;
                if (void 0 === this._computeEngine) {
                  let t5 = null == (e4 = globalThis[Symbol.for("io.cortexjs.compute-engine")]) ? void 0 : e4.ComputeEngine;
                  t5 && (this._computeEngine = new t5()), this._computeEngine && "," === this.options.decimalSeparator && (this._computeEngine.latexOptions.decimalMarker = "{,}");
                }
                return null != (t4 = this._computeEngine) ? t4 : null;
              }
              get virtualKeyboardState() {
                var e4;
                return null != (e4 = this.virtualKeyboard) && e4.visible ? "visible" : "hidden";
              }
              set virtualKeyboardState(e4) {
                this.virtualKeyboard && ("hidden" === e4 ? this.virtualKeyboard.executeCommand("hideVirtualKeyboard") : "visible" === e4 && this.virtualKeyboard.executeCommand("showVirtualKeyboard"));
              }
              get keybindings() {
                var e4, t4;
                if (this._keybindings) return this._keybindings;
                let [a3, r3] = function(e5, t5) {
                  let a4 = [], r4 = [];
                  for (let i3 of e5) try {
                    let e6 = yi(i3, t5);
                    if (e6) {
                      let r5 = a4.filter((t6) => t6.key === e6.key && t6.ifMode === e6.ifMode);
                      if (r5.length > 0) throw new Error(`Ambiguous key binding ${i3.key} (${bi(i3.command)}) matches ${r5[0].key} (${bi(r5[0].command)}) with the ${t5.displayName} keyboard layout`);
                      a4.push(e6);
                    }
                  } catch (e6) {
                    e6 instanceof Error && r4.push(e6.message);
                  }
                  return [a4, r4];
                }(this.options.keybindings, null != (e4 = ci()) ? e4 : ii);
                return (null == (t4 = ci()) ? void 0 : t4.score) > 0 && (this._keybindings = a3, r3.length), a3;
              }
              setOptions(e4) {
                var t4, a3;
                if (this.options = Ui(this.options, e4), "computeEngine" in e4 && (this._computeEngine = this.options.computeEngine), this._computeEngine && "decimalSeparator" in e4 && (this._computeEngine.latexOptions.decimalMarker = "," === this.options.decimalSeparator ? "{,}" : "."), this.model.setListeners({ onSelectionDidChange: (e5) => this._onSelectionDidChange() }), this.model.options.macros = this.options.macros, ri && !this.options.locale.startsWith(ri.locale) && di(this.options.locale), this._keybindings = void 0, ("soundsDirectory" in e4 || "plonkSound" in e4 || "keypressSound" in e4 || "spacebarKeypressSound" in e4 || "returnKeypressSound" in e4 || "deleteKeypressSound" in e4) && (this.audioBuffers = {}), "inline-math" === this.options.defaultMode ? this.element.classList.add("ML__isInline") : this.element.classList.remove("ML__isInline"), this.options.readOnly ? (this.hasFocus() && "visible" === this.virtualKeyboardState && this.executeCommand("hideVirtualKeyboard"), this.onBlur(), this.element.classList.add("ML__isReadOnly")) : this.element.classList.remove("ML__isReadOnly"), null == (t4 = this.virtualKeyboard) || t4.setOptions(this.options), this.options.readOnly || "manual" !== this.options.virtualKeyboardMode ? this.virtualKeyboardToggle.classList.remove("is-visible") : this.virtualKeyboardToggle.classList.add("is-visible"), "virtualKeyboardToggleGlyph" in e4) {
                  let e5 = null == (a3 = this.element) ? void 0 : a3.querySelector(".ML__virtual-keyboard-toggle");
                  e5 && (e5.innerHTML = this.options.createHTML(this.options.virtualKeyboardToggleGlyph));
                }
                let r3 = Et.serialize(this.model.root, { expandMacro: false, defaultMode: this.options.defaultMode });
                ("macros" in e4 || this.model.getValue() !== r3) && cr.insert("math", this.model, r3, { insertionMode: "replaceAll", selectionMode: "after", format: "latex", suppressChangeNotifications: true }), Oi(this);
              }
              getOptions(e4) {
                return Ji(this.options, e4);
              }
              getOption(e4) {
                return Ji(this.options, e4);
              }
              handleEvent(e4) {
                if ($r(this)) switch (e4.type) {
                  case "focus":
                    this.onFocus();
                    break;
                  case "blur":
                    this.onBlur();
                    break;
                  case "touchstart":
                  case "mousedown":
                  case "pointerdown":
                    !function(e5, t4) {
                      var a3;
                      e5.atomBoundsCache = /* @__PURE__ */ new Map();
                      let r3, i3 = e5, o2 = false, n2 = false, s2 = "none";
                      if (Ln(t4) && t4.buttons > 1) return;
                      let l2 = false, d2 = false, c2 = Mn(t4) ? t4.touches[0].clientX : t4.clientX, u2 = Mn(t4) ? t4.touches[0].clientY : t4.clientY, p2 = Date.now(), h2 = i3.field, m2 = setInterval(() => {
                        l2 ? h2.scroll({ top: 0, left: h2.scrollLeft - 16 }) : d2 && h2.scroll({ top: 0, left: h2.scrollLeft + 16 });
                      }, 32);
                      function f2(t5) {
                        L() && ("PointerEvent" in window ? (Br(h2, "pointermove", y2), Br(h2, "pointerup pointercancel", f2), t5 instanceof PointerEvent && h2.releasePointerCapture(t5.pointerId)) : (Br(h2, "touchmove", y2), Br(h2, "touchcancel touchend", f2), Br(window, "mousemove", y2), Br(window, "mouseup blur", f2)), o2 = false, clearInterval(m2), e5.element.classList.remove("tracking"), t5 && t5.preventDefault());
                      }
                      function y2(t5) {
                        if (!i3.hasFocus()) return void f2(null);
                        let a4 = Mn(t5) ? t5.touches[0].clientX : t5.clientX, o3 = Mn(t5) ? t5.touches[0].clientY : t5.clientY, n3 = Mn(t5) || "touch" === t5.pointerType ? 20 : 5;
                        if (Date.now() < p2 + 500 && Math.abs(c2 - a4) < n3 && Math.abs(u2 - o3) < n3) return t5.preventDefault(), void t5.stopPropagation();
                        let s3 = h2.getBoundingClientRect();
                        d2 = a4 > s3.right, l2 = a4 < s3.left;
                        let m3 = r3;
                        Ln(t5) ? t5.isPrimary || (m3 = Tn(i3, t5.clientX, t5.clientY, { bias: 0 })) : t5.touches && 2 === t5.touches.length && (m3 = Tn(i3, t5.touches[1].clientX, t5.touches[1].clientY, { bias: 0 }));
                        let y3 = Tn(i3, a4, o3, { bias: a4 <= c2 ? a4 === c2 ? 0 : -1 : 1 });
                        m3 >= 0 && y3 >= 0 && (i3.model.extendSelectionTo(m3, y3), Oi(e5)), t5.preventDefault(), t5.stopPropagation();
                      }
                      _n && Math.abs(_n.x - c2) < 5 && Math.abs(_n.y - u2) < 5 && Date.now() < _n.time + 500 ? (Sn += 1, _n.time = p2) : (_n = { x: c2, y: u2, time: p2 }, Sn = 1);
                      let b2 = h2.getBoundingClientRect();
                      if (c2 >= b2.left && c2 <= b2.right && u2 >= b2.top && u2 <= b2.bottom) {
                        if (e5.hasFocus() || (s2 = "all", e5.focus({ scrollIntoView: false })), e5.flushInlineShortcutBuffer(), e5.smartModeSuppressed = false, r3 = Tn(e5, c2, u2, { bias: 0 }), r3 >= 0) {
                          if (e5.element.classList.add("tracking"), t4.shiftKey) {
                            let t5 = e5.model.selectionIsCollapsed;
                            e5.model.extendSelectionTo(e5.model.anchor, r3), s2 = Ci(e5.model) || t5 ? "all" : "selection";
                          } else "placeholder" === e5.model.at(r3).type ? (e5.model.setSelection(r3 - 1, r3), s2 = "selection") : "placeholder" === (null == (a3 = e5.model.at(r3).rightSibling) ? void 0 : a3.type) ? (e5.model.setSelection(r3, r3 + 1), s2 = "selection") : (e5.model.position = r3, s2 = Ci(e5.model) ? "all" : "selection");
                          e5.style = {}, 3 === t4.detail || Sn > 2 ? (f2(t4), (3 === t4.detail || 3 === Sn) && (e5.model.selection = { ranges: [[0, e5.model.lastOffset]] }, s2 = "all")) : o2 || (o2 = true, L() && "PointerEvent" in window ? (zr(h2, "pointermove", y2), zr(h2, "pointerup pointercancel", f2), t4 instanceof PointerEvent && h2.setPointerCapture(t4.pointerId)) : (zr(window, "blur", f2), Mn(t4) && t4.touches ? (zr(t4.target, "touchmove", y2), zr(t4.target, "touchcancel touchend", f2)) : (zr(window, "mousemove", y2), zr(window, "mouseup", f2))), (2 === t4.detail || 2 === Sn) && (n2 = true, Ko(e5.model), s2 = "all"));
                        }
                      } else _n = null;
                      "none" !== s2 && (e5.model.selectionIsCollapsed && (s2 = "all"), Oi(e5)), t4.preventDefault();
                    }(this, e4);
                    break;
                  case "resize":
                    this.resizeTimer && cancelAnimationFrame(this.resizeTimer), this.resizeTimer = requestAnimationFrame(() => $r(this) && this.onResize());
                    break;
                  case "wheel":
                    this.onWheel(e4);
                }
              }
              dispose() {
                if (!$r(this)) return;
                let e4 = this.element;
                delete this.element, delete e4.mathfield, e4.innerHTML = this.model.getValue(), Br(e4, "pointerdown", this), Br(e4, "touchstart:active mousedown", this), Br(e4, "focus", this), Br(e4, "blur", this), Br(window, "resize", this), window.removeEventListener("blur", this, { capture: true }), delete this.accessibleNode, delete this.ariaLiveText, delete this.field, delete this.fieldContent, this.virtualKeyboardToggle.remove(), delete this.virtualKeyboardToggle, this._virtualKeyboard && (this._virtualKeyboard.dispose(), delete this._virtualKeyboard), Er(this.popover), Ti && Ti.release(), zi && zi.release(), delete this.popover, function(e5) {
                  Er(e5.keystrokeCaption), un && un.release(), pn && pn.release(), delete e5.keystrokeCaption;
                }(this), this.stylesheets.forEach((e5) => null == e5 ? void 0 : e5.release());
              }
              flushInlineShortcutBuffer(e4) {
                if (null != e4 || (e4 = { defer: false }), !e4.defer) return this.inlineShortcutBuffer = [], clearTimeout(this.inlineShortcutBufferFlushTimer), void (this.inlineShortcutBufferFlushTimer = 0);
                this.options.inlineShortcutTimeout > 0 && (clearTimeout(this.inlineShortcutBufferFlushTimer), this.inlineShortcutBufferFlushTimer = setTimeout(() => this.flushInlineShortcutBuffer(), this.options.inlineShortcutTimeout));
              }
              executeCommand(e4) {
                var t4, a3;
                return "virtual-keyboard" === Ii(e4) ? null != (a3 = null == (t4 = this.virtualKeyboard) ? void 0 : t4.executeCommand(e4)) && a3 : function(e5, t5) {
                  var a4, r3, i3;
                  if (!t5) return false;
                  let o2, n2 = [], s2 = false, l2 = false;
                  M(t5) ? (o2 = t5[0], n2 = t5.slice(1)) : o2 = t5, o2 = o2.replace(/-\w/g, (e6) => e6[1].toUpperCase());
                  let d2 = null == (a4 = Fi[o2]) ? void 0 : a4.target;
                  if ("model" === d2) {
                    if (e5.options.readOnly && /^(paste|cut|insert|delete|transpose|add)/.test(o2)) return e5.model.announce("plonk"), false;
                    /^(delete|transpose|add)/.test(o2) && "deleteBackward" !== o2 && e5.flushInlineShortcutBuffer(), /^(delete|transpose|add)/.test(o2) && "latex" !== e5.mode && (e5.popUndoStack(), e5.snapshot()), "latex" === e5.mode && !/^(complete)/.test(o2) && Mi(e5), Fi[o2].fn(e5.model, ...n2), "latex" !== e5.mode && /^(delete|transpose|add)/.test(o2) && e5.snapshot(), "latex" === e5.mode && Li(e5), l2 = true, s2 = true;
                  } else if ("virtual-keyboard" === d2) l2 = null != (i3 = null == (r3 = e5.virtualKeyboard) ? void 0 : r3.executeCommand(t5)) && i3, s2 = true;
                  else {
                    if (!Fi[o2]) throw new Error(`Unknown command "${o2}"`);
                    /^(undo|redo)/.test(o2) && e5.flushInlineShortcutBuffer(), l2 = Fi[o2].fn(e5, ...n2), s2 = true;
                  }
                  return "virtual-keyboard" !== d2 && (!e5.model.selectionIsCollapsed || /^(transpose|paste|complete|((moveToNextChar|moveToPreviousChar|extend).*))_$/.test(o2)) && (e5.flushInlineShortcutBuffer(), e5.style = {}), l2 && Oi(e5), s2;
                }(this, e4);
              }
              get errors() {
                return function(e4, t4, a3) {
                  var r3;
                  let i3 = new ca(Lt(e4, null), t4, { args: null, mathstyle: "displaystyle", parseMode: null != (r3 = null == a3 ? void 0 : a3.parseMode) ? r3 : "math" });
                  for (; !i3.end(); ) i3.parse();
                  return i3.errors;
                }(this.model.getValue(), this);
              }
              getValue(e4, t4, a3) {
                return this.model.getValue(e4, t4, a3);
              }
              setValue(e4, t4) {
                var a3;
                void 0 === (t4 = null != t4 ? t4 : { mode: "math" }).insertionMode && (t4.insertionMode = "replaceAll"), (void 0 === t4.format || "auto" === t4.format) && (t4.format = "latex");
                let r3 = "math";
                (void 0 === t4.mode || "auto" === t4.mode) && (r3 = null != (a3 = wo(this.model, this.model.position)) ? a3 : "math"), cr.insert(r3, this.model, e4, t4) && (this.undoManager.snapshot(), Oi(this));
              }
              get expression() {
                let e4 = this.computeEngine;
                return e4 ? e4.box(e4.parse(this.model.getValue())) : null;
              }
              async loadSound(e4) {
                var t4, a3, r3, i3, o2, n2, s2;
                delete this.audioBuffers[e4];
                let l2 = "";
                switch (e4) {
                  case "keypress":
                    l2 = "string" == typeof this.options.keypressSound ? this.options.keypressSound : null == (t4 = this.options.keypressSound) ? void 0 : t4.default;
                    break;
                  case "spacebar":
                    l2 = "string" == typeof this.options.keypressSound ? this.options.keypressSound : null != (i3 = null == (a3 = this.options.keypressSound) ? void 0 : a3.spacebar) ? i3 : null == (r3 = this.options.keypressSound) ? void 0 : r3.default;
                    break;
                  case "delete":
                    l2 = "string" == typeof this.options.keypressSound ? this.options.keypressSound : null != (s2 = null == (o2 = this.options.keypressSound) ? void 0 : o2.delete) ? s2 : null == (n2 = this.options.keypressSound) ? void 0 : n2.default;
                    break;
                  case "plonk":
                    l2 = this.options.plonkSound;
                }
                if ("string" != typeof l2) return;
                l2 = l2.trim();
                let d2 = this.options.soundsDirectory;
                if (null == d2 || "null" === d2 || "none" === l2 || "null" === l2) return;
                let c2 = await (await fetch(await io(d2 + "/" + l2))).arrayBuffer(), u2 = await this.audioContext.decodeAudioData(c2);
                this.audioBuffers[e4] = u2;
              }
              async playSound(e4) {
                if (this.audioBuffers[e4] || await this.loadSound(e4), !this.audioBuffers[e4]) return;
                let t4 = this.audioContext.createBufferSource();
                t4.buffer = this.audioBuffers[e4];
                let a3 = this.audioContext.createGain();
                a3.gain.value = 0.5, t4.connect(a3).connect(this.audioContext.destination), t4.start();
              }
              scrollIntoView() {
                var e4;
                if (!this.element) return;
                null == (e4 = this.host) || e4.scrollIntoView({ block: "nearest", inline: "nearest" }), this.dirty && Pi(this, { interactive: true });
                let t4 = this.field.getBoundingClientRect(), a3 = null;
                if (this.model.selectionIsCollapsed) a3 = qr(this.field);
                else {
                  let e5 = Rr(this);
                  if (e5.length > 0) {
                    let r3 = -1 / 0, i3 = -1 / 0;
                    for (let t5 of e5) t5.right > r3 && (r3 = t5.right), t5.top < i3 && (i3 = t5.top);
                    a3 = { x: r3 + t4.left - this.field.scrollLeft, y: i3 + t4.top - this.field.scrollTop, height: 0 };
                  }
                }
                if (this.host && a3) {
                  let e5 = this.host.getBoundingClientRect(), t5 = a3.y, r3 = this.host.scrollTop;
                  t5 < e5.top ? r3 = t5 - e5.top + this.host.scrollTop : t5 > e5.bottom && (r3 = t5 - e5.bottom + this.host.scrollTop + a3.height), this.host.scroll({ top: r3, left: 0 });
                }
                if (a3) {
                  let e5 = a3.x - window.scrollX, r3 = this.field.scrollLeft;
                  e5 < t4.left ? r3 = e5 - t4.left + this.field.scrollLeft - 20 : e5 > t4.right && (r3 = e5 - t4.right + this.field.scrollLeft + 20), this.field.scroll({ top: this.field.scrollTop, left: r3 });
                }
              }
              insert(e4, t4) {
                if ("string" == typeof e4 && e4.length > 0) {
                  if (this.flushInlineShortcutBuffer(), (t4 = null != t4 ? t4 : { mode: "math" }).focus && this.focus(), t4.feedback && (this.options.keypressVibration && D() && navigator.vibrate(3), this.playSound("keypress")), t4.scrollIntoView && this.scrollIntoView(), "\\\\" === e4) bo(this.model);
                  else if ("&" === e4) go(this.model);
                  else {
                    let a3 = this.style;
                    cr.insert(this.mode, this.model, e4, _({ style: this.model.at(this.model.position).computedStyle }, t4)), t4.resetStyle && (this.style = a3);
                  }
                  return this.undoManager.snapshot(), Oi(this), true;
                }
                return false;
              }
              switchMode(e4, t4 = "", a3 = "") {
                var r3;
                if (this.mode === e4 || this.options.readOnly || null == (r3 = this.host) || !r3.dispatchEvent(new Event("mode-change", { bubbles: true, composed: true, cancelable: true }))) return;
                let i3 = this.mode, { model: o2 } = this;
                o2.deferNotifications({ content: Boolean(a3) || Boolean(t4), selection: true, type: "insertText" }, () => {
                  let r4 = false;
                  if (this.flushInlineShortcutBuffer(), this.smartModeSuppressed = /text|math/.test(this.mode) && /text|math/.test(e4), t4 && "latex" !== e4) {
                    let a4 = ua(t4, this, { parseMode: e4 });
                    o2.collapseSelection("forward");
                    let i4 = o2.at(o2.position);
                    o2.position = o2.offsetOf(i4.parent.addChildrenAfter(a4, i4)), r4 = true;
                  }
                  if (this.mode = e4, "latex" === e4) {
                    let e5 = o2.selectionIsCollapsed;
                    Ai(this, "accept");
                    let a4, r5 = o2.at(o2.position);
                    if (e5) a4 = "\\";
                    else {
                      let i5 = Qa(o2.selection);
                      a4 = this.model.getValue(i5, "latex");
                      let n2 = this.model.extractAtoms(i5);
                      1 === n2.length && n2[0] instanceof oa && (a4 = t4, e5 = true), r5 = o2.at(i5[0]);
                    }
                    let i4 = new Da(a4, this);
                    r5.parent.addChildAfter(i4, r5), e5 ? o2.position = o2.offsetOf(i4.lastChild) : o2.setSelection(o2.offsetOf(i4.firstChild), o2.offsetOf(i4.lastChild));
                  } else _i(o2).forEach((e5) => {
                    e5.isError = false;
                  });
                  if (a3) {
                    let e5 = ua(a3, this, { parseMode: i3 });
                    o2.collapseSelection("forward");
                    let t5 = o2.at(o2.position);
                    o2.position = o2.offsetOf(t5.parent.addChildrenAfter(e5, t5)), r4 = true;
                  }
                  return Oi(this), r4;
                }), this.mode = e4;
              }
              hasFocus() {
                return L() && this.keyboardDelegate.hasFocus();
              }
              focus(e4) {
                var t4;
                this.keyboardDelegate.focus(), this.model.announce("line"), (null == (t4 = null == e4 ? void 0 : e4.scrollIntoView) || t4) && this.scrollIntoView();
              }
              blur() {
                this.keyboardDelegate.blur();
              }
              select() {
                this.model.selection = { ranges: [[0, this.model.lastOffset]] };
              }
              applyStyle(e4, t4 = {}) {
                var a3, r3;
                let i3 = { operation: "set", suppressChangeNotifications: false };
                so(t4) ? i3.range = t4 : (i3.range = t4.range, i3.suppressChangeNotifications = null != (a3 = t4.suppressChangeNotifications) && a3);
                let o2 = wn(this, e4), n2 = null != (r3 = i3.operation) ? r3 : "set";
                this.model.deferNotifications({ content: !i3.suppressChangeNotifications, type: "insertText" }, () => {
                  void 0 === i3.range ? this.model.selection.ranges.forEach((e5) => So(this.model, e5, o2, { operation: n2 })) : So(this.model, i3.range, o2, { operation: n2 });
                }), Oi(this);
              }
              getCaretPoint() {
                let e4 = qr(this.field);
                return e4 ? { x: e4.x, y: e4.y } : null;
              }
              setCaretPoint(e4, t4) {
                let a3 = Tn(this, e4, t4, { bias: 0 });
                if (a3 < 0) return false;
                let r3 = this.model.position;
                return this.model.position = a3, this.model.announce("move", r3), Oi(this), true;
              }
              getPlaceholderField(e4) {
                var t4;
                return null == (t4 = this.placeholders.get(e4)) ? void 0 : t4.field;
              }
              attachNestedMathfield() {
                let e4 = false, t4 = this.field.getBoundingClientRect();
                this.placeholders.forEach((a3, r3) => {
                  var i3, o2;
                  let n2 = this.field.querySelector(`[data-placeholder-id=${r3}]`);
                  if (!n2) return;
                  let s2 = n2.getBoundingClientRect(), l2 = s2.left - t4.left + (null != (i3 = this.element.offsetLeft) ? i3 : 0);
                  (!a3.field.style.left || Math.abs(l2 - parseFloat(a3.field.style.left)) >= 1) && (e4 = true, a3.field.style.left = `${l2}px`);
                  let d2 = s2.top - t4.top + (null != (o2 = this.element.offsetTop) ? o2 : 0);
                  (!a3.field.style.top || Math.abs(d2 - parseFloat(a3.field.style.top)) >= 1) && (e4 = true, a3.field.style.top = `${d2}px`);
                }), e4 && Oi(this);
              }
              canUndo() {
                return this.undoManager.canUndo();
              }
              canRedo() {
                return this.undoManager.canRedo();
              }
              popUndoStack() {
                this.undoManager.pop();
              }
              snapshot() {
                var e4, t4;
                this.undoManager.snapshot() && (null == (e4 = this.virtualKeyboard) || e4.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null == (t4 = this.host) || t4.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "snapshot" } })));
              }
              snapshotAndCoalesce() {
                var e4, t4;
                this.undoManager.snapshotAndCoalesce() && (null == (e4 = this.virtualKeyboard) || e4.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null == (t4 = this.host) || t4.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "snapshot" } })));
              }
              undo() {
                var e4, t4;
                this.undoManager.undo() && (null == (e4 = this.virtualKeyboard) || e4.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null == (t4 = this.host) || t4.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "undo" } })));
              }
              redo() {
                var e4, t4;
                this.undoManager.redo() && (null == (e4 = this.virtualKeyboard) || e4.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null == (t4 = this.host) || t4.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "undo" } })));
              }
              resetUndo() {
                var e4;
                null == (e4 = this.undoManager) || e4.reset();
              }
              _onSelectionDidChange() {
                var e4, t4, a3;
                this.keyboardDelegate.setValue(this.model.getValue(this.model.selection, "latex-expanded"));
                let r3 = this.model.getAtoms(this.model.selection);
                if (1 === r3.length && "placeholder" === r3[0].type) {
                  let t5 = r3[0];
                  this.model.mathfield.placeholders.has(t5.placeholderId) && (null == (e4 = this.model.mathfield.placeholders.get(t5.placeholderId)) || e4.field.focus());
                }
                {
                  let e5 = this.model.at(this.model.position), a4 = null != (t4 = e5.mode) ? t4 : Yi(this.options);
                  this.mode !== a4 && ("latex" === this.mode ? (Ai(this, "accept", { mode: a4 }), this.model.position = this.model.offsetOf(e5)) : this.switchMode(a4));
                }
                null == (a3 = this.host) || a3.dispatchEvent(new Event("selection-change", { bubbles: true, composed: true }));
              }
              onFocus() {
                var e4, t4, a3;
                this.focusBlurInProgress || !this.blurred || (this.focusBlurInProgress = true, this.blurred = false, this.keyboardDelegate.focus(), null == (e4 = this.virtualKeyboard) || e4.setOptions(this.options), null == (t4 = this.virtualKeyboard) || t4.enable(), "onfocus" === this.options.virtualKeyboardMode && this.executeCommand("showVirtualKeyboard"), Ki(this), Pi(this, { interactive: true }), null == (a3 = this.host) || a3.dispatchEvent(new Event("focus", { bubbles: false, composed: true })), this.valueOnFocus = this.model.getValue(), this.focusBlurInProgress = false);
              }
              onBlur() {
                var e4, t4;
                this.focusBlurInProgress || this.blurred || (this.focusBlurInProgress = true, this.blurred = true, this.ariaLiveText.textContent = "", Ai(this, "accept"), this.model.getValue() !== this.valueOnFocus && this.executeCommand("commit"), /onfocus|manual/.test(this.options.virtualKeyboardMode) && !Un().sharedVirtualKeyboard && this.executeCommand("hideVirtualKeyboard"), null == (e4 = this.virtualKeyboard) || e4.disable(), null == (t4 = this.host) || t4.dispatchEvent(new Event("blur", { bubbles: false, composed: true })), Oi(this), this.focusBlurInProgress = false);
              }
              onCompositionStart(e4) {
                this.model.deleteAtoms(Qa(this.model.selection)), requestAnimationFrame(() => {
                  Pi(this);
                  let e5 = qr(this.field);
                  e5 && this.keyboardDelegate.moveTo(e5.x, e5.y);
                });
              }
              onCompositionUpdate(e4) {
                (function(e5, t4) {
                  let a3 = e5.at(e5.position);
                  if ("composition" === a3.type) a3.value = t4;
                  else {
                    let { caret: r3 } = a3;
                    a3.caret = "";
                    let i3 = new va(t4, e5.mathfield, { mode: a3.mode });
                    i3.caret = r3, a3.parent.addChildAfter(i3, a3), e5.position += 1;
                  }
                })(this.model, e4), Oi(this);
              }
              onCompositionEnd(e4) {
                (function(e5) {
                  let t4 = e5.at(e5.position);
                  "composition" === t4.type && (t4.parent.removeChild(t4), e5.position -= 1);
                })(this.model), kn(this, e4, { simulateKeystroke: true });
              }
              onResize() {
                Ki(this);
              }
              onWheel(e4) {
                let t4 = 5 * e4.deltaX;
                if (!Number.isFinite(t4) || 0 === t4) return;
                let a3 = this.field;
                t4 < 0 && 0 === a3.scrollLeft || t4 > 0 && a3.offsetWidth + a3.scrollLeft >= a3.scrollWidth || (a3.scrollBy({ top: 0, left: t4 }), e4.preventDefault(), e4.stopPropagation());
              }
              getHTMLElement(e4) {
                let t4 = e4;
                for (; !t4.id && t4.hasChildren; ) t4 = e4.children[0];
                if (t4.id) return this.element.querySelector(`[data-atom-id="${t4.id}"]`);
                throw new TypeError("Could not get an ID from atom");
              }
            }(this.shadowRoot.querySelector(":host > div"), S(_({}, qn.has(this) ? qn.get(this).options : Nn(this)), { eventSink: this, value: i2 })), !qn.has(this)) {
              this.upgradeProperty("disabled"), this.upgradeProperty("readonly");
              for (let e4 of Object.keys(On.optionsAttributes)) this.upgradeProperty(Pn(e4));
            }
            null != (a2 = this._mathfield) && a2.model ? (qn.has(this) && this._mathfield.model.deferNotifications({ content: false, selection: false }, () => {
              let e4 = qn.get(this).value;
              void 0 !== e4 && this._mathfield.setValue(e4), this._mathfield.model.selection = qn.get(this).selection, qn.delete(this);
            }), r2.addEventListener("slotchange", (e4) => {
              if (e4.target !== r2) return;
              let t4 = r2.assignedNodes().map((e5) => 3 === e5.nodeType ? e5.textContent : "").join("").trim();
              t4 !== this._slotValue && (this._mathfield ? this._mathfield.setValue(t4) : this.value = t4);
            }), this.dispatchEvent(new Event("mount", { cancelable: false, bubbles: true, composed: true }))) : this._mathfield = null;
          }
          disconnectedCallback() {
            if (this.dispatchEvent(new Event("unmount", { cancelable: false, bubbles: true, composed: true })), !this._mathfield) return;
            let e3 = Ji(this._mathfield.options, Object.keys(On.optionsAttributes).map((e4) => Pn(e4)));
            qn.set(this, { value: this._mathfield.getValue(), selection: this._mathfield.model.selection, options: e3 }), this._mathfield.dispose(), this._mathfield = null;
          }
          upgradeProperty(e3) {
            if (this.hasOwnProperty(e3)) {
              let t3 = this[e3];
              delete this[e3], ("readonly" === e3 || "read-only" === e3) && (e3 = "readOnly"), this[e3] = t3;
            }
          }
          attributeChangedCallback(e3, t3, a2) {
            if (t3 === a2) return;
            let r2 = null !== a2;
            switch (e3) {
              case "disabled":
                this.disabled = r2;
                break;
              case "read-only":
              case "readonly":
                this.readOnly = r2;
            }
          }
          get readonly() {
            return this.hasAttribute("readonly") || this.hasAttribute("read-only");
          }
          set readonly(e3) {
            let t3 = Boolean(e3);
            t3 ? (this.setAttribute("readonly", ""), this.setAttribute("disabled", ""), this.setAttribute("aria-readonly", "true")) : (this.removeAttribute("readonly"), this.removeAttribute("read-only"), this.removeAttribute("disabled"), this.removeAttribute("aria-readonly")), this.setOptions({ readOnly: t3 });
          }
          get disabled() {
            return this.hasAttribute("disabled");
          }
          set disabled(e3) {
            let t3 = Boolean(e3);
            t3 ? this.setAttribute("disabled", "") : this.removeAttribute("disabled"), this.setAttribute("aria-disabled", t3 ? "true" : "false"), this.setOptions({ readOnly: t3 });
          }
          get value() {
            return this.getValue();
          }
          set value(e3) {
            this.setValue(e3);
          }
          get defaultMode() {
            return this.getOption("defaultMode");
          }
          set defaultMode(e3) {
            this.setOptions({ defaultMode: e3 });
          }
          get fontsDirectory() {
            return this.getOption("fontsDirectory");
          }
          set fontsDirectory(e3) {
            this.setOptions({ fontsDirectory: e3 });
          }
          get mathModeSpace() {
            return this.getOption("mathModeSpace");
          }
          set mathModeSpace(e3) {
            this.setOptions({ mathModeSpace: e3 });
          }
          get inlineShortcutTimeout() {
            return this.getOption("inlineShortcutTimeout");
          }
          set inlineShortcutTimeout(e3) {
            this.setOptions({ inlineShortcutTimeout: e3 });
          }
          get keypressVibration() {
            return this.getOption("keypressVibration");
          }
          set keypressVibration(e3) {
            this.setOptions({ keypressVibration: e3 });
          }
          get keypressSound() {
            return this.getOption("keypressSound");
          }
          set keypressSound(e3) {
            this.setOptions({ keypressSound: e3 });
          }
          get plonkSound() {
            var e3;
            return null != (e3 = this.getOption("plonkSound")) ? e3 : null;
          }
          set plonkSound(e3) {
            this.setOptions({ plonkSound: e3 });
          }
          get letterShapeStyle() {
            return this.getOption("letterShapeStyle");
          }
          set letterShapeStyle(e3) {
            this.setOptions({ letterShapeStyle: e3 });
          }
          get locale() {
            return this.getOption("locale");
          }
          set locale(e3) {
            this.setOptions({ locale: e3 });
          }
          get readOnly() {
            return this.getOption("readOnly");
          }
          set readOnly(e3) {
            this.setOptions({ readOnly: e3 });
          }
          get removeExtraneousParentheses() {
            return this.getOption("removeExtraneousParentheses");
          }
          set removeExtraneousParentheses(e3) {
            this.setOptions({ removeExtraneousParentheses: e3 });
          }
          get smartFence() {
            return this.getOption("smartFence");
          }
          set smartFence(e3) {
            this.setOptions({ smartFence: e3 });
          }
          get smartMode() {
            return this.getOption("smartMode");
          }
          set smartMode(e3) {
            this.setOptions({ smartMode: e3 });
          }
          get smartSuperscript() {
            return this.getOption("smartSuperscript");
          }
          set smartSuperscript(e3) {
            this.setOptions({ smartSuperscript: e3 });
          }
          get speechEngine() {
            return this.getOption("speechEngine");
          }
          set speechEngine(e3) {
            this.setOptions({ speechEngine: e3 });
          }
          get speechEngineRate() {
            return this.getOption("speechEngineRate");
          }
          set speechEngineRate(e3) {
            this.setOptions({ speechEngineRate: e3 });
          }
          get speechEngineVoice() {
            return this.getOption("speechEngineVoice");
          }
          set speechEngineVoice(e3) {
            this.setOptions({ speechEngineVoice: e3 });
          }
          get textToSpeechMarkup() {
            return this.getOption("textToSpeechMarkup");
          }
          set textToSpeechMarkup(e3) {
            this.setOptions({ textToSpeechMarkup: e3 });
          }
          get textToSpeechRules() {
            return this.getOption("textToSpeechRules");
          }
          set textToSpeechRule(e3) {
            this.setOptions({ textToSpeechRules: e3 });
          }
          get virtualKeyboardLayout() {
            return this.getOption("virtualKeyboardLayout");
          }
          set virtualKeyboardLayout(e3) {
            this.setOptions({ virtualKeyboardLayout: e3 });
          }
          get virtualKeyboardMode() {
            return this.getOption("virtualKeyboardMode");
          }
          set virtualKeyboardMode(e3) {
            this.setOptions({ virtualKeyboardMode: e3 });
          }
          get virtualKeyboardTheme() {
            return this.getOption("virtualKeyboardTheme");
          }
          set virtualKeyboardTheme(e3) {
            this.setOptions({ virtualKeyboardTheme: e3 });
          }
          get virtualKeyboards() {
            return this.getOption("virtualKeyboards");
          }
          set virtualKeyboards(e3) {
            this.setOptions({ virtualKeyboards: e3 });
          }
          get useSharedVirtualKeyboard() {
            return this.getOption("useSharedVirtualKeyboard");
          }
          set useSharedVirtualKeyboard(e3) {
            this.setOptions({ useSharedVirtualKeyboard: e3 });
          }
          get sharedVirtualKeyboardTargetOrigin() {
            return this.getOption("sharedVirtualKeyboardTargetOrigin");
          }
          set sharedVirtualKeyboardTargetOrigin(e3) {
            this.setOptions({ sharedVirtualKeyboardTargetOrigin: e3 });
          }
          get selection() {
            return this._mathfield ? this._mathfield.model.selection : qn.has(this) ? qn.get(this).selection : { ranges: [[0, 0]], direction: "forward" };
          }
          set selection(e3) {
            "number" == typeof e3 && (e3 = { ranges: [[e3, e3]] }), this._mathfield ? this._mathfield.model.selection = e3 : qn.has(this) ? qn.set(this, S(_({}, qn.get(this)), { selection: e3 })) : qn.set(this, { value: void 0, selection: e3, options: Nn(this) });
          }
          get selectionIsCollapsed() {
            let e3 = this.selection;
            return 1 === e3.ranges.length && e3.ranges[0][0] === e3.ranges[0][1];
          }
          get position() {
            return this._mathfield ? this._mathfield.model.position : qn.has(this) ? qn.get(this).selection.ranges[0][0] : 0;
          }
          set position(e3) {
            this._mathfield && (this._mathfield.model.position = e3), qn.has(this) ? qn.set(this, S(_({}, qn.get(this)), { selection: { ranges: [[e3, e3]] } })) : qn.set(this, { value: void 0, selection: { ranges: [[e3, e3]] }, options: Nn(this) });
          }
          getOffsetDepth(e3) {
            var t3;
            return this._mathfield ? (null == (t3 = this._mathfield.model.at(e3)) ? void 0 : t3.treeDepth) - 2 : 0;
          }
          get lastOffset() {
            var e3, t3;
            return null != (t3 = null == (e3 = this._mathfield) ? void 0 : e3.model.lastOffset) ? t3 : -1;
          }
        };
        function Pn(e3) {
          return e3.toLowerCase().replace(/[^a-zA-Z\d]+(.)/g, (e4, t3) => t3.toUpperCase());
        }
        function Nn(e3) {
          let t3 = {}, a2 = On.optionsAttributes;
          return Object.keys(a2).forEach((r2) => {
            if (e3.hasAttribute(r2)) {
              let i2 = e3.getAttribute(r2);
              "boolean" === a2[r2] ? t3[Pn(r2)] = true : "on/off" === a2[r2] ? t3[Pn(r2)] = "on" === i2 || "off" !== i2 && void 0 : "number" === a2[r2] ? t3[Pn(r2)] = Number.parseFloat(null != i2 ? i2 : "0") : t3[Pn(r2)] = i2;
            } else "boolean" === a2[r2] && (t3[Pn(r2)] = false);
          }), t3;
        }
        var Fn, Rn, In, jn = On;
        !L() || null != (Fn = window.customElements) && Fn.get("math-field") || (null != globalThis[Rn = Symbol.for("io.cortexjs.mathlive")] || (globalThis[Rn] = {}), globalThis[Symbol.for("io.cortexjs.mathlive")].version = "0.87.0", window.MathfieldElement = On, null == (In = window.customElements) || In.define("math-field", On));
        var Vn = 1200, Hn = 3e3, Wn = 4e3;
        function Xn(e3, t3, a2 = Hn, r2 = "$0") {
          for (let i2 of t3) H[i2] && (H[i2].frequency = a2, H[i2].category = e3, H[i2].template = r2.replace(/\$0/g, i2)), X[i2] && (X[i2] = S(_({}, X[i2]), { frequency: a2, category: e3, template: r2.replace(/\$0/g, i2) }));
        }
        function Un() {
          var e3;
          return null != globalThis[e3 = Symbol.for("io.cortexjs.mathlive")] || (globalThis[e3] = {}), globalThis[Symbol.for("io.cortexjs.mathlive")];
        }
        function Jn(e3) {
          return Jn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
            return typeof e4;
          } : function(e4) {
            return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
          }, Jn(e3);
        }
        function Gn(e3, t3) {
          for (var a2 = 0; a2 < t3.length; a2++) {
            var r2 = t3[a2];
            r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(e3, (void 0, i2 = function(e4, t4) {
              if ("object" !== Jn(e4) || null === e4) return e4;
              var a3 = e4[Symbol.toPrimitive];
              if (void 0 !== a3) {
                var r3 = a3.call(e4, "string");
                if ("object" !== Jn(r3)) return r3;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(e4);
            }(r2.key), "symbol" === Jn(i2) ? i2 : String(i2)), r2);
          }
          var i2;
        }
        Xn("Trigonometry", ["\\cos", "\\sin", "\\tan"], Wn), Xn("Trigonometry", ["\\arccos", "\\arcsin", "\\arctan", "\\arctg", "\\arcctg", "\\arcsec", "\\arccsc", "\\arsinh", "\\arcosh", "\\artanh", "\\arcsech", "\\arccsch", "\\arg", "\\ch", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\lg", "\\lb", "\\sec", "\\sinh", "\\sh", "\\tanh", "\\tg", "\\th"], 2e3), Xn("Functions", ["\\ln", "\\log", "\\exp", "\\lim"], Wn), Xn("Functions", ["\\dim", "\\ker", "\\deg", "\\det", "\\mod", "\\min", "\\max"], Hn), Xn("Functions", ["\\hom"], Vn), Xn("Decoration", ["\\rule"], 200, "$0{2em}{1em}"), Xn("Decoration", ["\\color", "\\textcolor"], 200, "{$0{m0}A}{$0{m1}B}{$0{m2}C }{$0{m3}a}{$0{m4}b}{$0{m5}c}{$0{m6}8}"), Xn("Decoration", ["\\overline", "\\underline"], Hn, "$0{\\placeholder{}}"), Xn("Decoration", ["\\enclose"], Vn, '\\enclose{updiagonalstrike,roundedbox}[1px solid red, mathbackground="#fbc0bd"]{x=0}'), Xn("Decoration", ["\\fcolorbox"], Vn, '\\fcolorbox{#cd0030}{#ffd400}{\\unicode{"2B1A}}'), Xn("Decoration", ["\\colorbox"], Vn, '\\colorbox{#fbc0bd}{\\unicode{"2B1A}}'), Xn("Decoration", ["\\boxed", "\\cancel", "\\bcancel", "\\xcancel"], Vn, "$0{\\placeholder{}}"), Xn("Decoration", ["\\bbox"], Vn, '\\bbox[#ffd400, solid 2px #ffd400]{\\unicode{"2B1A}}'), Xn("Styling", ["\\mathbb"], Wn, "$0{Don Knuth}"), Xn("Styling", ["\\textbf", "\\textup", "\\textit", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textmd", "\\textsl", "\\textsc", "\\mathsf", "\\mathtt", "\\mathrm", "\\mathfrak", "\\mathcal", "\\mathscr", "\\mathbf", "\\mathmd", "\\mathit", "\\text", "\\mbox", "\\Bbb", "\\bold", "\\bm", "\\boldsymbol"], Hn, "$0{Don Knuth}"), Xn("Styling", ["\\frak", "\\tt", "\\bf", "\\it", "\\rmfamily", "\\sffamily", "\\ttfamily", "\\class", "\\cssId", "\\htmlData", "\\htmlStyle"], Vn, "{$0 Don Knuth}"), Xn("Styling", ["\\bfseries", "\\mdseries", "\\upshape", "\\slshape", "\\scshape"], Vn, "\\text{$0 Don Knuth}"), Xn("Styling", ["\\class", "\\cssId"], Vn, "$0{testIdentifier}{Don Knuth}"), Xn("Styling", ["\\fontseries"], Vn, "\\text{$0{b}Don Knuth}"), Xn("Styling", ["\\fontfamily"], Vn, "\\text{$0{cmtt}Don Knuth}"), Xn("Styling", ["\\fontshape"], Vn, "\\text{$0{sc}Don Knuth}"), Xn("Styling", ["\\selectfont"], Vn, "\\text{$0}"), Xn("Styling", ["\\emph"], Vn, "Don$0{Knuth}"), Xn("Styling", ["\\em"], Vn, "Don{$0 Knuth}"), Xn("Layout", ["\\mathop", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathord", "\\mathinner", "\\operatorname", "\\operatorname*"], Vn, "x=$0{arg}=0"), Xn("Layout", ["\\middle"], Vn, "\\left\\{x$0|x>0\\right\\}"), Xn("Layout", ["\\overset", "\\underset", "\\stackrel", "\\stackbin"], Vn, "$0{arg}{x=0}"), Xn("Layout", ["\\rlap", "\\mathrlap"], Vn, "$0{/}0"), Xn("Layout", ["\\llap", "\\mathllap"], Vn, "o$0{/}"), Xn("Fractions", ["\\frac"], Wn, "$0{\\placeholder{}}{\\placeholder{}}"), Xn("Fractions", ["\\binom", "\\dfrac", "\\tfrac", "\\dbinom", "\\tbinom", "\\pdiff", "\\cfrac"], Vn, "$0{\\placeholder{}}{\\placeholder{}}"), Xn("Fractions", ["\\over", "\\atop", "\\choose"], Vn, '\\unicode{"2B1A} $0 \\unicode{"2B1A}'), Xn("Fractions", ["\\overwithdelims", "\\atopwithdelims"], Vn, '{\\unicode{"2B1A} $0{\\lbrace}{\\rbrace} \\unicode{"2B1A}}'), Xn("Extensible Operators", ["\\sum", "\\prod", "\\bigcap", "\\bigcup", "\\int"], Wn), Xn("Extensible Operators", ["\\bigoplus", "\\smallint", "\\iint", "\\oint"], Hn), Xn("Extensible Operators", ["\\bigwedge", "\\bigvee", "\\coprod", "\\bigsqcup", "\\bigotimes", "\\bigodot", "\\biguplus", "\\intop", "\\sqcup", "\\sqcap", "\\uplus", "\\wr", "\\Cap", "\\Cup", "\\doublecap", "\\doublecup", "\\amalg", "\\iiint", "\\oiint", "\\oiiint", "\\intclockwise", "\\varointclockwise", "\\ointctrclockwise", "\\intctrclockwise"], Vn), Xn("Accents", ["\\vec"], Wn), Xn("Accents", ["\\bar", "\\ddot", "\\acute", "\\tilde", "\\check"], Hn, "$0{\\placeholder{}}"), Xn("Accents", ["\\^", "\\`", "\\'"], Vn, "$0{e}"), Xn("Accents", ["\\c"], Vn, "$0{c}"), Xn("Accents", ["\\~"], Vn, "$0{n}"), Xn("Accents", ["\\mathring", "\\hat", "\\dot", "\\breve", "\\grave"], Vn, "$0{\\placeholder{}}"), Xn("Extensible Symbols", ["\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftharpoon", "\\overrightharpoon", "\\overleftrightarrow", "\\overbrace", "\\overlinesegment", "\\overgroup", "\\widehat", "\\widecheck", "\\widetilde"], Hn, "$0{ABC}"), Xn("Extensible Symbols", ["\\underrightarrow", "\\underleftarrow", "\\underleftrightarrow", "\\underbrace", "\\underlinesegment", "\\undergroup", "\\utilde"], Hn, "$0{ABC}"), Xn("Sizing", ["\\tiny", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"], Vn, "$0{x=0}"), Xn("Sizing", ["\\big", "\\Big", "\\bigg", "\\Bigg"], Vn, "$0($0)"), Xn("Sizing", ["\\bigl", "\\Bigl", "\\biggl", "\\Biggl"], Vn, "$0("), Xn("Sizing", ["\\bigr", "\\Bigr", "\\biggr", "\\Biggr"], Vn, "$0)"), Xn("Sizing", ["\\bigm", "\\Bigm", "\\biggm", "\\Biggm"], Vn, "$0|"), Xn("Letterlike Symbols", ["\\nabla", "\\partial", "\\N", "\\R", "\\Q", "\\C", "\\Z", "\\exponentialE", "\\forall", "\\exists", "\\nexists"], Wn), Xn("Letterlike Symbols", ["\\doubleStruckCapitalP", "\\P", "\\ell", "\\hbar", "\\hslash", "\\imath", "\\jmath", "\\imaginaryI", "\\imaginaryJ", "\\differentialD", "\\rd", "\\capitalDifferentialD", "\\doubleStruckCapitalN", "\\doubleStruckCapitalR", "\\doubleStruckCapitalQ", "\\doubleStruckCapitalC", "\\doubleStruckCapitalZ", "\\rD", "\\differencedelta", "\\mid", "@", "\\Re", "\\Im", "\\$", "\\%", "\\And", "\\degree"], Hn), Xn("Letterlike Symbols", ["\\top", "\\bot", "\\scriptCapitalE", "\\scriptCapitalH", "\\scriptCapitalL", "\\gothicCapitalC", "\\gothicCapitalH", "\\gothicCapitalI", "\\gothicCapitalR", "\\Bbbk", "\\Finv", "\\Game", "\\wp", "\\eth", "\\mho", "\\pounds", "\\yen", "\\euro"], Vn), Xn("Crosses", ["\\dagger", "\\dag"], Wn), Xn("Crosses", ["\\ddag", "\\ddagger", "\\maltese", "\\textdagger", "\\textdaggerdbl"], Vn), Xn("Various", ["\\checkmark", "\\diagup", "\\diagdown", "\\angle", "\\measuredangle", "\\sphericalangle", "\\prime", "\\doubleprime", "\\backprime", "\\backdoubleprime", "\\sharp", "\\flat", "\\natural", "\\&", "\\#", "\\clubsuit", "\\spadesuit", "\\diamondsuit", "\\heartsuit", "\\backslash", "\\infty", "/", "\\_", "\\/", "|", "'"], Vn), Xn("Various", ["\\unicode"], Vn, '$0{"2B1A}'), Xn("Arrows", ["\\longrightarrow", "\\rightarrow", "\\Longrightarrow", "\\Rightarrow"], Wn), Xn("Arrows", ["\\longmapsto", "\\mapsto", "\\Longleftrightarrow", "\\rightleftarrows", "\\leftarrow", "\\curvearrowleft", "\\uparrow", "\\downarrow", "\\hookrightarrow", "\\rightharpoonup", "\\rightleftharpoons"], Hn), Xn("Arrows", ["\\Leftarrow", "\\longleftrightarrow", "\\longleftarrow", "\\Longleftarrow", "\\searrow", "\\nearrow", "\\swarrow", "\\nwarrow", "\\Uparrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "\\hookleftarrow", "\\leftharpoonup", "\\leftharpoondown", "\\rightharpoondown", "\\leftrightarrows", "\\dashrightarrow", "\\dashleftarrow", "\\leftleftarrows", "\\Lleftarrow", "\\twoheadleftarrow", "\\leftarrowtail", "\\looparrowleft", "\\leftrightharpoons", "\\circlearrowleft", "\\Lsh", "\\upuparrows", "\\downharpoonleft", "\\multimap", "\\leftrightsquigarrow", "\\twoheadrightarrow", "\\rightarrowtail", "\\looparrowright", "\\curvearrowright", "\\circlearrowright", "\\Rsh", "\\downdownarrows", "\\upharpoonright", "\\downharpoonright", "\\rightsquigarrow", "\\leadsto", "\\Rrightarrow", "\\restriction"], Vn), Xn("Arrows", ["\\upharpoonleft", "\\rightrightarrows"], 0), Xn("Negated Arrows", ["\\nrightarrow", "\\nRightarrow", "\\nleftrightarrow", "\\nLeftrightarrow", "\\nleftarrow", "\\nLeftarrow"], Vn), Xn("Extensible Symbols", ["\\xrightarrow", "\\xleftarrow", "\\xRightarrow", "\\xLeftarrow", "\\xleftharpoonup", "\\xleftharpoondown", "\\xrightharpoonup", "\\xrightharpoondown", "\\xlongequal", "\\xtwoheadleftarrow", "\\xtwoheadrightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xtofrom", "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium"], Vn, "$0[below]{above}=0"), Xn("Negated Relations", ["\\nless", "\\nleqslant", "\\lneq", "\\lneqq", "\\nleqq", "\\unlhd", "\\unrhd", "\\lvertneqq", "\\lnsim", "\\lnapprox", "\\nprec", "\\npreceq", "\\precnsim", "\\precnapprox", "\\nsim", "\\nshortmid", "\\nmid", "\\nvdash", "\\nvDash", "\\ngtr", "\\ngeqslant", "\\ngeqq", "\\gneq", "\\gneqq", "\\gvertneqq", "\\gnsim", "\\nsucc", "\\succnsim", "\\ncong", "\\nshortparallel", "\\nparallel", "\\nVDash", "\\nVdash", "\\precneqq", "\\succneqq", "\\gnapprox", "\\succnapprox", "\\nsucceq"], Vn), Xn("Hebrew", ["\\aleph", "\\beth", "\\daleth", "\\gimel"], Vn), Xn("Fences", ["\\lbrace", "\\rbrace", "\\vert", "\\Vert", "\\{", "\\}", "(", ")", "[", "]"], Wn), Xn("Fences", ["\\langle", "\\rangle", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "\\mvert", "\\|", "\\mVert"], Hn), Xn("Fences", ["\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lbrack", "\\rbrack", "\\ulcorner", "\\urcorner", "\\llcorner", "\\lrcorner", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache"], Vn), Xn("Relations", ["=", "\\ne", "\\neq", "<", ">", "\\leqslant", "\\geqslant", "\\approx"], Wn), Xn("Relations", ["\\lt", "\\gt", "\\le", "\\ge", "\\leq", "\\geq", "\\gg", "\\cong", "\\equiv", "\\prec", "\\preceq", "\\succ", "\\perp", "\\parallel", "\\propto", "\\smile", "\\frown", "\\sim", "\\gtrsim"], Hn), Xn("Relations", ["\\coloneq", "\\succeq", "\\approxeq", "\\thickapprox", "\\lessapprox", "\\gtrapprox", "\\precapprox", "\\succapprox", "\\thicksim", "\\succsim", "\\precsim", "\\backsim", "\\eqsim", "\\backsimeq", "\\simeq", "\\lesssim", "\\nleq", "\\ngeq", "\\smallsmile", "\\smallfrown", "\\bowtie", "\\asymp", "\\leqq", "\\eqslantless", "\\ll", "\\lll", "\\lessgtr", "\\lesseqgtr", "\\lesseqqgtr", "\\risingdotseq", "\\fallingdotseq", "\\preccurlyeq", "\\curlyeqprec", "\\vDash", "\\Vvdash", "\\bumpeq", "\\Bumpeq", "\\geqq", "\\eqslantgtr", "\\ggg", "\\gtrless", "\\gtreqless", "\\gtreqqless", "\\succcurlyeq", "\\curlyeqsucc", "\\Vdash", "\\shortmid", "\\shortparallel", "\\between", "\\pitchfork", "\\varpropto", "\\backepsilon", "\\llless", "\\gggtr", "\\lhd", "\\rhd", "\\Join", "\\doteq", "\\doteqdot", "\\Doteq", "\\eqcirc", "\\circeq", "\\lessdot", "\\gtrdot", "\\measeq", "\\eqdef", "\\questeq"], Vn), Xn("Logic", ["\\leftrightarrow", "\\Leftrightarrow", "\\to"], Wn), Xn("Logic", ["\\models", "\\vdash"], Hn), Xn("Logic", ["\\therefore", "\\because", "\\implies", "\\gets", "\\dashv", "\\impliedby", "\\biconditional", "\\roundimplies"], Vn), Xn("Operators", ["+", "-", "*", "\\cdot"], Wn), Xn("Operators", ["\\sqrt"], Wn, "$0{\\placeholder{}}"), Xn("Operators", ["\\pm", "\\mp", "\\times", "\\div", "\\surd"], Hn), Xn("Operators", ["\\ltimes", "\\rtimes", "\\leftthreetimes", "\\rightthreetimes", "\\intercal", "\\dotplus", "\\centerdot", "\\doublebarwedge", "\\divideontimes", "\\divides"], Vn), Xn("Logic", ["\\wedge", "\\vee", "\\neg"], Wn), Xn("Logic", ["\\lnot"], Hn), Xn("Logic", ["\\land", "\\lor", "\\barwedge", "\\veebar", "\\nor", "\\curlywedge", "\\curlyvee"], Vn), Xn("Greek", ["\\alpha", "\\beta", "\\gamma", "\\delta", "\\epsilon", "\\varepsilon", "\\zeta", "\\eta", "\\theta", "\\vartheta", "\\iota", "\\kappa", "\\varkappa", "\\lambda", "\\mu", "\\nu", "\\xi", "\\pi", "\\varpi", "\\rho", "\\varrho", "\\sigma", "\\varsigma", "\\tau", "\\phi", "\\varphi", "\\upsilon", "\\chi", "\\psi", "\\omega", "\\Gamma", "\\Delta", "\\Theta", "\\Lambda", "\\Xi", "\\Pi", "\\Sigma", "\\Upsilon", "\\Phi", "\\Psi", "\\Omega", "\\digamma", "\\omicron"], Hn), Xn("Sets", ["\\emptyset", "\\varnothing", "\\cap", "\\cup", "\\in", "\\notin", "\\subset", "\\supset", "\\subseteq", "\\supseteq", "\\sqsubseteq"], Wn), Xn("Sets", ["\\setminus", "\\not", "\\ni", "\\sqsupseteq", "\\nsupseteqq", "\\supsetneq", "\\varsupsetneq", "\\supsetneqq", "\\varsupsetneqq"], Hn), Xn("Sets", ["\\smallsetminus", "\\complement", "\\owns", "\\subsetneq", "\\varsubsetneq", "\\subsetneqq", "\\varsubsetneqq", "\\nsubset", "\\nsupset", "\\nsubseteq", "\\nsupseteq", "\\nsubseteqq", "\\subseteqq", "\\Subset", "\\sqsubset", "\\supseteqq", "\\Supset", "\\sqsupset"], Vn), Xn("Spacing", ["\\space", "\\quad", "\\qquad"], Hn, '\\unicode{"203A}$0\\unicode{"2039}'), Xn("Spacing", ["\\!", "\\,", "\\:", "\\;", "\\enskip", "\\enspace"], Vn, '\\unicode{"203A}$0\\unicode{"2039}'), Xn("Spacing", ["\\hspace", "\\hspace*"], Vn, '\\unicode{"203A}$0{1em}\\unicode{"2039}'), Xn("Punctuation", ["\\colon", "\\cdotp", "\\ldots", "\\cdots", "\\ddots", "\\vdots", "?", "!", ":", '"', ",", ".", ";"], Hn), Xn("Punctuation", ["\\mathellipsis", "\\ldotp", "\\Colon"], Vn), Xn("Boxes", ["\\square", "\\Box"], Hn), Xn("Boxes", ["\\blacksquare", "\\boxminus", "\\boxplus", "\\boxtimes", "\\boxdot"], Vn), Xn("Circles", ["\\circ", "\\bullet", "\\circleddash", "\\oplus", "\\otimes"], Hn), Xn("Circles", ["\\bigcirc", "\\circledast", "\\ominus", "\\circledcirc", "\\oslash", "\\circledS", "\\circledR", "\\odot"], Vn), Xn("Triangles", ["\\triangle", "\\triangleq"], Hn), Xn("Triangles", ["\\bigtriangleup", "\\vartriangle", "\\triangledown", "\\bigtriangledown", "\\triangleleft", "\\vartriangleleft", "\\trianglelefteq", "\\ntriangleleft", "\\ntrianglelefteq", "\\triangleright", "\\vartriangleright", "\\trianglerighteq", "\\ntriangleright", "\\ntrianglerighteq", "\\blacktriangle", "\\blacktriangledown", "\\blacktriangleleft", "\\blacktriangleright"], Vn), Xn("Shapes", ["\\ast", "\\star"], Hn), Xn("Shapes", ["\\diamond", "\\Diamond", "\\lozenge", "\\blacklozenge", "\\bigstar"], Vn);
        var Zn = function() {
          function e3(t4, a3, r2, i2) {
            !function(e4, t5) {
              if (!(e4 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), this.api = a3, this.data = t4, this.config = r2, this.readOnly = i2, this.mfe = this._createMathfield();
          }
          var t3, a2;
          return t3 = e3, (a2 = [{ key: "_createMathfield", value: function() {
            var e4 = this, t4 = new On();
            return t4.setValue(this.data.latex), t4.classList.add(this.data.type), this.readOnly ? (t4.setOptions({ virtualKeyboardMode: "off", defaultMode: "inline-math", readOnly: true }), t4) : (t4.setOptions({ virtualKeyboardMode: this.config.virtualKeyboardMode, defaultMode: this.config.defaultMode, smartMode: this.config.smartMode, readOnly: this.readOnly, virtualKeyboardTheme: this.config.virtualKeyboardTheme }), t4.addEventListener("input", function(t5) {
              t5.preventDefault(), e4.data.latex = t5.target.value, console.log(t5.target.value);
            }), t4.addEventListener("move-out", function(e5) {
              e5.preventDefault(), t4.blur();
            }), t4.addEventListener("focus-out", function(e5) {
              e5.preventDefault(), "forward" == e5.detail.direction ? t4.executeCommand("moveToMathfieldEnd") : "backward" == e5.detail.direction && t4.executeCommand("moveToMathfieldStart");
            }), t4);
          } }]) && Gn(t3.prototype, a2), Object.defineProperty(t3, "prototype", { writable: false }), e3;
        }();
        function Yn(e3) {
          return Yn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
            return typeof e4;
          } : function(e4) {
            return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
          }, Yn(e3);
        }
        function Qn(e3) {
          return function(e4) {
            if (Array.isArray(e4)) return es(e4);
          }(e3) || function(e4) {
            if ("undefined" != typeof Symbol && null != e4[Symbol.iterator] || null != e4["@@iterator"]) return Array.from(e4);
          }(e3) || function(e4, t3) {
            if (e4) {
              if ("string" == typeof e4) return es(e4, t3);
              var a2 = Object.prototype.toString.call(e4).slice(8, -1);
              return "Object" === a2 && e4.constructor && (a2 = e4.constructor.name), "Map" === a2 || "Set" === a2 ? Array.from(e4) : "Arguments" === a2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a2) ? es(e4, t3) : void 0;
            }
          }(e3) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function es(e3, t3) {
          (null == t3 || t3 > e3.length) && (t3 = e3.length);
          for (var a2 = 0, r2 = new Array(t3); a2 < t3; a2++) r2[a2] = e3[a2];
          return r2;
        }
        function ts(e3, t3) {
          for (var a2 = 0; a2 < t3.length; a2++) {
            var r2 = t3[a2];
            r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(e3, (void 0, i2 = function(e4, t4) {
              if ("object" !== Yn(e4) || null === e4) return e4;
              var a3 = e4[Symbol.toPrimitive];
              if (void 0 !== a3) {
                var r3 = a3.call(e4, "string");
                if ("object" !== Yn(r3)) return r3;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(e4);
            }(r2.key), "symbol" === Yn(i2) ? i2 : String(i2)), r2);
          }
          var i2;
        }
        var as = function() {
          function e3(t4) {
            var a3 = t4.data, r3 = t4.config, i2 = t4.api, o2 = t4.readOnly;
            !function(e4, t5) {
              if (!(e4 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), this.api = i2, this.data = { type: a3.type || e3.DEFAULT_TYPE, latex: a3.latex || e3.DEFAULT_PLACEHOLDER }, this.config = { virtualKeyboardMode: r3.virtualKeyboardMode || "manual", defaultMode: r3.defaultMode || "math", smartMode: r3.smartMode || false, virtualKeyboardTheme: r3.virtualKeyboardTheme || "material" }, this.readOnly = o2, this.mathfield = this.createMfe();
          }
          var t3, a2, r2;
          return t3 = e3, a2 = [{ key: "CSS", get: function() {
            return { settingsButton: this.api.styles.settingsButton, settingsButtonActive: this.api.styles.settingsButtonActive, wrapper: "cdx-math", wrapperForType: function(e4) {
              return "cdx-math-".concat(e4);
            } };
          } }, { key: "createMfe", value: function() {
            return new Zn(this.data, this.api, this.config, this.readOnly);
          } }, { key: "render", value: function() {
            return this.mathfield.mfe;
          } }, { key: "make", value: function(e4) {
            var t4, a3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, r3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = document.createElement(e4);
            for (var o2 in Array.isArray(a3) ? (t4 = i2.classList).add.apply(t4, Qn(a3)) : a3 && i2.classList.add(a3), r3) i2[o2] = r3[o2];
            return i2;
          } }, { key: "renderSettings", value: function() {
            var t4 = this, a3 = this.make("div");
            return e3.MATH_TYPES.forEach(function(e4) {
              var r3 = t4.make("div", [t4.CSS.wrapper, t4.CSS.settingsButton, t4.CSS.wrapperForType(e4)], { innerHTML: "M" });
              t4.data.type === e4 && r3.classList.add(t4.CSS.settingsButtonActive), r3.addEventListener("click", function() {
                t4.mathfield.mfe.classList.remove(t4.data.type), t4.mathfield.mfe.classList.add(t4.CSS.wrapperForType(e4)), t4.data.type = t4.CSS.wrapperForType(e4), a3.querySelectorAll(".".concat(t4.CSS.settingsButton)).forEach(function(e5) {
                  return e5.classList.remove(t4.CSS.settingsButtonActive);
                }), r3.classList.add(t4.CSS.settingsButtonActive);
              }), a3.appendChild(r3);
            }), a3;
          } }, { key: "save", value: function(e4) {
            return { type: this.data.type, latex: this.mathfield.data.latex };
          } }, { key: "onPaste", value: function(e4) {
            var t4 = e4.detail.data;
            this.data = { type: this.data.type, latex: t4.innerHTML || "" };
          } }], r2 = [{ key: "isReadOnlySupported", get: function() {
            return true;
          } }, { key: "enableLineBreaks", get: function() {
            return true;
          } }, { key: "toolbox", get: function() {
            return { title: "Math Editor", icon: "<box-icon name='math'></box-icon>" };
          } }, { key: "DEFAULT_PLACEHOLDER", get: function() {
            return "e=mc^2";
          } }, { key: "DEFAULT_TYPE", get: function() {
            return "cdx-math-success";
          } }, { key: "MATH_TYPES", get: function() {
            return ["primary", "secondary", "info", "success", "warning", "danger", "light", "dark", "pink", "choco"];
          } }, { key: "conversionConfig", get: function() {
            var e4 = this;
            return { export: function(e5) {
              return e5.latex;
            }, import: function(t4) {
              return { latex: t4, type: e4.DEFAULT_TYPE };
            } };
          } }, { key: "sanitize", get: function() {
            return { type: false, latex: true };
          } }], a2 && ts(t3.prototype, a2), r2 && ts(t3, r2), Object.defineProperty(t3, "prototype", { writable: false }), e3;
        }();
      })(), r.default;
    })());
  }
});
export default require_bundle();
/*! Bundled license information:

editorjs-mathlive/dist/bundle.js:
  (*! For license information please see bundle.js.LICENSE.txt *)
*/
//# sourceMappingURL=editorjs-mathlive.js.map
